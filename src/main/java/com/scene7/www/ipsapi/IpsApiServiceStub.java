/**
 * IpsApiServiceStub.java
 * <p>
 * This file was auto-generated from WSDL
 * by the Apache Axis2 version: 1.6.2  Built on : Apr 17, 2012 (05:33:49 IST)
 */
package com.scene7.www.ipsapi;



        /*
        *  IpsApiServiceStub java implementation
        */

public class IpsApiServiceStub extends org.apache.axis2.client.Stub
        implements IpsApiService {
    private static int counter = 0;
    protected org.apache.axis2.description.AxisOperation[] _operations;
    //hashmaps to keep the fault mapping
    private java.util.HashMap faultExceptionNameMap = new java.util.HashMap();
    private java.util.HashMap faultExceptionClassNameMap = new java.util.HashMap();
    private java.util.HashMap faultMessageMap = new java.util.HashMap();
    private javax.xml.namespace.QName[] opNameArray = null;

    /**
     * Constructor that takes in a configContext
     */

    public IpsApiServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext,
            java.lang.String targetEndpoint)
            throws org.apache.axis2.AxisFault {
        this(configurationContext, targetEndpoint, false);
    }

    /**
     * Constructor that takes in a configContext  and useseperate listner
     */
    public IpsApiServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext,
            java.lang.String targetEndpoint, boolean useSeparateListener)
            throws org.apache.axis2.AxisFault {
        //To populate AxisService
        populateAxisService();
        populateFaults();

        _serviceClient = new org.apache.axis2.client.ServiceClient(configurationContext, _service);

        _serviceClient.getOptions().setTo(new org.apache.axis2.addressing.EndpointReference(
                targetEndpoint));
        _serviceClient.getOptions().setUseSeparateListener(useSeparateListener);

        //Set the soap version
        _serviceClient.getOptions().setSoapVersionURI(org.apache.axiom.soap.SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);

    }

    /**
     * Default Constructor
     */
    public IpsApiServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext) throws org.apache.axis2.AxisFault {

        this(configurationContext, "http://s7geminiapi.macromedia.com:80/scene7/services/IpsApiService");

    }

    /**
     * Default Constructor
     */
    public IpsApiServiceStub() throws org.apache.axis2.AxisFault {

        this("http://s7geminiapi.macromedia.com:80/scene7/services/IpsApiService");

    }

    /**
     * Constructor taking the target endpoint
     */
    public IpsApiServiceStub(java.lang.String targetEndpoint) throws org.apache.axis2.AxisFault {
        this(null, targetEndpoint);
    }

    private static synchronized java.lang.String getUniqueSuffix() {
        // reset the counter if it is greater than 99999
        if (counter > 99999) {
            counter = 0;
        }
        counter = counter + 1;
        return java.lang.Long.toString(java.lang.System.currentTimeMillis()) + "_" + counter;
    }

    private void populateAxisService() throws org.apache.axis2.AxisFault {

        //creating the Service with a unique name
        _service = new org.apache.axis2.description.AxisService("IpsApiService" + getUniqueSuffix());
        addAnonymousOperations();

        //creating the operations
        org.apache.axis2.description.AxisOperation __operation;

        _operations = new org.apache.axis2.description.AxisOperation[174];

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setFolderPermissions"));
        _service.addOperation(__operation);

        _operations[0] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeAssetPermissions"));
        _service.addOperation(__operation);

        _operations[1] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "submitJob"));
        _service.addOperation(__operation);

        _operations[2] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "replaceImage"));
        _service.addOperation(__operation);

        _operations[3] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAllCompanies"));
        _service.addOperation(__operation);

        _operations[4] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteAssetMetadata"));
        _service.addOperation(__operation);

        _operations[5] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "checkLogin"));
        _service.addOperation(__operation);

        _operations[6] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getDistinctMetadataValues"));
        _service.addOperation(__operation);

        _operations[7] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateImageSet"));
        _service.addOperation(__operation);

        _operations[8] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssetPublishHistory"));
        _service.addOperation(__operation);

        _operations[9] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setCompanySettings"));
        _service.addOperation(__operation);

        _operations[10] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getMetadataSchemaNamespaces"));
        _service.addOperation(__operation);

        _operations[11] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getPropertySets"));
        _service.addOperation(__operation);

        _operations[12] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "applyMetadataTemplate"));
        _service.addOperation(__operation);

        _operations[13] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteGroup"));
        _service.addOperation(__operation);

        _operations[14] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssets"));
        _service.addOperation(__operation);

        _operations[15] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getCompanySettings"));
        _service.addOperation(__operation);

        _operations[16] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deletePropertySet"));
        _service.addOperation(__operation);

        _operations[17] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getActiveJobs"));
        _service.addOperation(__operation);

        _operations[18] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "copyImage"));
        _service.addOperation(__operation);

        _operations[19] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "batchSetFontFields"));
        _service.addOperation(__operation);

        _operations[20] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getPropertySetType"));
        _service.addOperation(__operation);

        _operations[21] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeCompanyMembership"));
        _service.addOperation(__operation);

        _operations[22] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "batchSetImageFields"));
        _service.addOperation(__operation);

        _operations[23] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "saveImageMap"));
        _service.addOperation(__operation);

        _operations[24] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getScheduledJobs"));
        _service.addOperation(__operation);

        _operations[25] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setAssetsPublishState"));
        _service.addOperation(__operation);

        _operations[26] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getUserInfo"));
        _service.addOperation(__operation);

        _operations[27] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteAsset"));
        _service.addOperation(__operation);

        _operations[28] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getImageServingPublishSettings"));
        _service.addOperation(__operation);

        _operations[29] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setPassword"));
        _service.addOperation(__operation);

        _operations[30] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setAssetsContextState"));
        _service.addOperation(__operation);

        _operations[31] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateCompanyMetadata"));
        _service.addOperation(__operation);

        _operations[32] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteMetadataField"));
        _service.addOperation(__operation);

        _operations[33] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateAssetPermissions"));
        _service.addOperation(__operation);

        _operations[34] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setAssetSetDefinition"));
        _service.addOperation(__operation);

        _operations[35] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getUserChars"));
        _service.addOperation(__operation);

        _operations[36] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "renameFolder"));
        _service.addOperation(__operation);

        _operations[37] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "batchSetIccProfileFields"));
        _service.addOperation(__operation);

        _operations[38] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createProject"));
        _service.addOperation(__operation);

        _operations[39] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updatePropertySetPermissions"));
        _service.addOperation(__operation);

        _operations[40] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createVignettePublishFormat"));
        _service.addOperation(__operation);

        _operations[41] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setViewerConfigSettings"));
        _service.addOperation(__operation);

        _operations[42] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "pauseJob"));
        _service.addOperation(__operation);

        _operations[43] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addTagFieldValues"));
        _service.addOperation(__operation);

        _operations[44] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getMediaPortalEvent"));
        _service.addOperation(__operation);

        _operations[45] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getJobLogDetails"));
        _service.addOperation(__operation);

        _operations[46] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getSystemProperties"));
        _service.addOperation(__operation);

        _operations[47] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removePropertySetPermissions"));
        _service.addOperation(__operation);

        _operations[48] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssetCounts"));
        _service.addOperation(__operation);

        _operations[49] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getGroupMembership"));
        _service.addOperation(__operation);

        _operations[50] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getGenerationInfo"));
        _service.addOperation(__operation);

        _operations[51] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getZipEntries"));
        _service.addOperation(__operation);

        _operations[52] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getImageRenderingPublishSettings"));
        _service.addOperation(__operation);

        _operations[53] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getUsers"));
        _service.addOperation(__operation);

        _operations[54] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getCompanyInfo"));
        _service.addOperation(__operation);

        _operations[55] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getUniqueMetadataValues"));
        _service.addOperation(__operation);

        _operations[56] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getImageSetMembers"));
        _service.addOperation(__operation);

        _operations[57] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateXMPPacket"));
        _service.addOperation(__operation);

        _operations[58] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setImageRenderingPublishSettings"));
        _service.addOperation(__operation);

        _operations[59] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAllUsers"));
        _service.addOperation(__operation);

        _operations[60] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteTagFieldValues"));
        _service.addOperation(__operation);

        _operations[61] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getDiskUsage"));
        _service.addOperation(__operation);

        _operations[62] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createViewerPreset"));
        _service.addOperation(__operation);

        _operations[63] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "searchAssets"));
        _service.addOperation(__operation);

        _operations[64] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "executeJob"));
        _service.addOperation(__operation);

        _operations[65] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "forceRepublishAssets"));
        _service.addOperation(__operation);

        _operations[66] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssociatedAssets"));
        _service.addOperation(__operation);

        _operations[67] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "restoreAssetsFromTrash"));
        _service.addOperation(__operation);

        _operations[68] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setUserInfo"));
        _service.addOperation(__operation);

        _operations[69] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAutoCropRect"));
        _service.addOperation(__operation);

        _operations[70] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setImageMaps"));
        _service.addOperation(__operation);

        _operations[71] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updatePropertySet"));
        _service.addOperation(__operation);

        _operations[72] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteVignettePublishFormat"));
        _service.addOperation(__operation);

        _operations[73] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createDerivedAsset"));
        _service.addOperation(__operation);

        _operations[74] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setCompanyMembership"));
        _service.addOperation(__operation);

        _operations[75] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "uploadPost"));
        _service.addOperation(__operation);

        _operations[76] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addProjectAssets"));
        _service.addOperation(__operation);

        _operations[77] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getJobLogs"));
        _service.addOperation(__operation);

        _operations[78] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "resumeJob"));
        _service.addOperation(__operation);

        _operations[79] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteFolder"));
        _service.addOperation(__operation);

        _operations[80] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeMetadataSchema"));
        _service.addOperation(__operation);

        _operations[81] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "saveImageFormat"));
        _service.addOperation(__operation);

        _operations[82] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getFolderTree"));
        _service.addOperation(__operation);

        _operations[83] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setZoomTargets"));
        _service.addOperation(__operation);

        _operations[84] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssetMetadataFields"));
        _service.addOperation(__operation);

        _operations[85] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setTagFieldValues"));
        _service.addOperation(__operation);

        _operations[86] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "moveFolder"));
        _service.addOperation(__operation);

        _operations[87] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getViewerConfigSettings"));
        _service.addOperation(__operation);

        _operations[88] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getImageFormats"));
        _service.addOperation(__operation);

        _operations[89] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setImageSetMembers"));
        _service.addOperation(__operation);

        _operations[90] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "saveZoomTarget"));
        _service.addOperation(__operation);

        _operations[91] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createAssetSet"));
        _service.addOperation(__operation);

        _operations[92] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "searchAssetsByMetadata"));
        _service.addOperation(__operation);

        _operations[93] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "cdnCacheInvalidation"));
        _service.addOperation(__operation);

        _operations[94] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getPhotoshopPath"));
        _service.addOperation(__operation);

        _operations[95] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "batchGetAssetPublishContexts"));
        _service.addOperation(__operation);

        _operations[96] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "checkAssetNames"));
        _service.addOperation(__operation);

        _operations[97] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setUrlModifier"));
        _service.addOperation(__operation);

        _operations[98] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createCompanyMetadata"));
        _service.addOperation(__operation);

        _operations[99] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setImageServingPublishSettings"));
        _service.addOperation(__operation);

        _operations[100] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteZoomTarget"));
        _service.addOperation(__operation);

        _operations[101] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateFolderPermissions"));
        _service.addOperation(__operation);

        _operations[102] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createImageSet"));
        _service.addOperation(__operation);

        _operations[103] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteAssets"));
        _service.addOperation(__operation);

        _operations[104] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getProperty"));
        _service.addOperation(__operation);

        _operations[105] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "saveMetadataSchema"));
        _service.addOperation(__operation);

        _operations[106] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getPublishContexts"));
        _service.addOperation(__operation);

        _operations[107] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getCompanyMembership"));
        _service.addOperation(__operation);

        _operations[108] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateMetadataField"));
        _service.addOperation(__operation);

        _operations[109] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "renameAsset"));
        _service.addOperation(__operation);

        _operations[110] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeMask"));
        _service.addOperation(__operation);

        _operations[111] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getCompanyMetadata"));
        _service.addOperation(__operation);

        _operations[112] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setGroupMembers"));
        _service.addOperation(__operation);

        _operations[113] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addGroupMembership"));
        _service.addOperation(__operation);

        _operations[114] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "emptyAssetsFromTrash"));
        _service.addOperation(__operation);

        _operations[115] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getCdnCacheInvalidationStatus"));
        _service.addOperation(__operation);

        _operations[116] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "batchSetThumbAsset"));
        _service.addOperation(__operation);

        _operations[117] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getActivePublishContexts"));
        _service.addOperation(__operation);

        _operations[118] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "stopJob"));
        _service.addOperation(__operation);

        _operations[119] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssetJobLogs"));
        _service.addOperation(__operation);

        _operations[120] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addCompany"));
        _service.addOperation(__operation);

        _operations[121] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeProjectAssets"));
        _service.addOperation(__operation);

        _operations[122] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "batchSetAssetMetadata"));
        _service.addOperation(__operation);

        _operations[123] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeFolderPermissions"));
        _service.addOperation(__operation);

        _operations[124] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getXMPPacket"));
        _service.addOperation(__operation);

        _operations[125] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "listCompanyMetadata"));
        _service.addOperation(__operation);

        _operations[126] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getPhotoshopPathNames"));
        _service.addOperation(__operation);

        _operations[127] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssetsByName"));
        _service.addOperation(__operation);

        _operations[128] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addUser"));
        _service.addOperation(__operation);

        _operations[129] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setPropertySetPermissions"));
        _service.addOperation(__operation);

        _operations[130] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateViewerConfigSettings"));
        _service.addOperation(__operation);

        _operations[131] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createPropertySetType"));
        _service.addOperation(__operation);

        _operations[132] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteImageFormat"));
        _service.addOperation(__operation);

        _operations[133] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteJob"));
        _service.addOperation(__operation);

        _operations[134] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setAssetPermissions"));
        _service.addOperation(__operation);

        _operations[135] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateVignettePublishFormat"));
        _service.addOperation(__operation);

        _operations[136] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeGroupMembers"));
        _service.addOperation(__operation);

        _operations[137] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getMetadataFields"));
        _service.addOperation(__operation);

        _operations[138] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getVignettePublishFormats"));
        _service.addOperation(__operation);

        _operations[139] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "saveMetadataField"));
        _service.addOperation(__operation);

        _operations[140] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addCompanyMembership"));
        _service.addOperation(__operation);

        _operations[141] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setAssetMetadata"));
        _service.addOperation(__operation);

        _operations[142] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "moveAsset"));
        _service.addOperation(__operation);

        _operations[143] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createMetadataField"));
        _service.addOperation(__operation);

        _operations[144] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createFolder"));
        _service.addOperation(__operation);

        _operations[145] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getFolders"));
        _service.addOperation(__operation);

        _operations[146] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getCompanyMembers"));
        _service.addOperation(__operation);

        _operations[147] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "generatePassword"));
        _service.addOperation(__operation);

        _operations[148] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getGroups"));
        _service.addOperation(__operation);

        _operations[149] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteCompanyMetadata"));
        _service.addOperation(__operation);

        _operations[150] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addGroupMembers"));
        _service.addOperation(__operation);

        _operations[151] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateTagFieldValues"));
        _service.addOperation(__operation);

        _operations[152] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getProjects"));
        _service.addOperation(__operation);

        _operations[153] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "saveGroup"));
        _service.addOperation(__operation);

        _operations[154] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateAssetSet"));
        _service.addOperation(__operation);

        _operations[155] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addMediaPortalEvent"));
        _service.addOperation(__operation);

        _operations[156] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getOriginalFilePaths"));
        _service.addOperation(__operation);

        _operations[157] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteImageMap"));
        _service.addOperation(__operation);

        _operations[158] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeGroupMembership"));
        _service.addOperation(__operation);

        _operations[159] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setProjectAssets"));
        _service.addOperation(__operation);

        _operations[160] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getPropertySetTypes"));
        _service.addOperation(__operation);

        _operations[161] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getSearchStrings"));
        _service.addOperation(__operation);

        _operations[162] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getMetadataSchema"));
        _service.addOperation(__operation);

        _operations[163] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createTemplate"));
        _service.addOperation(__operation);

        _operations[164] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getTagFieldValues"));
        _service.addOperation(__operation);

        _operations[165] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deletePropertySetType"));
        _service.addOperation(__operation);

        _operations[166] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "renameProject"));
        _service.addOperation(__operation);

        _operations[167] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "moveAssets"));
        _service.addOperation(__operation);

        _operations[168] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setGroupMembership"));
        _service.addOperation(__operation);

        _operations[169] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteProject"));
        _service.addOperation(__operation);

        _operations[170] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createPropertySet"));
        _service.addOperation(__operation);

        _operations[171] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setAssetPublishState"));
        _service.addOperation(__operation);

        _operations[172] = __operation;

        __operation = new org.apache.axis2.description.OutInAxisOperation();

        __operation.setName(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getGroupMembers"));
        _service.addOperation(__operation);

        _operations[173] = __operation;

    }

    //populates the faults
    private void populateFaults() {

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setFolderPermissions"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setFolderPermissions"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setFolderPermissions"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setFolderPermissions"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setFolderPermissions"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setFolderPermissions"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setFolderPermissions"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setFolderPermissions"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setFolderPermissions"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeAssetPermissions"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeAssetPermissions"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeAssetPermissions"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeAssetPermissions"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeAssetPermissions"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeAssetPermissions"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeAssetPermissions"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeAssetPermissions"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeAssetPermissions"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "submitJob"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "submitJob"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "submitJob"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "submitJob"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "submitJob"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "submitJob"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "submitJob"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "submitJob"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "submitJob"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "replaceImage"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "replaceImage"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "replaceImage"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "replaceImage"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "replaceImage"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "replaceImage"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "replaceImage"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "replaceImage"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "replaceImage"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAllCompanies"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAllCompanies"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAllCompanies"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAllCompanies"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAllCompanies"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAllCompanies"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAllCompanies"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAllCompanies"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAllCompanies"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteAssetMetadata"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteAssetMetadata"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteAssetMetadata"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteAssetMetadata"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteAssetMetadata"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteAssetMetadata"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteAssetMetadata"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteAssetMetadata"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteAssetMetadata"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "checkLogin"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "checkLogin"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "checkLogin"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "checkLogin"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "checkLogin"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "checkLogin"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "checkLogin"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "checkLogin"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "checkLogin"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getDistinctMetadataValues"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getDistinctMetadataValues"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getDistinctMetadataValues"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getDistinctMetadataValues"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getDistinctMetadataValues"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getDistinctMetadataValues"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getDistinctMetadataValues"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getDistinctMetadataValues"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getDistinctMetadataValues"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateImageSet"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateImageSet"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateImageSet"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateImageSet"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateImageSet"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateImageSet"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateImageSet"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateImageSet"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateImageSet"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssetPublishHistory"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssetPublishHistory"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssetPublishHistory"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssetPublishHistory"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssetPublishHistory"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssetPublishHistory"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssetPublishHistory"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssetPublishHistory"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssetPublishHistory"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setCompanySettings"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setCompanySettings"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setCompanySettings"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setCompanySettings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setCompanySettings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setCompanySettings"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setCompanySettings"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setCompanySettings"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setCompanySettings"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getMetadataSchemaNamespaces"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getMetadataSchemaNamespaces"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getMetadataSchemaNamespaces"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getMetadataSchemaNamespaces"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getMetadataSchemaNamespaces"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getMetadataSchemaNamespaces"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getMetadataSchemaNamespaces"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getMetadataSchemaNamespaces"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getMetadataSchemaNamespaces"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getPropertySets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getPropertySets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getPropertySets"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getPropertySets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getPropertySets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getPropertySets"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getPropertySets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getPropertySets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getPropertySets"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "applyMetadataTemplate"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "applyMetadataTemplate"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "applyMetadataTemplate"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "applyMetadataTemplate"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "applyMetadataTemplate"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "applyMetadataTemplate"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "applyMetadataTemplate"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "applyMetadataTemplate"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "applyMetadataTemplate"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteGroup"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteGroup"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteGroup"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteGroup"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteGroup"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteGroup"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteGroup"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteGroup"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteGroup"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssets"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssets"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssets"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getCompanySettings"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getCompanySettings"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getCompanySettings"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getCompanySettings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getCompanySettings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getCompanySettings"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getCompanySettings"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getCompanySettings"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getCompanySettings"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deletePropertySet"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deletePropertySet"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deletePropertySet"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deletePropertySet"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deletePropertySet"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deletePropertySet"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deletePropertySet"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deletePropertySet"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deletePropertySet"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getActiveJobs"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getActiveJobs"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getActiveJobs"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getActiveJobs"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getActiveJobs"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getActiveJobs"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getActiveJobs"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getActiveJobs"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getActiveJobs"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "copyImage"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "copyImage"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "copyImage"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "copyImage"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "copyImage"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "copyImage"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "copyImage"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "copyImage"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "copyImage"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "batchSetFontFields"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "batchSetFontFields"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "batchSetFontFields"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "batchSetFontFields"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "batchSetFontFields"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "batchSetFontFields"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "batchSetFontFields"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "batchSetFontFields"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "batchSetFontFields"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getPropertySetType"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getPropertySetType"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getPropertySetType"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getPropertySetType"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getPropertySetType"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getPropertySetType"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getPropertySetType"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getPropertySetType"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getPropertySetType"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeCompanyMembership"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeCompanyMembership"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeCompanyMembership"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeCompanyMembership"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeCompanyMembership"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeCompanyMembership"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeCompanyMembership"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeCompanyMembership"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeCompanyMembership"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "batchSetImageFields"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "batchSetImageFields"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "batchSetImageFields"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "batchSetImageFields"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "batchSetImageFields"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "batchSetImageFields"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "batchSetImageFields"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "batchSetImageFields"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "batchSetImageFields"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "saveImageMap"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "saveImageMap"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "saveImageMap"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "saveImageMap"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "saveImageMap"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "saveImageMap"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "saveImageMap"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "saveImageMap"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "saveImageMap"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getScheduledJobs"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getScheduledJobs"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getScheduledJobs"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getScheduledJobs"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getScheduledJobs"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getScheduledJobs"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getScheduledJobs"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getScheduledJobs"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getScheduledJobs"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setAssetsPublishState"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setAssetsPublishState"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setAssetsPublishState"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setAssetsPublishState"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setAssetsPublishState"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setAssetsPublishState"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setAssetsPublishState"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setAssetsPublishState"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setAssetsPublishState"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getUserInfo"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getUserInfo"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getUserInfo"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getUserInfo"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getUserInfo"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getUserInfo"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getUserInfo"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getUserInfo"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getUserInfo"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteAsset"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteAsset"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteAsset"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteAsset"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteAsset"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteAsset"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteAsset"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteAsset"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteAsset"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getImageServingPublishSettings"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getImageServingPublishSettings"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getImageServingPublishSettings"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getImageServingPublishSettings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getImageServingPublishSettings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getImageServingPublishSettings"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getImageServingPublishSettings"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getImageServingPublishSettings"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getImageServingPublishSettings"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setPassword"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setPassword"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setPassword"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setPassword"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setPassword"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setPassword"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setPassword"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setPassword"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setPassword"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setAssetsContextState"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setAssetsContextState"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setAssetsContextState"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setAssetsContextState"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setAssetsContextState"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setAssetsContextState"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setAssetsContextState"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setAssetsContextState"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setAssetsContextState"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateCompanyMetadata"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateCompanyMetadata"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateCompanyMetadata"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateCompanyMetadata"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateCompanyMetadata"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteMetadataField"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteMetadataField"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteMetadataField"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteMetadataField"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteMetadataField"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteMetadataField"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteMetadataField"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteMetadataField"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteMetadataField"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateAssetPermissions"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateAssetPermissions"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateAssetPermissions"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateAssetPermissions"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateAssetPermissions"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateAssetPermissions"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateAssetPermissions"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateAssetPermissions"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateAssetPermissions"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setAssetSetDefinition"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setAssetSetDefinition"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setAssetSetDefinition"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setAssetSetDefinition"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setAssetSetDefinition"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setAssetSetDefinition"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setAssetSetDefinition"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setAssetSetDefinition"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setAssetSetDefinition"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getUserChars"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getUserChars"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getUserChars"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getUserChars"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getUserChars"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getUserChars"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getUserChars"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getUserChars"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getUserChars"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "renameFolder"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "renameFolder"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "renameFolder"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "renameFolder"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "renameFolder"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "renameFolder"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "renameFolder"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "renameFolder"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "renameFolder"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "batchSetIccProfileFields"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "batchSetIccProfileFields"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "batchSetIccProfileFields"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "batchSetIccProfileFields"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "batchSetIccProfileFields"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "batchSetIccProfileFields"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "batchSetIccProfileFields"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "batchSetIccProfileFields"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "batchSetIccProfileFields"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createProject"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createProject"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createProject"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createProject"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createProject"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createProject"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createProject"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createProject"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createProject"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updatePropertySetPermissions"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updatePropertySetPermissions"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updatePropertySetPermissions"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updatePropertySetPermissions"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updatePropertySetPermissions"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updatePropertySetPermissions"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updatePropertySetPermissions"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updatePropertySetPermissions"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updatePropertySetPermissions"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createVignettePublishFormat"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createVignettePublishFormat"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createVignettePublishFormat"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createVignettePublishFormat"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createVignettePublishFormat"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createVignettePublishFormat"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createVignettePublishFormat"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createVignettePublishFormat"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createVignettePublishFormat"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setViewerConfigSettings"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setViewerConfigSettings"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setViewerConfigSettings"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setViewerConfigSettings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setViewerConfigSettings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setViewerConfigSettings"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setViewerConfigSettings"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setViewerConfigSettings"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setViewerConfigSettings"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "pauseJob"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "pauseJob"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "pauseJob"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "pauseJob"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "pauseJob"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "pauseJob"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "pauseJob"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "pauseJob"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "pauseJob"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addTagFieldValues"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addTagFieldValues"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addTagFieldValues"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addTagFieldValues"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addTagFieldValues"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addTagFieldValues"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addTagFieldValues"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addTagFieldValues"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addTagFieldValues"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getMediaPortalEvent"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getMediaPortalEvent"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getMediaPortalEvent"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getMediaPortalEvent"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getMediaPortalEvent"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getMediaPortalEvent"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getMediaPortalEvent"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getMediaPortalEvent"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getMediaPortalEvent"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getJobLogDetails"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getJobLogDetails"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getJobLogDetails"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getJobLogDetails"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getJobLogDetails"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getJobLogDetails"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getJobLogDetails"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getJobLogDetails"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getJobLogDetails"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getSystemProperties"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getSystemProperties"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getSystemProperties"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getSystemProperties"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getSystemProperties"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getSystemProperties"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getSystemProperties"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getSystemProperties"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getSystemProperties"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removePropertySetPermissions"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removePropertySetPermissions"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removePropertySetPermissions"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removePropertySetPermissions"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removePropertySetPermissions"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removePropertySetPermissions"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removePropertySetPermissions"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removePropertySetPermissions"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removePropertySetPermissions"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssetCounts"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssetCounts"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssetCounts"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssetCounts"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssetCounts"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssetCounts"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssetCounts"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssetCounts"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssetCounts"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getGroupMembership"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getGroupMembership"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getGroupMembership"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getGroupMembership"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getGroupMembership"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getGroupMembership"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getGroupMembership"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getGroupMembership"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getGroupMembership"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getGenerationInfo"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getGenerationInfo"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getGenerationInfo"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getGenerationInfo"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getGenerationInfo"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getGenerationInfo"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getGenerationInfo"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getGenerationInfo"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getGenerationInfo"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getZipEntries"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getZipEntries"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getZipEntries"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getZipEntries"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getZipEntries"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getZipEntries"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getZipEntries"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getZipEntries"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getZipEntries"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"),
                "getImageRenderingPublishSettings"), "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"),
                "getImageRenderingPublishSettings"), "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"),
                "getImageRenderingPublishSettings"), "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getImageRenderingPublishSettings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getImageRenderingPublishSettings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getImageRenderingPublishSettings"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"),
                "getImageRenderingPublishSettings"), "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"),
                "getImageRenderingPublishSettings"), "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"),
                "getImageRenderingPublishSettings"), "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getUsers"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getUsers"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getUsers"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getUsers"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getUsers"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getUsers"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getUsers"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getUsers"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getUsers"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getCompanyInfo"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getCompanyInfo"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getCompanyInfo"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getCompanyInfo"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getCompanyInfo"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getCompanyInfo"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getCompanyInfo"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getCompanyInfo"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getCompanyInfo"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getUniqueMetadataValues"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getUniqueMetadataValues"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getUniqueMetadataValues"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getUniqueMetadataValues"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getUniqueMetadataValues"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getUniqueMetadataValues"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getUniqueMetadataValues"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getUniqueMetadataValues"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getUniqueMetadataValues"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getImageSetMembers"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getImageSetMembers"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getImageSetMembers"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getImageSetMembers"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getImageSetMembers"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getImageSetMembers"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getImageSetMembers"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getImageSetMembers"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getImageSetMembers"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateXMPPacket"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateXMPPacket"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateXMPPacket"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateXMPPacket"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateXMPPacket"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateXMPPacket"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateXMPPacket"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateXMPPacket"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateXMPPacket"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"),
                "setImageRenderingPublishSettings"), "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"),
                "setImageRenderingPublishSettings"), "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"),
                "setImageRenderingPublishSettings"), "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setImageRenderingPublishSettings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setImageRenderingPublishSettings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setImageRenderingPublishSettings"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"),
                "setImageRenderingPublishSettings"), "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"),
                "setImageRenderingPublishSettings"), "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"),
                "setImageRenderingPublishSettings"), "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAllUsers"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAllUsers"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAllUsers"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAllUsers"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAllUsers"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAllUsers"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAllUsers"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAllUsers"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAllUsers"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteTagFieldValues"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteTagFieldValues"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteTagFieldValues"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteTagFieldValues"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteTagFieldValues"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteTagFieldValues"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteTagFieldValues"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteTagFieldValues"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteTagFieldValues"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getDiskUsage"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getDiskUsage"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getDiskUsage"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getDiskUsage"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getDiskUsage"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getDiskUsage"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getDiskUsage"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getDiskUsage"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getDiskUsage"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createViewerPreset"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createViewerPreset"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createViewerPreset"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createViewerPreset"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createViewerPreset"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createViewerPreset"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createViewerPreset"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createViewerPreset"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createViewerPreset"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "searchAssets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "searchAssets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "searchAssets"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "searchAssets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "searchAssets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "searchAssets"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "searchAssets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "searchAssets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "searchAssets"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "executeJob"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "executeJob"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "executeJob"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "executeJob"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "executeJob"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "executeJob"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "executeJob"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "executeJob"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "executeJob"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "forceRepublishAssets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "forceRepublishAssets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "forceRepublishAssets"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "forceRepublishAssets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "forceRepublishAssets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "forceRepublishAssets"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "forceRepublishAssets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "forceRepublishAssets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "forceRepublishAssets"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssociatedAssets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssociatedAssets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssociatedAssets"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssociatedAssets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssociatedAssets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssociatedAssets"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssociatedAssets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssociatedAssets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssociatedAssets"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "restoreAssetsFromTrash"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "restoreAssetsFromTrash"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "restoreAssetsFromTrash"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "restoreAssetsFromTrash"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "restoreAssetsFromTrash"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "restoreAssetsFromTrash"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "restoreAssetsFromTrash"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "restoreAssetsFromTrash"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "restoreAssetsFromTrash"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setUserInfo"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setUserInfo"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setUserInfo"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setUserInfo"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setUserInfo"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setUserInfo"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setUserInfo"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setUserInfo"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setUserInfo"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAutoCropRect"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAutoCropRect"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAutoCropRect"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAutoCropRect"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAutoCropRect"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAutoCropRect"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAutoCropRect"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAutoCropRect"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAutoCropRect"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setImageMaps"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setImageMaps"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setImageMaps"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setImageMaps"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setImageMaps"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setImageMaps"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setImageMaps"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setImageMaps"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setImageMaps"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updatePropertySet"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updatePropertySet"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updatePropertySet"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updatePropertySet"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updatePropertySet"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updatePropertySet"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updatePropertySet"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updatePropertySet"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updatePropertySet"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteVignettePublishFormat"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteVignettePublishFormat"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteVignettePublishFormat"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteVignettePublishFormat"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteVignettePublishFormat"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteVignettePublishFormat"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteVignettePublishFormat"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteVignettePublishFormat"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteVignettePublishFormat"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createDerivedAsset"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createDerivedAsset"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createDerivedAsset"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createDerivedAsset"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createDerivedAsset"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createDerivedAsset"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createDerivedAsset"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createDerivedAsset"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createDerivedAsset"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setCompanyMembership"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setCompanyMembership"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setCompanyMembership"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setCompanyMembership"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setCompanyMembership"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setCompanyMembership"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setCompanyMembership"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setCompanyMembership"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setCompanyMembership"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "uploadPost"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "uploadPost"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "uploadPost"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "uploadPost"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "uploadPost"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "uploadPost"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "uploadPost"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "uploadPost"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "uploadPost"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addProjectAssets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addProjectAssets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addProjectAssets"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addProjectAssets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addProjectAssets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addProjectAssets"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addProjectAssets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addProjectAssets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addProjectAssets"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getJobLogs"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getJobLogs"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getJobLogs"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getJobLogs"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getJobLogs"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getJobLogs"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getJobLogs"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getJobLogs"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getJobLogs"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "resumeJob"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "resumeJob"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "resumeJob"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "resumeJob"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "resumeJob"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "resumeJob"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "resumeJob"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "resumeJob"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "resumeJob"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteFolder"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteFolder"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteFolder"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteFolder"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteFolder"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteFolder"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteFolder"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteFolder"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteFolder"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeMetadataSchema"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeMetadataSchema"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeMetadataSchema"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeMetadataSchema"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeMetadataSchema"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeMetadataSchema"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeMetadataSchema"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeMetadataSchema"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeMetadataSchema"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "saveImageFormat"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "saveImageFormat"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "saveImageFormat"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "saveImageFormat"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "saveImageFormat"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "saveImageFormat"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "saveImageFormat"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "saveImageFormat"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "saveImageFormat"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getFolderTree"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getFolderTree"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getFolderTree"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getFolderTree"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getFolderTree"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getFolderTree"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getFolderTree"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getFolderTree"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getFolderTree"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setZoomTargets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setZoomTargets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setZoomTargets"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setZoomTargets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setZoomTargets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setZoomTargets"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setZoomTargets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setZoomTargets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setZoomTargets"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssetMetadataFields"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssetMetadataFields"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssetMetadataFields"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssetMetadataFields"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssetMetadataFields"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssetMetadataFields"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssetMetadataFields"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssetMetadataFields"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssetMetadataFields"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setTagFieldValues"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setTagFieldValues"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setTagFieldValues"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setTagFieldValues"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setTagFieldValues"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setTagFieldValues"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setTagFieldValues"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setTagFieldValues"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setTagFieldValues"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "moveFolder"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "moveFolder"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "moveFolder"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "moveFolder"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "moveFolder"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "moveFolder"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "moveFolder"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "moveFolder"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "moveFolder"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getViewerConfigSettings"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getViewerConfigSettings"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getViewerConfigSettings"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getViewerConfigSettings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getViewerConfigSettings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getViewerConfigSettings"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getViewerConfigSettings"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getViewerConfigSettings"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getViewerConfigSettings"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getImageFormats"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getImageFormats"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getImageFormats"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getImageFormats"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getImageFormats"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getImageFormats"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getImageFormats"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getImageFormats"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getImageFormats"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setImageSetMembers"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setImageSetMembers"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setImageSetMembers"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setImageSetMembers"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setImageSetMembers"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setImageSetMembers"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setImageSetMembers"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setImageSetMembers"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setImageSetMembers"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "saveZoomTarget"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "saveZoomTarget"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "saveZoomTarget"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "saveZoomTarget"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "saveZoomTarget"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "saveZoomTarget"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "saveZoomTarget"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "saveZoomTarget"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "saveZoomTarget"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createAssetSet"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createAssetSet"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createAssetSet"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createAssetSet"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createAssetSet"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createAssetSet"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createAssetSet"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createAssetSet"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createAssetSet"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "searchAssetsByMetadata"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "searchAssetsByMetadata"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "searchAssetsByMetadata"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "searchAssetsByMetadata"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "searchAssetsByMetadata"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "searchAssetsByMetadata"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "searchAssetsByMetadata"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "searchAssetsByMetadata"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "searchAssetsByMetadata"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "cdnCacheInvalidation"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "cdnCacheInvalidation"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "cdnCacheInvalidation"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "cdnCacheInvalidation"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "cdnCacheInvalidation"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "cdnCacheInvalidation"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "cdnCacheInvalidation"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "cdnCacheInvalidation"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "cdnCacheInvalidation"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getPhotoshopPath"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getPhotoshopPath"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getPhotoshopPath"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getPhotoshopPath"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getPhotoshopPath"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getPhotoshopPath"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getPhotoshopPath"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getPhotoshopPath"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getPhotoshopPath"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "batchGetAssetPublishContexts"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "batchGetAssetPublishContexts"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "batchGetAssetPublishContexts"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "batchGetAssetPublishContexts"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "batchGetAssetPublishContexts"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "batchGetAssetPublishContexts"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "batchGetAssetPublishContexts"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "batchGetAssetPublishContexts"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "batchGetAssetPublishContexts"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "checkAssetNames"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "checkAssetNames"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "checkAssetNames"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "checkAssetNames"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "checkAssetNames"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "checkAssetNames"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "checkAssetNames"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "checkAssetNames"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "checkAssetNames"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setUrlModifier"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setUrlModifier"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setUrlModifier"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setUrlModifier"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setUrlModifier"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setUrlModifier"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setUrlModifier"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setUrlModifier"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setUrlModifier"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createCompanyMetadata"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createCompanyMetadata"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createCompanyMetadata"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createCompanyMetadata"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createCompanyMetadata"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setImageServingPublishSettings"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setImageServingPublishSettings"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setImageServingPublishSettings"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setImageServingPublishSettings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setImageServingPublishSettings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setImageServingPublishSettings"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setImageServingPublishSettings"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setImageServingPublishSettings"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setImageServingPublishSettings"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteZoomTarget"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteZoomTarget"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteZoomTarget"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteZoomTarget"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteZoomTarget"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteZoomTarget"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteZoomTarget"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteZoomTarget"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteZoomTarget"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateFolderPermissions"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateFolderPermissions"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateFolderPermissions"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateFolderPermissions"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateFolderPermissions"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateFolderPermissions"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateFolderPermissions"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateFolderPermissions"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateFolderPermissions"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createImageSet"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createImageSet"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createImageSet"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createImageSet"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createImageSet"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createImageSet"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createImageSet"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createImageSet"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createImageSet"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteAssets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteAssets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteAssets"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteAssets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteAssets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteAssets"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteAssets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteAssets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteAssets"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getProperty"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getProperty"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getProperty"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getProperty"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getProperty"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getProperty"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getProperty"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getProperty"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getProperty"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "saveMetadataSchema"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "saveMetadataSchema"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "saveMetadataSchema"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "saveMetadataSchema"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "saveMetadataSchema"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "saveMetadataSchema"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "saveMetadataSchema"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "saveMetadataSchema"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "saveMetadataSchema"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getPublishContexts"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getPublishContexts"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getPublishContexts"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getPublishContexts"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getPublishContexts"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getPublishContexts"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getPublishContexts"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getPublishContexts"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getPublishContexts"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getCompanyMembership"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getCompanyMembership"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getCompanyMembership"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getCompanyMembership"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getCompanyMembership"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getCompanyMembership"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getCompanyMembership"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getCompanyMembership"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getCompanyMembership"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateMetadataField"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateMetadataField"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateMetadataField"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateMetadataField"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateMetadataField"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateMetadataField"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateMetadataField"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateMetadataField"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateMetadataField"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "renameAsset"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "renameAsset"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "renameAsset"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "renameAsset"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "renameAsset"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "renameAsset"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "renameAsset"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "renameAsset"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "renameAsset"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeMask"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeMask"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeMask"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeMask"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeMask"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeMask"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeMask"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeMask"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeMask"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getCompanyMetadata"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getCompanyMetadata"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getCompanyMetadata"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getCompanyMetadata"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getCompanyMetadata"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setGroupMembers"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setGroupMembers"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setGroupMembers"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setGroupMembers"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setGroupMembers"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setGroupMembers"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setGroupMembers"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setGroupMembers"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setGroupMembers"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addGroupMembership"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addGroupMembership"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addGroupMembership"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addGroupMembership"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addGroupMembership"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addGroupMembership"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addGroupMembership"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addGroupMembership"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addGroupMembership"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "emptyAssetsFromTrash"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "emptyAssetsFromTrash"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "emptyAssetsFromTrash"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "emptyAssetsFromTrash"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "emptyAssetsFromTrash"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "emptyAssetsFromTrash"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "emptyAssetsFromTrash"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "emptyAssetsFromTrash"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "emptyAssetsFromTrash"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getCdnCacheInvalidationStatus"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getCdnCacheInvalidationStatus"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getCdnCacheInvalidationStatus"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getCdnCacheInvalidationStatus"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getCdnCacheInvalidationStatus"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getCdnCacheInvalidationStatus"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getCdnCacheInvalidationStatus"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getCdnCacheInvalidationStatus"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getCdnCacheInvalidationStatus"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "batchSetThumbAsset"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "batchSetThumbAsset"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "batchSetThumbAsset"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "batchSetThumbAsset"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "batchSetThumbAsset"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "batchSetThumbAsset"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "batchSetThumbAsset"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "batchSetThumbAsset"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "batchSetThumbAsset"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getActivePublishContexts"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getActivePublishContexts"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getActivePublishContexts"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getActivePublishContexts"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getActivePublishContexts"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getActivePublishContexts"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getActivePublishContexts"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getActivePublishContexts"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getActivePublishContexts"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "stopJob"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "stopJob"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "stopJob"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "stopJob"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "stopJob"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "stopJob"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "stopJob"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "stopJob"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "stopJob"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssetJobLogs"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssetJobLogs"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssetJobLogs"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssetJobLogs"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssetJobLogs"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssetJobLogs"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssetJobLogs"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssetJobLogs"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssetJobLogs"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addCompany"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addCompany"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addCompany"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addCompany"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addCompany"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addCompany"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addCompany"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addCompany"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addCompany"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeProjectAssets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeProjectAssets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeProjectAssets"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeProjectAssets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeProjectAssets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeProjectAssets"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeProjectAssets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeProjectAssets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeProjectAssets"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "batchSetAssetMetadata"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "batchSetAssetMetadata"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "batchSetAssetMetadata"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "batchSetAssetMetadata"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "batchSetAssetMetadata"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "batchSetAssetMetadata"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "batchSetAssetMetadata"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "batchSetAssetMetadata"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "batchSetAssetMetadata"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeFolderPermissions"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeFolderPermissions"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeFolderPermissions"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeFolderPermissions"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeFolderPermissions"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeFolderPermissions"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeFolderPermissions"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeFolderPermissions"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeFolderPermissions"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getXMPPacket"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getXMPPacket"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getXMPPacket"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getXMPPacket"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getXMPPacket"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getXMPPacket"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getXMPPacket"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getXMPPacket"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getXMPPacket"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "listCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "listCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "listCompanyMetadata"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "listCompanyMetadata"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "listCompanyMetadata"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "listCompanyMetadata"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "listCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "listCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "listCompanyMetadata"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getPhotoshopPathNames"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getPhotoshopPathNames"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getPhotoshopPathNames"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getPhotoshopPathNames"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getPhotoshopPathNames"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getPhotoshopPathNames"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getPhotoshopPathNames"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getPhotoshopPathNames"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getPhotoshopPathNames"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssetsByName"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssetsByName"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getAssetsByName"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssetsByName"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssetsByName"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getAssetsByName"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssetsByName"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssetsByName"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getAssetsByName"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addUser"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addUser"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addUser"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addUser"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addUser"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addUser"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addUser"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addUser"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addUser"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setPropertySetPermissions"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setPropertySetPermissions"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setPropertySetPermissions"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setPropertySetPermissions"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setPropertySetPermissions"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setPropertySetPermissions"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setPropertySetPermissions"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setPropertySetPermissions"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setPropertySetPermissions"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateViewerConfigSettings"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateViewerConfigSettings"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateViewerConfigSettings"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateViewerConfigSettings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateViewerConfigSettings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateViewerConfigSettings"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateViewerConfigSettings"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateViewerConfigSettings"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateViewerConfigSettings"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createPropertySetType"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createPropertySetType"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createPropertySetType"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createPropertySetType"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createPropertySetType"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createPropertySetType"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createPropertySetType"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createPropertySetType"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createPropertySetType"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteImageFormat"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteImageFormat"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteImageFormat"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteImageFormat"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteImageFormat"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteImageFormat"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteImageFormat"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteImageFormat"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteImageFormat"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteJob"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteJob"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteJob"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteJob"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteJob"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteJob"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteJob"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteJob"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteJob"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setAssetPermissions"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setAssetPermissions"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setAssetPermissions"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setAssetPermissions"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setAssetPermissions"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setAssetPermissions"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setAssetPermissions"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setAssetPermissions"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setAssetPermissions"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateVignettePublishFormat"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateVignettePublishFormat"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateVignettePublishFormat"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateVignettePublishFormat"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateVignettePublishFormat"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateVignettePublishFormat"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateVignettePublishFormat"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateVignettePublishFormat"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateVignettePublishFormat"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeGroupMembers"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeGroupMembers"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeGroupMembers"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeGroupMembers"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeGroupMembers"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeGroupMembers"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeGroupMembers"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeGroupMembers"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeGroupMembers"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getMetadataFields"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getMetadataFields"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getMetadataFields"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getMetadataFields"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getMetadataFields"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getMetadataFields"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getMetadataFields"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getMetadataFields"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getMetadataFields"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getVignettePublishFormats"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getVignettePublishFormats"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getVignettePublishFormats"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getVignettePublishFormats"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getVignettePublishFormats"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getVignettePublishFormats"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getVignettePublishFormats"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getVignettePublishFormats"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getVignettePublishFormats"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "saveMetadataField"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "saveMetadataField"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "saveMetadataField"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "saveMetadataField"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "saveMetadataField"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "saveMetadataField"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "saveMetadataField"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "saveMetadataField"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "saveMetadataField"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addCompanyMembership"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addCompanyMembership"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addCompanyMembership"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addCompanyMembership"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addCompanyMembership"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addCompanyMembership"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addCompanyMembership"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addCompanyMembership"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addCompanyMembership"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setAssetMetadata"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setAssetMetadata"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setAssetMetadata"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setAssetMetadata"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setAssetMetadata"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setAssetMetadata"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setAssetMetadata"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setAssetMetadata"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setAssetMetadata"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "moveAsset"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "moveAsset"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "moveAsset"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "moveAsset"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "moveAsset"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "moveAsset"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "moveAsset"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "moveAsset"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "moveAsset"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createMetadataField"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createMetadataField"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createMetadataField"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createMetadataField"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createMetadataField"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createMetadataField"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createMetadataField"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createMetadataField"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createMetadataField"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createFolder"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createFolder"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createFolder"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createFolder"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createFolder"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createFolder"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createFolder"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createFolder"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createFolder"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getFolders"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getFolders"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getFolders"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getFolders"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getFolders"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getFolders"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getFolders"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getFolders"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getFolders"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getCompanyMembers"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getCompanyMembers"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getCompanyMembers"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getCompanyMembers"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getCompanyMembers"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getCompanyMembers"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getCompanyMembers"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getCompanyMembers"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getCompanyMembers"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "generatePassword"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "generatePassword"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "generatePassword"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "generatePassword"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "generatePassword"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "generatePassword"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "generatePassword"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "generatePassword"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "generatePassword"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getGroups"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getGroups"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getGroups"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getGroups"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getGroups"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getGroups"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getGroups"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getGroups"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getGroups"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteCompanyMetadata"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteCompanyMetadata"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteCompanyMetadata"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteCompanyMetadata"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteCompanyMetadata"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteCompanyMetadata"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addGroupMembers"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addGroupMembers"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addGroupMembers"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addGroupMembers"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addGroupMembers"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addGroupMembers"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addGroupMembers"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addGroupMembers"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addGroupMembers"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateTagFieldValues"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateTagFieldValues"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateTagFieldValues"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateTagFieldValues"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateTagFieldValues"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateTagFieldValues"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateTagFieldValues"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateTagFieldValues"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateTagFieldValues"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getProjects"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getProjects"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getProjects"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getProjects"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getProjects"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getProjects"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getProjects"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getProjects"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getProjects"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "saveGroup"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "saveGroup"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "saveGroup"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "saveGroup"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "saveGroup"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "saveGroup"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "saveGroup"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "saveGroup"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "saveGroup"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateAssetSet"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateAssetSet"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "updateAssetSet"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateAssetSet"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateAssetSet"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "updateAssetSet"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateAssetSet"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateAssetSet"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "updateAssetSet"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addMediaPortalEvent"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addMediaPortalEvent"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "addMediaPortalEvent"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addMediaPortalEvent"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addMediaPortalEvent"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "addMediaPortalEvent"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addMediaPortalEvent"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addMediaPortalEvent"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "addMediaPortalEvent"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getOriginalFilePaths"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getOriginalFilePaths"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getOriginalFilePaths"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getOriginalFilePaths"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getOriginalFilePaths"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getOriginalFilePaths"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getOriginalFilePaths"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getOriginalFilePaths"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getOriginalFilePaths"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteImageMap"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteImageMap"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteImageMap"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteImageMap"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteImageMap"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteImageMap"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteImageMap"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteImageMap"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteImageMap"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeGroupMembership"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeGroupMembership"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "removeGroupMembership"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeGroupMembership"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeGroupMembership"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "removeGroupMembership"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeGroupMembership"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeGroupMembership"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "removeGroupMembership"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setProjectAssets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setProjectAssets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setProjectAssets"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setProjectAssets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setProjectAssets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setProjectAssets"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setProjectAssets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setProjectAssets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setProjectAssets"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getPropertySetTypes"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getPropertySetTypes"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getPropertySetTypes"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getPropertySetTypes"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getPropertySetTypes"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getPropertySetTypes"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getPropertySetTypes"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getPropertySetTypes"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getPropertySetTypes"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getSearchStrings"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getSearchStrings"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getSearchStrings"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getSearchStrings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getSearchStrings"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getSearchStrings"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getSearchStrings"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getSearchStrings"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getSearchStrings"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getMetadataSchema"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getMetadataSchema"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getMetadataSchema"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getMetadataSchema"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getMetadataSchema"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getMetadataSchema"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getMetadataSchema"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getMetadataSchema"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getMetadataSchema"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createTemplate"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createTemplate"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createTemplate"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createTemplate"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createTemplate"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createTemplate"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createTemplate"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createTemplate"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createTemplate"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getTagFieldValues"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getTagFieldValues"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getTagFieldValues"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getTagFieldValues"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getTagFieldValues"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getTagFieldValues"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getTagFieldValues"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getTagFieldValues"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getTagFieldValues"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deletePropertySetType"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deletePropertySetType"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deletePropertySetType"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deletePropertySetType"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deletePropertySetType"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deletePropertySetType"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deletePropertySetType"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deletePropertySetType"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deletePropertySetType"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "renameProject"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "renameProject"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "renameProject"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "renameProject"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "renameProject"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "renameProject"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "renameProject"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "renameProject"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "renameProject"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "moveAssets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "moveAssets"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "moveAssets"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "moveAssets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "moveAssets"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "moveAssets"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "moveAssets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "moveAssets"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "moveAssets"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setGroupMembership"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setGroupMembership"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setGroupMembership"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setGroupMembership"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setGroupMembership"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setGroupMembership"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setGroupMembership"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setGroupMembership"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setGroupMembership"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteProject"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteProject"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "deleteProject"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteProject"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteProject"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "deleteProject"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteProject"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteProject"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "deleteProject"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createPropertySet"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createPropertySet"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "createPropertySet"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createPropertySet"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createPropertySet"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "createPropertySet"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createPropertySet"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createPropertySet"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "createPropertySet"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setAssetPublishState"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setAssetPublishState"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "setAssetPublishState"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setAssetPublishState"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setAssetPublishState"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "setAssetPublishState"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setAssetPublishState"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setAssetPublishState"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "setAssetPublishState"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getGroupMembers"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getGroupMembers"),
                "com.scene7.www.ipsapi.AuthenticationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authenticationFault"), "getGroupMembers"),
                "com.scene7.www.ipsapi.xsd.AuthenticationFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getGroupMembers"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getGroupMembers"),
                "com.scene7.www.ipsapi.IpsApiFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "ipsApiFault"), "getGroupMembers"),
                "com.scene7.www.ipsapi.xsd.IpsApiFault");

        faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getGroupMembers"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getGroupMembers"),
                "com.scene7.www.ipsapi.AuthorizationFaultException");
        faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(
                        new javax.xml.namespace.QName("http://www.scene7.com/IpsApi/xsd", "authorizationFault"), "getGroupMembers"),
                "com.scene7.www.ipsapi.xsd.AuthorizationFault");

    }

    /**
     * Auto generated method signature
     *
     * @param setFolderPermissionsParam695
     * @param authHeader696
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setFolderPermissions
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetFolderPermissionsReturn setFolderPermissions(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetFolderPermissionsParam setFolderPermissionsParam695,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader696)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
            _operationClient.getOptions().setAction("setFolderPermissions");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setFolderPermissionsParam695,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setFolderPermissions")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setFolderPermissions"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader696 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader696 = toOM(authHeader696,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setFolderPermissions")));
                addHeader(omElementauthHeader696, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetFolderPermissionsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetFolderPermissionsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setFolderPermissions"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setFolderPermissions"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setFolderPermissions"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setFolderPermissionsParam695
     * @param authHeader696
     * @see com.scene7.www.ipsapi.IpsApiService#startsetFolderPermissions
     */
    public void startsetFolderPermissions(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetFolderPermissionsParam setFolderPermissionsParam695,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader696,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
        _operationClient.getOptions().setAction("setFolderPermissions");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setFolderPermissionsParam695,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setFolderPermissions")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setFolderPermissions"));

        // add the soap_headers only if they are not null
        if (authHeader696 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader696 = toOM(authHeader696,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setFolderPermissions")));
            addHeader(omElementauthHeader696, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetFolderPermissionsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetFolderPermissions(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetFolderPermissionsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetFolderPermissions(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setFolderPermissions"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setFolderPermissions"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setFolderPermissions"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetFolderPermissions((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetFolderPermissions((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetFolderPermissions((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetFolderPermissions(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetFolderPermissions(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetFolderPermissions(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetFolderPermissions(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetFolderPermissions(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetFolderPermissions(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetFolderPermissions(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetFolderPermissions(f);
                            }
                        } else {
                            callback.receiveErrorsetFolderPermissions(f);
                        }
                    } else {
                        callback.receiveErrorsetFolderPermissions(f);
                    }
                } else {
                    callback.receiveErrorsetFolderPermissions(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetFolderPermissions(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[0].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[0].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param removeAssetPermissionsParam698
     * @param authHeader699
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#removeAssetPermissions
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveAssetPermissionsReturn removeAssetPermissions(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveAssetPermissionsParam removeAssetPermissionsParam698,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader699)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[1].getName());
            _operationClient.getOptions().setAction("removeAssetPermissions");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    removeAssetPermissionsParam698,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "removeAssetPermissions")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "removeAssetPermissions"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader699 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader699 = toOM(authHeader699,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeAssetPermissions")));
                addHeader(omElementauthHeader699, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveAssetPermissionsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveAssetPermissionsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeAssetPermissions"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeAssetPermissions"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeAssetPermissions"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param removeAssetPermissionsParam698
     * @param authHeader699
     * @see com.scene7.www.ipsapi.IpsApiService#startremoveAssetPermissions
     */
    public void startremoveAssetPermissions(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveAssetPermissionsParam removeAssetPermissionsParam698,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader699,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[1].getName());
        _operationClient.getOptions().setAction("removeAssetPermissions");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                removeAssetPermissionsParam698,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "removeAssetPermissions")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "removeAssetPermissions"));

        // add the soap_headers only if they are not null
        if (authHeader699 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader699 = toOM(authHeader699,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeAssetPermissions")));
            addHeader(omElementauthHeader699, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveAssetPermissionsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultremoveAssetPermissions(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveAssetPermissionsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorremoveAssetPermissions(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeAssetPermissions"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeAssetPermissions"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeAssetPermissions"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorremoveAssetPermissions((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorremoveAssetPermissions((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorremoveAssetPermissions((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorremoveAssetPermissions(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveAssetPermissions(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveAssetPermissions(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveAssetPermissions(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveAssetPermissions(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveAssetPermissions(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveAssetPermissions(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveAssetPermissions(f);
                            }
                        } else {
                            callback.receiveErrorremoveAssetPermissions(f);
                        }
                    } else {
                        callback.receiveErrorremoveAssetPermissions(f);
                    }
                } else {
                    callback.receiveErrorremoveAssetPermissions(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorremoveAssetPermissions(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[1].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[1].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param submitJobParam701
     * @param authHeader702
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#submitJob
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SubmitJobReturn submitJob(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SubmitJobParam submitJobParam701,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader702)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[2].getName());
            _operationClient.getOptions().setAction("submitJob");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    submitJobParam701,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "submitJob")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "submitJob"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader702 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader702 = toOM(authHeader702,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "submitJob")));
                addHeader(omElementauthHeader702, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SubmitJobReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SubmitJobReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "submitJob"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "submitJob"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "submitJob"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param submitJobParam701
     * @param authHeader702
     * @see com.scene7.www.ipsapi.IpsApiService#startsubmitJob
     */
    public void startsubmitJob(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SubmitJobParam submitJobParam701,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader702,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[2].getName());
        _operationClient.getOptions().setAction("submitJob");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                submitJobParam701,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "submitJob")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "submitJob"));

        // add the soap_headers only if they are not null
        if (authHeader702 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader702 = toOM(authHeader702,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "submitJob")));
            addHeader(omElementauthHeader702, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SubmitJobReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsubmitJob(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SubmitJobReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsubmitJob(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "submitJob"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "submitJob"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "submitJob"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsubmitJob((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsubmitJob((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsubmitJob((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsubmitJob(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsubmitJob(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsubmitJob(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsubmitJob(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsubmitJob(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsubmitJob(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsubmitJob(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsubmitJob(f);
                            }
                        } else {
                            callback.receiveErrorsubmitJob(f);
                        }
                    } else {
                        callback.receiveErrorsubmitJob(f);
                    }
                } else {
                    callback.receiveErrorsubmitJob(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsubmitJob(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[2].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[2].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param replaceImageParam704
     * @param authHeader705
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#replaceImage
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.ReplaceImageReturn replaceImage(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ReplaceImageParam replaceImageParam704,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader705)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[3].getName());
            _operationClient.getOptions().setAction("replaceImage");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    replaceImageParam704,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "replaceImage")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "replaceImage"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader705 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader705 = toOM(authHeader705,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "replaceImage")));
                addHeader(omElementauthHeader705, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.ReplaceImageReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ReplaceImageReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "replaceImage"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "replaceImage"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "replaceImage"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param replaceImageParam704
     * @param authHeader705
     * @see com.scene7.www.ipsapi.IpsApiService#startreplaceImage
     */
    public void startreplaceImage(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ReplaceImageParam replaceImageParam704,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader705,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[3].getName());
        _operationClient.getOptions().setAction("replaceImage");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                replaceImageParam704,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "replaceImage")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "replaceImage"));

        // add the soap_headers only if they are not null
        if (authHeader705 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader705 = toOM(authHeader705,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "replaceImage")));
            addHeader(omElementauthHeader705, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ReplaceImageReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultreplaceImage(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ReplaceImageReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorreplaceImage(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "replaceImage"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "replaceImage"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "replaceImage"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorreplaceImage((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorreplaceImage((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorreplaceImage((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorreplaceImage(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorreplaceImage(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorreplaceImage(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorreplaceImage(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorreplaceImage(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorreplaceImage(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorreplaceImage(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorreplaceImage(f);
                            }
                        } else {
                            callback.receiveErrorreplaceImage(f);
                        }
                    } else {
                        callback.receiveErrorreplaceImage(f);
                    }
                } else {
                    callback.receiveErrorreplaceImage(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorreplaceImage(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[3].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[3].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getAllCompaniesParam707
     * @param authHeader708
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getAllCompanies
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllCompaniesReturn getAllCompanies(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllCompaniesParam getAllCompaniesParam707,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader708)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[4].getName());
            _operationClient.getOptions().setAction("getAllCompanies");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getAllCompaniesParam707,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAllCompanies")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAllCompanies"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader708 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader708 = toOM(authHeader708,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAllCompanies")));
                addHeader(omElementauthHeader708, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllCompaniesReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllCompaniesReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAllCompanies"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAllCompanies"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAllCompanies"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getAllCompaniesParam707
     * @param authHeader708
     * @see com.scene7.www.ipsapi.IpsApiService#startgetAllCompanies
     */
    public void startgetAllCompanies(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllCompaniesParam getAllCompaniesParam707,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader708,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[4].getName());
        _operationClient.getOptions().setAction("getAllCompanies");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getAllCompaniesParam707,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAllCompanies")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAllCompanies"));

        // add the soap_headers only if they are not null
        if (authHeader708 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader708 = toOM(authHeader708,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAllCompanies")));
            addHeader(omElementauthHeader708, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllCompaniesReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetAllCompanies(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllCompaniesReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetAllCompanies(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAllCompanies"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAllCompanies"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAllCompanies"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetAllCompanies((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetAllCompanies((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetAllCompanies((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetAllCompanies(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAllCompanies(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAllCompanies(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAllCompanies(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAllCompanies(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAllCompanies(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAllCompanies(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAllCompanies(f);
                            }
                        } else {
                            callback.receiveErrorgetAllCompanies(f);
                        }
                    } else {
                        callback.receiveErrorgetAllCompanies(f);
                    }
                } else {
                    callback.receiveErrorgetAllCompanies(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetAllCompanies(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[4].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[4].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param deleteAssetMetadataParam710
     * @param authHeader711
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#deleteAssetMetadata
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetMetadataReturn deleteAssetMetadata(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetMetadataParam deleteAssetMetadataParam710,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader711)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[5].getName());
            _operationClient.getOptions().setAction("deleteAssetMetadata");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    deleteAssetMetadataParam710,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteAssetMetadata")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteAssetMetadata"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader711 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader711 = toOM(authHeader711,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteAssetMetadata")));
                addHeader(omElementauthHeader711, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetMetadataReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetMetadataReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteAssetMetadata"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteAssetMetadata"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteAssetMetadata"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param deleteAssetMetadataParam710
     * @param authHeader711
     * @see com.scene7.www.ipsapi.IpsApiService#startdeleteAssetMetadata
     */
    public void startdeleteAssetMetadata(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetMetadataParam deleteAssetMetadataParam710,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader711,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[5].getName());
        _operationClient.getOptions().setAction("deleteAssetMetadata");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                deleteAssetMetadataParam710,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteAssetMetadata")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteAssetMetadata"));

        // add the soap_headers only if they are not null
        if (authHeader711 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader711 = toOM(authHeader711,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteAssetMetadata")));
            addHeader(omElementauthHeader711, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetMetadataReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultdeleteAssetMetadata(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetMetadataReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrordeleteAssetMetadata(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteAssetMetadata"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteAssetMetadata"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteAssetMetadata"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrordeleteAssetMetadata((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrordeleteAssetMetadata((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrordeleteAssetMetadata((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrordeleteAssetMetadata(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAssetMetadata(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAssetMetadata(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAssetMetadata(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAssetMetadata(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAssetMetadata(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAssetMetadata(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAssetMetadata(f);
                            }
                        } else {
                            callback.receiveErrordeleteAssetMetadata(f);
                        }
                    } else {
                        callback.receiveErrordeleteAssetMetadata(f);
                    }
                } else {
                    callback.receiveErrordeleteAssetMetadata(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrordeleteAssetMetadata(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[5].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[5].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param checkLoginParam713
     * @param authHeader714
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#checkLogin
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckLoginReturn checkLogin(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckLoginParam checkLoginParam713,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader714)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[6].getName());
            _operationClient.getOptions().setAction("checkLogin");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    checkLoginParam713,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "checkLogin")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "checkLogin"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader714 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader714 = toOM(authHeader714,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "checkLogin")));
                addHeader(omElementauthHeader714, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckLoginReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckLoginReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "checkLogin"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "checkLogin"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "checkLogin"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param checkLoginParam713
     * @param authHeader714
     * @see com.scene7.www.ipsapi.IpsApiService#startcheckLogin
     */
    public void startcheckLogin(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckLoginParam checkLoginParam713,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader714,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[6].getName());
        _operationClient.getOptions().setAction("checkLogin");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                checkLoginParam713,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "checkLogin")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "checkLogin"));

        // add the soap_headers only if they are not null
        if (authHeader714 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader714 = toOM(authHeader714,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "checkLogin")));
            addHeader(omElementauthHeader714, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckLoginReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultcheckLogin(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckLoginReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorcheckLogin(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "checkLogin"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "checkLogin"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "checkLogin"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorcheckLogin((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorcheckLogin((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorcheckLogin((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorcheckLogin(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcheckLogin(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcheckLogin(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcheckLogin(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcheckLogin(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcheckLogin(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcheckLogin(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcheckLogin(f);
                            }
                        } else {
                            callback.receiveErrorcheckLogin(f);
                        }
                    } else {
                        callback.receiveErrorcheckLogin(f);
                    }
                } else {
                    callback.receiveErrorcheckLogin(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorcheckLogin(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[6].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[6].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getDistinctMetadataValuesParam716
     * @param authHeader717
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getDistinctMetadataValues
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDistinctMetadataValuesReturn getDistinctMetadataValues(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDistinctMetadataValuesParam getDistinctMetadataValuesParam716,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader717)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[7].getName());
            _operationClient.getOptions().setAction("getDistinctMetadataValues");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getDistinctMetadataValuesParam716,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getDistinctMetadataValues")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getDistinctMetadataValues"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader717 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader717 = toOM(authHeader717,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getDistinctMetadataValues")));
                addHeader(omElementauthHeader717, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDistinctMetadataValuesReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDistinctMetadataValuesReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getDistinctMetadataValues"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getDistinctMetadataValues"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getDistinctMetadataValues"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getDistinctMetadataValuesParam716
     * @param authHeader717
     * @see com.scene7.www.ipsapi.IpsApiService#startgetDistinctMetadataValues
     */
    public void startgetDistinctMetadataValues(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDistinctMetadataValuesParam getDistinctMetadataValuesParam716,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader717,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[7].getName());
        _operationClient.getOptions().setAction("getDistinctMetadataValues");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getDistinctMetadataValuesParam716,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getDistinctMetadataValues")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getDistinctMetadataValues"));

        // add the soap_headers only if they are not null
        if (authHeader717 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader717 = toOM(authHeader717,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getDistinctMetadataValues")));
            addHeader(omElementauthHeader717, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDistinctMetadataValuesReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetDistinctMetadataValues(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDistinctMetadataValuesReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetDistinctMetadataValues(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getDistinctMetadataValues"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getDistinctMetadataValues"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getDistinctMetadataValues"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetDistinctMetadataValues((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetDistinctMetadataValues((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetDistinctMetadataValues((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetDistinctMetadataValues(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetDistinctMetadataValues(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetDistinctMetadataValues(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetDistinctMetadataValues(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetDistinctMetadataValues(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetDistinctMetadataValues(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetDistinctMetadataValues(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetDistinctMetadataValues(f);
                            }
                        } else {
                            callback.receiveErrorgetDistinctMetadataValues(f);
                        }
                    } else {
                        callback.receiveErrorgetDistinctMetadataValues(f);
                    }
                } else {
                    callback.receiveErrorgetDistinctMetadataValues(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetDistinctMetadataValues(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[7].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[7].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param updateImageSetParam719
     * @param authHeader720
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#updateImageSet
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateImageSetReturn updateImageSet(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateImageSetParam updateImageSetParam719,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader720)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[8].getName());
            _operationClient.getOptions().setAction("updateImageSet");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    updateImageSetParam719,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateImageSet")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateImageSet"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader720 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader720 = toOM(authHeader720,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateImageSet")));
                addHeader(omElementauthHeader720, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateImageSetReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateImageSetReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateImageSet"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateImageSet"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateImageSet"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param updateImageSetParam719
     * @param authHeader720
     * @see com.scene7.www.ipsapi.IpsApiService#startupdateImageSet
     */
    public void startupdateImageSet(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateImageSetParam updateImageSetParam719,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader720,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[8].getName());
        _operationClient.getOptions().setAction("updateImageSet");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                updateImageSetParam719,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateImageSet")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateImageSet"));

        // add the soap_headers only if they are not null
        if (authHeader720 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader720 = toOM(authHeader720,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateImageSet")));
            addHeader(omElementauthHeader720, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateImageSetReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultupdateImageSet(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateImageSetReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorupdateImageSet(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateImageSet"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateImageSet"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateImageSet"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorupdateImageSet((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorupdateImageSet((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorupdateImageSet((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorupdateImageSet(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateImageSet(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateImageSet(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateImageSet(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateImageSet(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateImageSet(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateImageSet(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateImageSet(f);
                            }
                        } else {
                            callback.receiveErrorupdateImageSet(f);
                        }
                    } else {
                        callback.receiveErrorupdateImageSet(f);
                    }
                } else {
                    callback.receiveErrorupdateImageSet(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorupdateImageSet(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[8].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[8].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getAssetPublishHistoryParam722
     * @param authHeader723
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getAssetPublishHistory
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetPublishHistoryReturn getAssetPublishHistory(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetPublishHistoryParam getAssetPublishHistoryParam722,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader723)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[9].getName());
            _operationClient.getOptions().setAction("getAssetPublishHistory");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getAssetPublishHistoryParam722,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAssetPublishHistory")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAssetPublishHistory"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader723 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader723 = toOM(authHeader723,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssetPublishHistory")));
                addHeader(omElementauthHeader723, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetPublishHistoryReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetPublishHistoryReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetPublishHistory"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetPublishHistory"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetPublishHistory"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getAssetPublishHistoryParam722
     * @param authHeader723
     * @see com.scene7.www.ipsapi.IpsApiService#startgetAssetPublishHistory
     */
    public void startgetAssetPublishHistory(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetPublishHistoryParam getAssetPublishHistoryParam722,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader723,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[9].getName());
        _operationClient.getOptions().setAction("getAssetPublishHistory");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getAssetPublishHistoryParam722,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAssetPublishHistory")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAssetPublishHistory"));

        // add the soap_headers only if they are not null
        if (authHeader723 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader723 = toOM(authHeader723,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssetPublishHistory")));
            addHeader(omElementauthHeader723, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetPublishHistoryReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetAssetPublishHistory(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetPublishHistoryReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetAssetPublishHistory(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetPublishHistory"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetPublishHistory"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetPublishHistory"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetAssetPublishHistory((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetAssetPublishHistory((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetAssetPublishHistory((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetAssetPublishHistory(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetPublishHistory(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetPublishHistory(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetPublishHistory(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetPublishHistory(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetPublishHistory(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetPublishHistory(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetPublishHistory(f);
                            }
                        } else {
                            callback.receiveErrorgetAssetPublishHistory(f);
                        }
                    } else {
                        callback.receiveErrorgetAssetPublishHistory(f);
                    }
                } else {
                    callback.receiveErrorgetAssetPublishHistory(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetAssetPublishHistory(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[9].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[9].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setCompanySettingsParam725
     * @param authHeader726
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setCompanySettings
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanySettingsReturn setCompanySettings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanySettingsParam setCompanySettingsParam725,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader726)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[10].getName());
            _operationClient.getOptions().setAction("setCompanySettings");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setCompanySettingsParam725,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setCompanySettings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setCompanySettings"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader726 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader726 = toOM(authHeader726,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setCompanySettings")));
                addHeader(omElementauthHeader726, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanySettingsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanySettingsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setCompanySettings"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setCompanySettings"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setCompanySettings"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setCompanySettingsParam725
     * @param authHeader726
     * @see com.scene7.www.ipsapi.IpsApiService#startsetCompanySettings
     */
    public void startsetCompanySettings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanySettingsParam setCompanySettingsParam725,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader726,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[10].getName());
        _operationClient.getOptions().setAction("setCompanySettings");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setCompanySettingsParam725,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setCompanySettings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setCompanySettings"));

        // add the soap_headers only if they are not null
        if (authHeader726 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader726 = toOM(authHeader726,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setCompanySettings")));
            addHeader(omElementauthHeader726, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanySettingsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetCompanySettings(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanySettingsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetCompanySettings(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setCompanySettings"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setCompanySettings"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setCompanySettings"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetCompanySettings((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetCompanySettings((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetCompanySettings((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetCompanySettings(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetCompanySettings(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetCompanySettings(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetCompanySettings(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetCompanySettings(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetCompanySettings(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetCompanySettings(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetCompanySettings(f);
                            }
                        } else {
                            callback.receiveErrorsetCompanySettings(f);
                        }
                    } else {
                        callback.receiveErrorsetCompanySettings(f);
                    }
                } else {
                    callback.receiveErrorsetCompanySettings(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetCompanySettings(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[10].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[10].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getMetadataSchemaNamespacesParam728
     * @param authHeader729
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getMetadataSchemaNamespaces
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaNamespacesReturn getMetadataSchemaNamespaces(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaNamespacesParam getMetadataSchemaNamespacesParam728,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader729)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[11].getName());
            _operationClient.getOptions().setAction("getMetadataSchemaNamespaces");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getMetadataSchemaNamespacesParam728,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getMetadataSchemaNamespaces")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getMetadataSchemaNamespaces"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader729 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader729 = toOM(authHeader729,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getMetadataSchemaNamespaces")));
                addHeader(omElementauthHeader729, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaNamespacesReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaNamespacesReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMetadataSchemaNamespaces"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMetadataSchemaNamespaces"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMetadataSchemaNamespaces"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getMetadataSchemaNamespacesParam728
     * @param authHeader729
     * @see com.scene7.www.ipsapi.IpsApiService#startgetMetadataSchemaNamespaces
     */
    public void startgetMetadataSchemaNamespaces(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaNamespacesParam getMetadataSchemaNamespacesParam728,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader729,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[11].getName());
        _operationClient.getOptions().setAction("getMetadataSchemaNamespaces");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getMetadataSchemaNamespacesParam728,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getMetadataSchemaNamespaces")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getMetadataSchemaNamespaces"));

        // add the soap_headers only if they are not null
        if (authHeader729 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader729 = toOM(authHeader729,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getMetadataSchemaNamespaces")));
            addHeader(omElementauthHeader729, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaNamespacesReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetMetadataSchemaNamespaces(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaNamespacesReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetMetadataSchemaNamespaces(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMetadataSchemaNamespaces"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMetadataSchemaNamespaces"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMetadataSchemaNamespaces"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetMetadataSchemaNamespaces(
                                            (com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetMetadataSchemaNamespaces((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetMetadataSchemaNamespaces(
                                            (com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetMetadataSchemaNamespaces(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataSchemaNamespaces(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataSchemaNamespaces(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataSchemaNamespaces(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataSchemaNamespaces(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataSchemaNamespaces(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataSchemaNamespaces(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataSchemaNamespaces(f);
                            }
                        } else {
                            callback.receiveErrorgetMetadataSchemaNamespaces(f);
                        }
                    } else {
                        callback.receiveErrorgetMetadataSchemaNamespaces(f);
                    }
                } else {
                    callback.receiveErrorgetMetadataSchemaNamespaces(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetMetadataSchemaNamespaces(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[11].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[11].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getPropertySetsParam731
     * @param authHeader732
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getPropertySets
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetsReturn getPropertySets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetsParam getPropertySetsParam731,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader732)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[12].getName());
            _operationClient.getOptions().setAction("getPropertySets");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getPropertySetsParam731,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getPropertySets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getPropertySets"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader732 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader732 = toOM(authHeader732,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getPropertySets")));
                addHeader(omElementauthHeader732, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPropertySets"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPropertySets"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPropertySets"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getPropertySetsParam731
     * @param authHeader732
     * @see com.scene7.www.ipsapi.IpsApiService#startgetPropertySets
     */
    public void startgetPropertySets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetsParam getPropertySetsParam731,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader732,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[12].getName());
        _operationClient.getOptions().setAction("getPropertySets");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getPropertySetsParam731,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getPropertySets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getPropertySets"));

        // add the soap_headers only if they are not null
        if (authHeader732 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader732 = toOM(authHeader732,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getPropertySets")));
            addHeader(omElementauthHeader732, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetPropertySets(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetPropertySets(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPropertySets"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPropertySets"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPropertySets"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetPropertySets((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetPropertySets((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetPropertySets((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetPropertySets(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySets(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySets(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySets(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySets(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySets(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySets(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySets(f);
                            }
                        } else {
                            callback.receiveErrorgetPropertySets(f);
                        }
                    } else {
                        callback.receiveErrorgetPropertySets(f);
                    }
                } else {
                    callback.receiveErrorgetPropertySets(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetPropertySets(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[12].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[12].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param applyMetadataTemplateParam734
     * @param authHeader735
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#applyMetadataTemplate
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.ApplyMetadataTemplateReturn applyMetadataTemplate(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ApplyMetadataTemplateParam applyMetadataTemplateParam734,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader735)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[13].getName());
            _operationClient.getOptions().setAction("applyMetadataTemplate");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    applyMetadataTemplateParam734,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "applyMetadataTemplate")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "applyMetadataTemplate"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader735 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader735 = toOM(authHeader735,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "applyMetadataTemplate")));
                addHeader(omElementauthHeader735, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.ApplyMetadataTemplateReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ApplyMetadataTemplateReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "applyMetadataTemplate"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "applyMetadataTemplate"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "applyMetadataTemplate"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param applyMetadataTemplateParam734
     * @param authHeader735
     * @see com.scene7.www.ipsapi.IpsApiService#startapplyMetadataTemplate
     */
    public void startapplyMetadataTemplate(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ApplyMetadataTemplateParam applyMetadataTemplateParam734,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader735,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[13].getName());
        _operationClient.getOptions().setAction("applyMetadataTemplate");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                applyMetadataTemplateParam734,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "applyMetadataTemplate")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "applyMetadataTemplate"));

        // add the soap_headers only if they are not null
        if (authHeader735 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader735 = toOM(authHeader735,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "applyMetadataTemplate")));
            addHeader(omElementauthHeader735, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ApplyMetadataTemplateReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultapplyMetadataTemplate(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ApplyMetadataTemplateReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorapplyMetadataTemplate(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "applyMetadataTemplate"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "applyMetadataTemplate"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "applyMetadataTemplate"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorapplyMetadataTemplate((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorapplyMetadataTemplate((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorapplyMetadataTemplate((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorapplyMetadataTemplate(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorapplyMetadataTemplate(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorapplyMetadataTemplate(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorapplyMetadataTemplate(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorapplyMetadataTemplate(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorapplyMetadataTemplate(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorapplyMetadataTemplate(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorapplyMetadataTemplate(f);
                            }
                        } else {
                            callback.receiveErrorapplyMetadataTemplate(f);
                        }
                    } else {
                        callback.receiveErrorapplyMetadataTemplate(f);
                    }
                } else {
                    callback.receiveErrorapplyMetadataTemplate(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorapplyMetadataTemplate(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[13].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[13].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param deleteGroupParam737
     * @param authHeader738
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#deleteGroup
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteGroupReturn deleteGroup(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteGroupParam deleteGroupParam737,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader738)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[14].getName());
            _operationClient.getOptions().setAction("deleteGroup");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    deleteGroupParam737,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteGroup")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteGroup"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader738 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader738 = toOM(authHeader738,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteGroup")));
                addHeader(omElementauthHeader738, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteGroupReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteGroupReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteGroup"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteGroup"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteGroup"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param deleteGroupParam737
     * @param authHeader738
     * @see com.scene7.www.ipsapi.IpsApiService#startdeleteGroup
     */
    public void startdeleteGroup(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteGroupParam deleteGroupParam737,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader738,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[14].getName());
        _operationClient.getOptions().setAction("deleteGroup");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                deleteGroupParam737,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteGroup")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteGroup"));

        // add the soap_headers only if they are not null
        if (authHeader738 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader738 = toOM(authHeader738,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteGroup")));
            addHeader(omElementauthHeader738, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteGroupReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultdeleteGroup(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteGroupReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrordeleteGroup(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteGroup"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteGroup"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteGroup"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrordeleteGroup((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrordeleteGroup((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrordeleteGroup((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrordeleteGroup(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteGroup(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteGroup(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteGroup(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteGroup(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteGroup(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteGroup(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteGroup(f);
                            }
                        } else {
                            callback.receiveErrordeleteGroup(f);
                        }
                    } else {
                        callback.receiveErrordeleteGroup(f);
                    }
                } else {
                    callback.receiveErrordeleteGroup(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrordeleteGroup(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[14].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[14].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getAssetsParam740
     * @param authHeader741
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getAssets
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsReturn getAssets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsParam getAssetsParam740,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader741)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[15].getName());
            _operationClient.getOptions().setAction("getAssets");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getAssetsParam740,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAssets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAssets"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader741 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader741 = toOM(authHeader741,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssets")));
                addHeader(omElementauthHeader741, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssets"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssets"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssets"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getAssetsParam740
     * @param authHeader741
     * @see com.scene7.www.ipsapi.IpsApiService#startgetAssets
     */
    public void startgetAssets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsParam getAssetsParam740,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader741,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[15].getName());
        _operationClient.getOptions().setAction("getAssets");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getAssetsParam740,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAssets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAssets"));

        // add the soap_headers only if they are not null
        if (authHeader741 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader741 = toOM(authHeader741,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssets")));
            addHeader(omElementauthHeader741, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetAssets(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetAssets(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssets"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssets"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssets"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetAssets((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetAssets((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetAssets((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetAssets(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssets(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssets(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssets(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssets(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssets(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssets(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssets(f);
                            }
                        } else {
                            callback.receiveErrorgetAssets(f);
                        }
                    } else {
                        callback.receiveErrorgetAssets(f);
                    }
                } else {
                    callback.receiveErrorgetAssets(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetAssets(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[15].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[15].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getCompanySettingsParam743
     * @param authHeader744
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getCompanySettings
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanySettingsReturn getCompanySettings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanySettingsParam getCompanySettingsParam743,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader744)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[16].getName());
            _operationClient.getOptions().setAction("getCompanySettings");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getCompanySettingsParam743,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getCompanySettings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getCompanySettings"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader744 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader744 = toOM(authHeader744,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getCompanySettings")));
                addHeader(omElementauthHeader744, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanySettingsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanySettingsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanySettings"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanySettings"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanySettings"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getCompanySettingsParam743
     * @param authHeader744
     * @see com.scene7.www.ipsapi.IpsApiService#startgetCompanySettings
     */
    public void startgetCompanySettings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanySettingsParam getCompanySettingsParam743,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader744,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[16].getName());
        _operationClient.getOptions().setAction("getCompanySettings");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getCompanySettingsParam743,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getCompanySettings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getCompanySettings"));

        // add the soap_headers only if they are not null
        if (authHeader744 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader744 = toOM(authHeader744,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getCompanySettings")));
            addHeader(omElementauthHeader744, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanySettingsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetCompanySettings(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanySettingsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetCompanySettings(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanySettings"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanySettings"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanySettings"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetCompanySettings((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetCompanySettings((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetCompanySettings((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetCompanySettings(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanySettings(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanySettings(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanySettings(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanySettings(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanySettings(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanySettings(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanySettings(f);
                            }
                        } else {
                            callback.receiveErrorgetCompanySettings(f);
                        }
                    } else {
                        callback.receiveErrorgetCompanySettings(f);
                    }
                } else {
                    callback.receiveErrorgetCompanySettings(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetCompanySettings(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[16].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[16].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param deletePropertySetParam746
     * @param authHeader747
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#deletePropertySet
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetReturn deletePropertySet(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetParam deletePropertySetParam746,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader747)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[17].getName());
            _operationClient.getOptions().setAction("deletePropertySet");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    deletePropertySetParam746,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deletePropertySet")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deletePropertySet"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader747 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader747 = toOM(authHeader747,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deletePropertySet")));
                addHeader(omElementauthHeader747, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deletePropertySet"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deletePropertySet"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deletePropertySet"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param deletePropertySetParam746
     * @param authHeader747
     * @see com.scene7.www.ipsapi.IpsApiService#startdeletePropertySet
     */
    public void startdeletePropertySet(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetParam deletePropertySetParam746,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader747,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[17].getName());
        _operationClient.getOptions().setAction("deletePropertySet");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                deletePropertySetParam746,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deletePropertySet")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deletePropertySet"));

        // add the soap_headers only if they are not null
        if (authHeader747 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader747 = toOM(authHeader747,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deletePropertySet")));
            addHeader(omElementauthHeader747, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultdeletePropertySet(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrordeletePropertySet(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deletePropertySet"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deletePropertySet"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deletePropertySet"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrordeletePropertySet((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrordeletePropertySet((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrordeletePropertySet((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrordeletePropertySet(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeletePropertySet(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeletePropertySet(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeletePropertySet(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeletePropertySet(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeletePropertySet(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeletePropertySet(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeletePropertySet(f);
                            }
                        } else {
                            callback.receiveErrordeletePropertySet(f);
                        }
                    } else {
                        callback.receiveErrordeletePropertySet(f);
                    }
                } else {
                    callback.receiveErrordeletePropertySet(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrordeletePropertySet(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[17].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[17].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getActiveJobsParam749
     * @param authHeader750
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getActiveJobs
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActiveJobsReturn getActiveJobs(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActiveJobsParam getActiveJobsParam749,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader750)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[18].getName());
            _operationClient.getOptions().setAction("getActiveJobs");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getActiveJobsParam749,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getActiveJobs")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getActiveJobs"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader750 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader750 = toOM(authHeader750,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getActiveJobs")));
                addHeader(omElementauthHeader750, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActiveJobsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActiveJobsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getActiveJobs"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getActiveJobs"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getActiveJobs"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getActiveJobsParam749
     * @param authHeader750
     * @see com.scene7.www.ipsapi.IpsApiService#startgetActiveJobs
     */
    public void startgetActiveJobs(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActiveJobsParam getActiveJobsParam749,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader750,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[18].getName());
        _operationClient.getOptions().setAction("getActiveJobs");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getActiveJobsParam749,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getActiveJobs")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getActiveJobs"));

        // add the soap_headers only if they are not null
        if (authHeader750 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader750 = toOM(authHeader750,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getActiveJobs")));
            addHeader(omElementauthHeader750, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActiveJobsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetActiveJobs(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActiveJobsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetActiveJobs(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getActiveJobs"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getActiveJobs"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getActiveJobs"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetActiveJobs((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetActiveJobs((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetActiveJobs((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetActiveJobs(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetActiveJobs(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetActiveJobs(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetActiveJobs(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetActiveJobs(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetActiveJobs(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetActiveJobs(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetActiveJobs(f);
                            }
                        } else {
                            callback.receiveErrorgetActiveJobs(f);
                        }
                    } else {
                        callback.receiveErrorgetActiveJobs(f);
                    }
                } else {
                    callback.receiveErrorgetActiveJobs(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetActiveJobs(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[18].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[18].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param copyImageParam752
     * @param authHeader753
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#copyImage
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.CopyImageReturn copyImage(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CopyImageParam copyImageParam752,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader753)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[19].getName());
            _operationClient.getOptions().setAction("copyImage");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    copyImageParam752,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "copyImage")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "copyImage"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader753 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader753 = toOM(authHeader753,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "copyImage")));
                addHeader(omElementauthHeader753, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.CopyImageReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CopyImageReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "copyImage"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "copyImage"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "copyImage"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param copyImageParam752
     * @param authHeader753
     * @see com.scene7.www.ipsapi.IpsApiService#startcopyImage
     */
    public void startcopyImage(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CopyImageParam copyImageParam752,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader753,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[19].getName());
        _operationClient.getOptions().setAction("copyImage");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                copyImageParam752,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "copyImage")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "copyImage"));

        // add the soap_headers only if they are not null
        if (authHeader753 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader753 = toOM(authHeader753,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "copyImage")));
            addHeader(omElementauthHeader753, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CopyImageReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultcopyImage(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CopyImageReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorcopyImage(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "copyImage"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "copyImage"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "copyImage"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorcopyImage((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorcopyImage((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorcopyImage((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorcopyImage(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcopyImage(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcopyImage(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcopyImage(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcopyImage(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcopyImage(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcopyImage(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcopyImage(f);
                            }
                        } else {
                            callback.receiveErrorcopyImage(f);
                        }
                    } else {
                        callback.receiveErrorcopyImage(f);
                    }
                } else {
                    callback.receiveErrorcopyImage(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorcopyImage(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[19].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[19].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param batchSetFontFieldsParam755
     * @param authHeader756
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#batchSetFontFields
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetFontFieldsReturn batchSetFontFields(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetFontFieldsParam batchSetFontFieldsParam755,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader756)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[20].getName());
            _operationClient.getOptions().setAction("batchSetFontFields");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    batchSetFontFieldsParam755,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "batchSetFontFields")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "batchSetFontFields"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader756 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader756 = toOM(authHeader756,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "batchSetFontFields")));
                addHeader(omElementauthHeader756, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetFontFieldsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetFontFieldsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetFontFields"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetFontFields"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetFontFields"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param batchSetFontFieldsParam755
     * @param authHeader756
     * @see com.scene7.www.ipsapi.IpsApiService#startbatchSetFontFields
     */
    public void startbatchSetFontFields(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetFontFieldsParam batchSetFontFieldsParam755,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader756,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[20].getName());
        _operationClient.getOptions().setAction("batchSetFontFields");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                batchSetFontFieldsParam755,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "batchSetFontFields")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "batchSetFontFields"));

        // add the soap_headers only if they are not null
        if (authHeader756 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader756 = toOM(authHeader756,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "batchSetFontFields")));
            addHeader(omElementauthHeader756, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetFontFieldsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultbatchSetFontFields(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetFontFieldsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorbatchSetFontFields(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetFontFields"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetFontFields"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetFontFields"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorbatchSetFontFields((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorbatchSetFontFields((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorbatchSetFontFields((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorbatchSetFontFields(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetFontFields(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetFontFields(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetFontFields(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetFontFields(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetFontFields(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetFontFields(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetFontFields(f);
                            }
                        } else {
                            callback.receiveErrorbatchSetFontFields(f);
                        }
                    } else {
                        callback.receiveErrorbatchSetFontFields(f);
                    }
                } else {
                    callback.receiveErrorbatchSetFontFields(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorbatchSetFontFields(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[20].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[20].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getPropertySetTypeParam758
     * @param authHeader759
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getPropertySetType
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypeReturn getPropertySetType(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypeParam getPropertySetTypeParam758,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader759)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[21].getName());
            _operationClient.getOptions().setAction("getPropertySetType");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getPropertySetTypeParam758,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getPropertySetType")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getPropertySetType"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader759 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader759 = toOM(authHeader759,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getPropertySetType")));
                addHeader(omElementauthHeader759, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypeReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypeReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPropertySetType"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPropertySetType"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPropertySetType"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getPropertySetTypeParam758
     * @param authHeader759
     * @see com.scene7.www.ipsapi.IpsApiService#startgetPropertySetType
     */
    public void startgetPropertySetType(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypeParam getPropertySetTypeParam758,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader759,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[21].getName());
        _operationClient.getOptions().setAction("getPropertySetType");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getPropertySetTypeParam758,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getPropertySetType")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getPropertySetType"));

        // add the soap_headers only if they are not null
        if (authHeader759 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader759 = toOM(authHeader759,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getPropertySetType")));
            addHeader(omElementauthHeader759, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypeReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetPropertySetType(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypeReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetPropertySetType(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPropertySetType"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPropertySetType"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPropertySetType"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetPropertySetType((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetPropertySetType((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetPropertySetType((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetPropertySetType(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySetType(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySetType(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySetType(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySetType(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySetType(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySetType(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySetType(f);
                            }
                        } else {
                            callback.receiveErrorgetPropertySetType(f);
                        }
                    } else {
                        callback.receiveErrorgetPropertySetType(f);
                    }
                } else {
                    callback.receiveErrorgetPropertySetType(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetPropertySetType(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[21].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[21].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param removeCompanyMembershipParam761
     * @param authHeader762
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#removeCompanyMembership
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveCompanyMembershipReturn removeCompanyMembership(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveCompanyMembershipParam removeCompanyMembershipParam761,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader762)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[22].getName());
            _operationClient.getOptions().setAction("removeCompanyMembership");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    removeCompanyMembershipParam761,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "removeCompanyMembership")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "removeCompanyMembership"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader762 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader762 = toOM(authHeader762,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeCompanyMembership")));
                addHeader(omElementauthHeader762, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveCompanyMembershipReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveCompanyMembershipReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeCompanyMembership"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeCompanyMembership"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeCompanyMembership"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param removeCompanyMembershipParam761
     * @param authHeader762
     * @see com.scene7.www.ipsapi.IpsApiService#startremoveCompanyMembership
     */
    public void startremoveCompanyMembership(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveCompanyMembershipParam removeCompanyMembershipParam761,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader762,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[22].getName());
        _operationClient.getOptions().setAction("removeCompanyMembership");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                removeCompanyMembershipParam761,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "removeCompanyMembership")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "removeCompanyMembership"));

        // add the soap_headers only if they are not null
        if (authHeader762 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader762 = toOM(authHeader762,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeCompanyMembership")));
            addHeader(omElementauthHeader762, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveCompanyMembershipReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultremoveCompanyMembership(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveCompanyMembershipReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorremoveCompanyMembership(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeCompanyMembership"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeCompanyMembership"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeCompanyMembership"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorremoveCompanyMembership((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorremoveCompanyMembership((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorremoveCompanyMembership((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorremoveCompanyMembership(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveCompanyMembership(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveCompanyMembership(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveCompanyMembership(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveCompanyMembership(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveCompanyMembership(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveCompanyMembership(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveCompanyMembership(f);
                            }
                        } else {
                            callback.receiveErrorremoveCompanyMembership(f);
                        }
                    } else {
                        callback.receiveErrorremoveCompanyMembership(f);
                    }
                } else {
                    callback.receiveErrorremoveCompanyMembership(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorremoveCompanyMembership(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[22].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[22].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param batchSetImageFieldsParam764
     * @param authHeader765
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#batchSetImageFields
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetImageFieldsReturn batchSetImageFields(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetImageFieldsParam batchSetImageFieldsParam764,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader765)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[23].getName());
            _operationClient.getOptions().setAction("batchSetImageFields");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    batchSetImageFieldsParam764,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "batchSetImageFields")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "batchSetImageFields"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader765 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader765 = toOM(authHeader765,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "batchSetImageFields")));
                addHeader(omElementauthHeader765, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetImageFieldsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetImageFieldsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetImageFields"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetImageFields"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetImageFields"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param batchSetImageFieldsParam764
     * @param authHeader765
     * @see com.scene7.www.ipsapi.IpsApiService#startbatchSetImageFields
     */
    public void startbatchSetImageFields(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetImageFieldsParam batchSetImageFieldsParam764,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader765,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[23].getName());
        _operationClient.getOptions().setAction("batchSetImageFields");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                batchSetImageFieldsParam764,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "batchSetImageFields")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "batchSetImageFields"));

        // add the soap_headers only if they are not null
        if (authHeader765 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader765 = toOM(authHeader765,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "batchSetImageFields")));
            addHeader(omElementauthHeader765, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetImageFieldsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultbatchSetImageFields(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetImageFieldsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorbatchSetImageFields(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetImageFields"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetImageFields"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetImageFields"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorbatchSetImageFields((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorbatchSetImageFields((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorbatchSetImageFields((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorbatchSetImageFields(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetImageFields(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetImageFields(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetImageFields(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetImageFields(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetImageFields(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetImageFields(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetImageFields(f);
                            }
                        } else {
                            callback.receiveErrorbatchSetImageFields(f);
                        }
                    } else {
                        callback.receiveErrorbatchSetImageFields(f);
                    }
                } else {
                    callback.receiveErrorbatchSetImageFields(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorbatchSetImageFields(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[23].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[23].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param saveImageMapParam767
     * @param authHeader768
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#saveImageMap
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageMapReturn saveImageMap(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageMapParam saveImageMapParam767,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader768)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[24].getName());
            _operationClient.getOptions().setAction("saveImageMap");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    saveImageMapParam767,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "saveImageMap")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "saveImageMap"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader768 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader768 = toOM(authHeader768,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "saveImageMap")));
                addHeader(omElementauthHeader768, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageMapReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageMapReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveImageMap"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveImageMap"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveImageMap"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param saveImageMapParam767
     * @param authHeader768
     * @see com.scene7.www.ipsapi.IpsApiService#startsaveImageMap
     */
    public void startsaveImageMap(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageMapParam saveImageMapParam767,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader768,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[24].getName());
        _operationClient.getOptions().setAction("saveImageMap");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                saveImageMapParam767,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "saveImageMap")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "saveImageMap"));

        // add the soap_headers only if they are not null
        if (authHeader768 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader768 = toOM(authHeader768,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "saveImageMap")));
            addHeader(omElementauthHeader768, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageMapReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsaveImageMap(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageMapReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsaveImageMap(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveImageMap"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveImageMap"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveImageMap"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsaveImageMap((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsaveImageMap((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsaveImageMap((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsaveImageMap(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveImageMap(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveImageMap(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveImageMap(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveImageMap(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveImageMap(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveImageMap(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveImageMap(f);
                            }
                        } else {
                            callback.receiveErrorsaveImageMap(f);
                        }
                    } else {
                        callback.receiveErrorsaveImageMap(f);
                    }
                } else {
                    callback.receiveErrorsaveImageMap(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsaveImageMap(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[24].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[24].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getScheduledJobsParam770
     * @param authHeader771
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getScheduledJobs
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetScheduledJobsReturn getScheduledJobs(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetScheduledJobsParam getScheduledJobsParam770,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader771)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[25].getName());
            _operationClient.getOptions().setAction("getScheduledJobs");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getScheduledJobsParam770,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getScheduledJobs")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getScheduledJobs"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader771 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader771 = toOM(authHeader771,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getScheduledJobs")));
                addHeader(omElementauthHeader771, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetScheduledJobsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetScheduledJobsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getScheduledJobs"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getScheduledJobs"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getScheduledJobs"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getScheduledJobsParam770
     * @param authHeader771
     * @see com.scene7.www.ipsapi.IpsApiService#startgetScheduledJobs
     */
    public void startgetScheduledJobs(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetScheduledJobsParam getScheduledJobsParam770,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader771,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[25].getName());
        _operationClient.getOptions().setAction("getScheduledJobs");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getScheduledJobsParam770,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getScheduledJobs")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getScheduledJobs"));

        // add the soap_headers only if they are not null
        if (authHeader771 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader771 = toOM(authHeader771,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getScheduledJobs")));
            addHeader(omElementauthHeader771, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetScheduledJobsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetScheduledJobs(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetScheduledJobsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetScheduledJobs(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getScheduledJobs"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getScheduledJobs"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getScheduledJobs"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetScheduledJobs((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetScheduledJobs((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetScheduledJobs((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetScheduledJobs(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetScheduledJobs(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetScheduledJobs(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetScheduledJobs(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetScheduledJobs(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetScheduledJobs(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetScheduledJobs(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetScheduledJobs(f);
                            }
                        } else {
                            callback.receiveErrorgetScheduledJobs(f);
                        }
                    } else {
                        callback.receiveErrorgetScheduledJobs(f);
                    }
                } else {
                    callback.receiveErrorgetScheduledJobs(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetScheduledJobs(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[25].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[25].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setAssetsPublishStateParam773
     * @param authHeader774
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setAssetsPublishState
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsPublishStateReturn setAssetsPublishState(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsPublishStateParam setAssetsPublishStateParam773,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader774)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[26].getName());
            _operationClient.getOptions().setAction("setAssetsPublishState");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setAssetsPublishStateParam773,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setAssetsPublishState")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setAssetsPublishState"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader774 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader774 = toOM(authHeader774,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setAssetsPublishState")));
                addHeader(omElementauthHeader774, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsPublishStateReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsPublishStateReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetsPublishState"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetsPublishState"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetsPublishState"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setAssetsPublishStateParam773
     * @param authHeader774
     * @see com.scene7.www.ipsapi.IpsApiService#startsetAssetsPublishState
     */
    public void startsetAssetsPublishState(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsPublishStateParam setAssetsPublishStateParam773,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader774,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[26].getName());
        _operationClient.getOptions().setAction("setAssetsPublishState");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setAssetsPublishStateParam773,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setAssetsPublishState")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setAssetsPublishState"));

        // add the soap_headers only if they are not null
        if (authHeader774 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader774 = toOM(authHeader774,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setAssetsPublishState")));
            addHeader(omElementauthHeader774, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsPublishStateReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetAssetsPublishState(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsPublishStateReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetAssetsPublishState(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetsPublishState"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetsPublishState"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetsPublishState"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetAssetsPublishState((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetAssetsPublishState((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetAssetsPublishState((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetAssetsPublishState(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetsPublishState(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetsPublishState(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetsPublishState(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetsPublishState(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetsPublishState(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetsPublishState(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetsPublishState(f);
                            }
                        } else {
                            callback.receiveErrorsetAssetsPublishState(f);
                        }
                    } else {
                        callback.receiveErrorsetAssetsPublishState(f);
                    }
                } else {
                    callback.receiveErrorsetAssetsPublishState(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetAssetsPublishState(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[26].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[26].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getUserInfoParam776
     * @param authHeader777
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getUserInfo
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserInfoReturn getUserInfo(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserInfoParam getUserInfoParam776,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader777)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[27].getName());
            _operationClient.getOptions().setAction("getUserInfo");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getUserInfoParam776,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getUserInfo")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getUserInfo"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader777 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader777 = toOM(authHeader777,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getUserInfo")));
                addHeader(omElementauthHeader777, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserInfoReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserInfoReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUserInfo"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUserInfo"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUserInfo"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getUserInfoParam776
     * @param authHeader777
     * @see com.scene7.www.ipsapi.IpsApiService#startgetUserInfo
     */
    public void startgetUserInfo(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserInfoParam getUserInfoParam776,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader777,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[27].getName());
        _operationClient.getOptions().setAction("getUserInfo");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getUserInfoParam776,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getUserInfo")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getUserInfo"));

        // add the soap_headers only if they are not null
        if (authHeader777 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader777 = toOM(authHeader777,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getUserInfo")));
            addHeader(omElementauthHeader777, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserInfoReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetUserInfo(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserInfoReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetUserInfo(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUserInfo"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUserInfo"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUserInfo"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetUserInfo((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetUserInfo((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetUserInfo((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetUserInfo(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUserInfo(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUserInfo(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUserInfo(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUserInfo(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUserInfo(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUserInfo(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUserInfo(f);
                            }
                        } else {
                            callback.receiveErrorgetUserInfo(f);
                        }
                    } else {
                        callback.receiveErrorgetUserInfo(f);
                    }
                } else {
                    callback.receiveErrorgetUserInfo(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetUserInfo(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[27].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[27].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param deleteAssetParam779
     * @param authHeader780
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#deleteAsset
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetReturn deleteAsset(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetParam deleteAssetParam779,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader780)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[28].getName());
            _operationClient.getOptions().setAction("deleteAsset");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    deleteAssetParam779,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteAsset")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteAsset"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader780 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader780 = toOM(authHeader780,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteAsset")));
                addHeader(omElementauthHeader780, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteAsset"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteAsset"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteAsset"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param deleteAssetParam779
     * @param authHeader780
     * @see com.scene7.www.ipsapi.IpsApiService#startdeleteAsset
     */
    public void startdeleteAsset(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetParam deleteAssetParam779,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader780,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[28].getName());
        _operationClient.getOptions().setAction("deleteAsset");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                deleteAssetParam779,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteAsset")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteAsset"));

        // add the soap_headers only if they are not null
        if (authHeader780 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader780 = toOM(authHeader780,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteAsset")));
            addHeader(omElementauthHeader780, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultdeleteAsset(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrordeleteAsset(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteAsset"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteAsset"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteAsset"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrordeleteAsset((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrordeleteAsset((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrordeleteAsset((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrordeleteAsset(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAsset(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAsset(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAsset(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAsset(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAsset(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAsset(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAsset(f);
                            }
                        } else {
                            callback.receiveErrordeleteAsset(f);
                        }
                    } else {
                        callback.receiveErrordeleteAsset(f);
                    }
                } else {
                    callback.receiveErrordeleteAsset(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrordeleteAsset(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[28].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[28].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getImageServingPublishSettingsParam782
     * @param authHeader783
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getImageServingPublishSettings
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageServingPublishSettingsReturn getImageServingPublishSettings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageServingPublishSettingsParam getImageServingPublishSettingsParam782,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader783)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[29].getName());
            _operationClient.getOptions().setAction("getImageServingPublishSettings");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getImageServingPublishSettingsParam782,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getImageServingPublishSettings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getImageServingPublishSettings"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader783 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader783 = toOM(authHeader783,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getImageServingPublishSettings")));
                addHeader(omElementauthHeader783, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageServingPublishSettingsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageServingPublishSettingsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageServingPublishSettings"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageServingPublishSettings"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageServingPublishSettings"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getImageServingPublishSettingsParam782
     * @param authHeader783
     * @see com.scene7.www.ipsapi.IpsApiService#startgetImageServingPublishSettings
     */
    public void startgetImageServingPublishSettings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageServingPublishSettingsParam getImageServingPublishSettingsParam782,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader783,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[29].getName());
        _operationClient.getOptions().setAction("getImageServingPublishSettings");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getImageServingPublishSettingsParam782,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getImageServingPublishSettings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getImageServingPublishSettings"));

        // add the soap_headers only if they are not null
        if (authHeader783 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader783 = toOM(authHeader783,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getImageServingPublishSettings")));
            addHeader(omElementauthHeader783, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageServingPublishSettingsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetImageServingPublishSettings(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageServingPublishSettingsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetImageServingPublishSettings(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(
                                new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageServingPublishSettings"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),
                                                "getImageServingPublishSettings"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),
                                                "getImageServingPublishSettings"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetImageServingPublishSettings(
                                            (com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetImageServingPublishSettings((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetImageServingPublishSettings(
                                            (com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetImageServingPublishSettings(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageServingPublishSettings(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageServingPublishSettings(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageServingPublishSettings(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageServingPublishSettings(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageServingPublishSettings(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageServingPublishSettings(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageServingPublishSettings(f);
                            }
                        } else {
                            callback.receiveErrorgetImageServingPublishSettings(f);
                        }
                    } else {
                        callback.receiveErrorgetImageServingPublishSettings(f);
                    }
                } else {
                    callback.receiveErrorgetImageServingPublishSettings(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetImageServingPublishSettings(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[29].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[29].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setPasswordParam785
     * @param authHeader786
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setPassword
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPasswordReturn setPassword(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPasswordParam setPasswordParam785,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader786)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[30].getName());
            _operationClient.getOptions().setAction("setPassword");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setPasswordParam785,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setPassword")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setPassword"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader786 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader786 = toOM(authHeader786,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setPassword")));
                addHeader(omElementauthHeader786, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPasswordReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPasswordReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setPassword"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setPassword"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setPassword"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setPasswordParam785
     * @param authHeader786
     * @see com.scene7.www.ipsapi.IpsApiService#startsetPassword
     */
    public void startsetPassword(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPasswordParam setPasswordParam785,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader786,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[30].getName());
        _operationClient.getOptions().setAction("setPassword");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setPasswordParam785,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setPassword")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setPassword"));

        // add the soap_headers only if they are not null
        if (authHeader786 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader786 = toOM(authHeader786,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setPassword")));
            addHeader(omElementauthHeader786, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPasswordReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetPassword(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPasswordReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetPassword(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setPassword"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setPassword"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setPassword"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetPassword((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetPassword((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetPassword((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetPassword(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetPassword(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetPassword(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetPassword(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetPassword(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetPassword(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetPassword(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetPassword(f);
                            }
                        } else {
                            callback.receiveErrorsetPassword(f);
                        }
                    } else {
                        callback.receiveErrorsetPassword(f);
                    }
                } else {
                    callback.receiveErrorsetPassword(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetPassword(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[30].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[30].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setAssetsContextStateParam788
     * @param authHeader789
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setAssetsContextState
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsContextStateReturn setAssetsContextState(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsContextStateParam setAssetsContextStateParam788,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader789)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[31].getName());
            _operationClient.getOptions().setAction("setAssetsContextState");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setAssetsContextStateParam788,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setAssetsContextState")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setAssetsContextState"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader789 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader789 = toOM(authHeader789,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setAssetsContextState")));
                addHeader(omElementauthHeader789, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsContextStateReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsContextStateReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetsContextState"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetsContextState"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetsContextState"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setAssetsContextStateParam788
     * @param authHeader789
     * @see com.scene7.www.ipsapi.IpsApiService#startsetAssetsContextState
     */
    public void startsetAssetsContextState(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsContextStateParam setAssetsContextStateParam788,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader789,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[31].getName());
        _operationClient.getOptions().setAction("setAssetsContextState");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setAssetsContextStateParam788,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setAssetsContextState")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setAssetsContextState"));

        // add the soap_headers only if they are not null
        if (authHeader789 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader789 = toOM(authHeader789,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setAssetsContextState")));
            addHeader(omElementauthHeader789, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsContextStateReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetAssetsContextState(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsContextStateReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetAssetsContextState(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetsContextState"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetsContextState"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetsContextState"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetAssetsContextState((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetAssetsContextState((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetAssetsContextState((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetAssetsContextState(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetsContextState(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetsContextState(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetsContextState(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetsContextState(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetsContextState(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetsContextState(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetsContextState(f);
                            }
                        } else {
                            callback.receiveErrorsetAssetsContextState(f);
                        }
                    } else {
                        callback.receiveErrorsetAssetsContextState(f);
                    }
                } else {
                    callback.receiveErrorsetAssetsContextState(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetAssetsContextState(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[31].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[31].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param updateCompanyMetadataParam791
     * @param authHeader792
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#updateCompanyMetadata
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateCompanyMetadataReturn updateCompanyMetadata(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateCompanyMetadataParam updateCompanyMetadataParam791,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader792)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[32].getName());
            _operationClient.getOptions().setAction("updateCompanyMetadata");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    updateCompanyMetadataParam791,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateCompanyMetadata")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateCompanyMetadata"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader792 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader792 = toOM(authHeader792,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateCompanyMetadata")));
                addHeader(omElementauthHeader792, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateCompanyMetadataReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateCompanyMetadataReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateCompanyMetadata"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateCompanyMetadata"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateCompanyMetadata"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param updateCompanyMetadataParam791
     * @param authHeader792
     * @see com.scene7.www.ipsapi.IpsApiService#startupdateCompanyMetadata
     */
    public void startupdateCompanyMetadata(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateCompanyMetadataParam updateCompanyMetadataParam791,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader792,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[32].getName());
        _operationClient.getOptions().setAction("updateCompanyMetadata");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                updateCompanyMetadataParam791,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateCompanyMetadata")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateCompanyMetadata"));

        // add the soap_headers only if they are not null
        if (authHeader792 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader792 = toOM(authHeader792,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateCompanyMetadata")));
            addHeader(omElementauthHeader792, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateCompanyMetadataReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultupdateCompanyMetadata(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateCompanyMetadataReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorupdateCompanyMetadata(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateCompanyMetadata"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateCompanyMetadata"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateCompanyMetadata"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorupdateCompanyMetadata((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorupdateCompanyMetadata((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorupdateCompanyMetadata((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorupdateCompanyMetadata(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateCompanyMetadata(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateCompanyMetadata(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateCompanyMetadata(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateCompanyMetadata(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateCompanyMetadata(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateCompanyMetadata(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateCompanyMetadata(f);
                            }
                        } else {
                            callback.receiveErrorupdateCompanyMetadata(f);
                        }
                    } else {
                        callback.receiveErrorupdateCompanyMetadata(f);
                    }
                } else {
                    callback.receiveErrorupdateCompanyMetadata(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorupdateCompanyMetadata(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[32].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[32].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param deleteMetadataFieldParam794
     * @param authHeader795
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#deleteMetadataField
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteMetadataFieldReturn deleteMetadataField(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteMetadataFieldParam deleteMetadataFieldParam794,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader795)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[33].getName());
            _operationClient.getOptions().setAction("deleteMetadataField");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    deleteMetadataFieldParam794,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteMetadataField")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteMetadataField"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader795 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader795 = toOM(authHeader795,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteMetadataField")));
                addHeader(omElementauthHeader795, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteMetadataFieldReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteMetadataFieldReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteMetadataField"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteMetadataField"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteMetadataField"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param deleteMetadataFieldParam794
     * @param authHeader795
     * @see com.scene7.www.ipsapi.IpsApiService#startdeleteMetadataField
     */
    public void startdeleteMetadataField(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteMetadataFieldParam deleteMetadataFieldParam794,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader795,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[33].getName());
        _operationClient.getOptions().setAction("deleteMetadataField");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                deleteMetadataFieldParam794,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteMetadataField")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteMetadataField"));

        // add the soap_headers only if they are not null
        if (authHeader795 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader795 = toOM(authHeader795,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteMetadataField")));
            addHeader(omElementauthHeader795, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteMetadataFieldReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultdeleteMetadataField(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteMetadataFieldReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrordeleteMetadataField(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteMetadataField"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteMetadataField"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteMetadataField"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrordeleteMetadataField((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrordeleteMetadataField((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrordeleteMetadataField((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrordeleteMetadataField(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteMetadataField(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteMetadataField(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteMetadataField(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteMetadataField(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteMetadataField(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteMetadataField(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteMetadataField(f);
                            }
                        } else {
                            callback.receiveErrordeleteMetadataField(f);
                        }
                    } else {
                        callback.receiveErrordeleteMetadataField(f);
                    }
                } else {
                    callback.receiveErrordeleteMetadataField(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrordeleteMetadataField(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[33].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[33].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param updateAssetPermissionsParam797
     * @param authHeader798
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#updateAssetPermissions
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetPermissionsReturn updateAssetPermissions(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetPermissionsParam updateAssetPermissionsParam797,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader798)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[34].getName());
            _operationClient.getOptions().setAction("updateAssetPermissions");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    updateAssetPermissionsParam797,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateAssetPermissions")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateAssetPermissions"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader798 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader798 = toOM(authHeader798,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateAssetPermissions")));
                addHeader(omElementauthHeader798, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetPermissionsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetPermissionsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateAssetPermissions"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateAssetPermissions"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateAssetPermissions"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param updateAssetPermissionsParam797
     * @param authHeader798
     * @see com.scene7.www.ipsapi.IpsApiService#startupdateAssetPermissions
     */
    public void startupdateAssetPermissions(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetPermissionsParam updateAssetPermissionsParam797,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader798,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[34].getName());
        _operationClient.getOptions().setAction("updateAssetPermissions");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                updateAssetPermissionsParam797,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateAssetPermissions")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateAssetPermissions"));

        // add the soap_headers only if they are not null
        if (authHeader798 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader798 = toOM(authHeader798,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateAssetPermissions")));
            addHeader(omElementauthHeader798, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetPermissionsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultupdateAssetPermissions(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetPermissionsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorupdateAssetPermissions(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateAssetPermissions"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateAssetPermissions"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateAssetPermissions"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorupdateAssetPermissions((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorupdateAssetPermissions((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorupdateAssetPermissions((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorupdateAssetPermissions(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateAssetPermissions(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateAssetPermissions(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateAssetPermissions(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateAssetPermissions(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateAssetPermissions(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateAssetPermissions(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateAssetPermissions(f);
                            }
                        } else {
                            callback.receiveErrorupdateAssetPermissions(f);
                        }
                    } else {
                        callback.receiveErrorupdateAssetPermissions(f);
                    }
                } else {
                    callback.receiveErrorupdateAssetPermissions(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorupdateAssetPermissions(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[34].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[34].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setAssetSetDefinitionParam800
     * @param authHeader801
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setAssetSetDefinition
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetSetDefinitionReturn setAssetSetDefinition(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetSetDefinitionParam setAssetSetDefinitionParam800,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader801)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[35].getName());
            _operationClient.getOptions().setAction("setAssetSetDefinition");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setAssetSetDefinitionParam800,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setAssetSetDefinition")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setAssetSetDefinition"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader801 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader801 = toOM(authHeader801,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setAssetSetDefinition")));
                addHeader(omElementauthHeader801, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetSetDefinitionReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetSetDefinitionReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetSetDefinition"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetSetDefinition"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetSetDefinition"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setAssetSetDefinitionParam800
     * @param authHeader801
     * @see com.scene7.www.ipsapi.IpsApiService#startsetAssetSetDefinition
     */
    public void startsetAssetSetDefinition(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetSetDefinitionParam setAssetSetDefinitionParam800,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader801,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[35].getName());
        _operationClient.getOptions().setAction("setAssetSetDefinition");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setAssetSetDefinitionParam800,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setAssetSetDefinition")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setAssetSetDefinition"));

        // add the soap_headers only if they are not null
        if (authHeader801 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader801 = toOM(authHeader801,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setAssetSetDefinition")));
            addHeader(omElementauthHeader801, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetSetDefinitionReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetAssetSetDefinition(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetSetDefinitionReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetAssetSetDefinition(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetSetDefinition"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetSetDefinition"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetSetDefinition"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetAssetSetDefinition((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetAssetSetDefinition((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetAssetSetDefinition((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetAssetSetDefinition(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetSetDefinition(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetSetDefinition(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetSetDefinition(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetSetDefinition(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetSetDefinition(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetSetDefinition(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetSetDefinition(f);
                            }
                        } else {
                            callback.receiveErrorsetAssetSetDefinition(f);
                        }
                    } else {
                        callback.receiveErrorsetAssetSetDefinition(f);
                    }
                } else {
                    callback.receiveErrorsetAssetSetDefinition(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetAssetSetDefinition(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[35].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[35].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getUserCharsParam803
     * @param authHeader804
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getUserChars
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserCharsReturn getUserChars(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserCharsParam getUserCharsParam803,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader804)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[36].getName());
            _operationClient.getOptions().setAction("getUserChars");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getUserCharsParam803,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getUserChars")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getUserChars"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader804 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader804 = toOM(authHeader804,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getUserChars")));
                addHeader(omElementauthHeader804, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserCharsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserCharsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUserChars"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUserChars"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUserChars"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getUserCharsParam803
     * @param authHeader804
     * @see com.scene7.www.ipsapi.IpsApiService#startgetUserChars
     */
    public void startgetUserChars(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserCharsParam getUserCharsParam803,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader804,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[36].getName());
        _operationClient.getOptions().setAction("getUserChars");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getUserCharsParam803,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getUserChars")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getUserChars"));

        // add the soap_headers only if they are not null
        if (authHeader804 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader804 = toOM(authHeader804,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getUserChars")));
            addHeader(omElementauthHeader804, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserCharsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetUserChars(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserCharsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetUserChars(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUserChars"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUserChars"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUserChars"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetUserChars((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetUserChars((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetUserChars((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetUserChars(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUserChars(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUserChars(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUserChars(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUserChars(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUserChars(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUserChars(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUserChars(f);
                            }
                        } else {
                            callback.receiveErrorgetUserChars(f);
                        }
                    } else {
                        callback.receiveErrorgetUserChars(f);
                    }
                } else {
                    callback.receiveErrorgetUserChars(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetUserChars(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[36].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[36].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param renameFolderParam806
     * @param authHeader807
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#renameFolder
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameFolderReturn renameFolder(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameFolderParam renameFolderParam806,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader807)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[37].getName());
            _operationClient.getOptions().setAction("renameFolder");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    renameFolderParam806,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "renameFolder")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "renameFolder"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader807 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader807 = toOM(authHeader807,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "renameFolder")));
                addHeader(omElementauthHeader807, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameFolderReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameFolderReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "renameFolder"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "renameFolder"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "renameFolder"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param renameFolderParam806
     * @param authHeader807
     * @see com.scene7.www.ipsapi.IpsApiService#startrenameFolder
     */
    public void startrenameFolder(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameFolderParam renameFolderParam806,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader807,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[37].getName());
        _operationClient.getOptions().setAction("renameFolder");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                renameFolderParam806,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "renameFolder")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "renameFolder"));

        // add the soap_headers only if they are not null
        if (authHeader807 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader807 = toOM(authHeader807,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "renameFolder")));
            addHeader(omElementauthHeader807, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameFolderReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultrenameFolder(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameFolderReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorrenameFolder(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "renameFolder"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "renameFolder"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "renameFolder"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorrenameFolder((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorrenameFolder((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorrenameFolder((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorrenameFolder(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameFolder(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameFolder(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameFolder(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameFolder(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameFolder(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameFolder(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameFolder(f);
                            }
                        } else {
                            callback.receiveErrorrenameFolder(f);
                        }
                    } else {
                        callback.receiveErrorrenameFolder(f);
                    }
                } else {
                    callback.receiveErrorrenameFolder(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorrenameFolder(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[37].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[37].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param batchSetIccProfileFieldsParam809
     * @param authHeader810
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#batchSetIccProfileFields
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetIccProfileFieldsReturn batchSetIccProfileFields(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetIccProfileFieldsParam batchSetIccProfileFieldsParam809,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader810)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[38].getName());
            _operationClient.getOptions().setAction("batchSetIccProfileFields");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    batchSetIccProfileFieldsParam809,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "batchSetIccProfileFields")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "batchSetIccProfileFields"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader810 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader810 = toOM(authHeader810,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "batchSetIccProfileFields")));
                addHeader(omElementauthHeader810, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetIccProfileFieldsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetIccProfileFieldsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetIccProfileFields"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetIccProfileFields"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetIccProfileFields"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param batchSetIccProfileFieldsParam809
     * @param authHeader810
     * @see com.scene7.www.ipsapi.IpsApiService#startbatchSetIccProfileFields
     */
    public void startbatchSetIccProfileFields(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetIccProfileFieldsParam batchSetIccProfileFieldsParam809,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader810,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[38].getName());
        _operationClient.getOptions().setAction("batchSetIccProfileFields");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                batchSetIccProfileFieldsParam809,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "batchSetIccProfileFields")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "batchSetIccProfileFields"));

        // add the soap_headers only if they are not null
        if (authHeader810 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader810 = toOM(authHeader810,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "batchSetIccProfileFields")));
            addHeader(omElementauthHeader810, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetIccProfileFieldsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultbatchSetIccProfileFields(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetIccProfileFieldsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorbatchSetIccProfileFields(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetIccProfileFields"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetIccProfileFields"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetIccProfileFields"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorbatchSetIccProfileFields((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorbatchSetIccProfileFields((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorbatchSetIccProfileFields((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorbatchSetIccProfileFields(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetIccProfileFields(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetIccProfileFields(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetIccProfileFields(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetIccProfileFields(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetIccProfileFields(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetIccProfileFields(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetIccProfileFields(f);
                            }
                        } else {
                            callback.receiveErrorbatchSetIccProfileFields(f);
                        }
                    } else {
                        callback.receiveErrorbatchSetIccProfileFields(f);
                    }
                } else {
                    callback.receiveErrorbatchSetIccProfileFields(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorbatchSetIccProfileFields(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[38].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[38].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param createProjectParam812
     * @param authHeader813
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#createProject
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateProjectReturn createProject(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateProjectParam createProjectParam812,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader813)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[39].getName());
            _operationClient.getOptions().setAction("createProject");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    createProjectParam812,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createProject")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createProject"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader813 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader813 = toOM(authHeader813,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createProject")));
                addHeader(omElementauthHeader813, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateProjectReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateProjectReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createProject"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createProject"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createProject"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param createProjectParam812
     * @param authHeader813
     * @see com.scene7.www.ipsapi.IpsApiService#startcreateProject
     */
    public void startcreateProject(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateProjectParam createProjectParam812,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader813,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[39].getName());
        _operationClient.getOptions().setAction("createProject");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                createProjectParam812,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createProject")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createProject"));

        // add the soap_headers only if they are not null
        if (authHeader813 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader813 = toOM(authHeader813,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createProject")));
            addHeader(omElementauthHeader813, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateProjectReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultcreateProject(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateProjectReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorcreateProject(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createProject"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createProject"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createProject"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorcreateProject((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorcreateProject((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorcreateProject((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorcreateProject(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateProject(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateProject(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateProject(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateProject(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateProject(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateProject(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateProject(f);
                            }
                        } else {
                            callback.receiveErrorcreateProject(f);
                        }
                    } else {
                        callback.receiveErrorcreateProject(f);
                    }
                } else {
                    callback.receiveErrorcreateProject(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorcreateProject(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[39].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[39].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param updatePropertySetPermissionsParam815
     * @param authHeader816
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#updatePropertySetPermissions
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetPermissionsReturn updatePropertySetPermissions(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetPermissionsParam updatePropertySetPermissionsParam815,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader816)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[40].getName());
            _operationClient.getOptions().setAction("updatePropertySetPermissions");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    updatePropertySetPermissionsParam815,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updatePropertySetPermissions")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updatePropertySetPermissions"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader816 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader816 = toOM(authHeader816,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updatePropertySetPermissions")));
                addHeader(omElementauthHeader816, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetPermissionsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetPermissionsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updatePropertySetPermissions"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updatePropertySetPermissions"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updatePropertySetPermissions"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param updatePropertySetPermissionsParam815
     * @param authHeader816
     * @see com.scene7.www.ipsapi.IpsApiService#startupdatePropertySetPermissions
     */
    public void startupdatePropertySetPermissions(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetPermissionsParam updatePropertySetPermissionsParam815,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader816,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[40].getName());
        _operationClient.getOptions().setAction("updatePropertySetPermissions");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                updatePropertySetPermissionsParam815,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updatePropertySetPermissions")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updatePropertySetPermissions"));

        // add the soap_headers only if they are not null
        if (authHeader816 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader816 = toOM(authHeader816,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updatePropertySetPermissions")));
            addHeader(omElementauthHeader816, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetPermissionsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultupdatePropertySetPermissions(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetPermissionsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorupdatePropertySetPermissions(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(
                                new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updatePropertySetPermissions"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updatePropertySetPermissions"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updatePropertySetPermissions"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorupdatePropertySetPermissions(
                                            (com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorupdatePropertySetPermissions((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorupdatePropertySetPermissions(
                                            (com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorupdatePropertySetPermissions(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdatePropertySetPermissions(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdatePropertySetPermissions(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdatePropertySetPermissions(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdatePropertySetPermissions(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdatePropertySetPermissions(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdatePropertySetPermissions(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdatePropertySetPermissions(f);
                            }
                        } else {
                            callback.receiveErrorupdatePropertySetPermissions(f);
                        }
                    } else {
                        callback.receiveErrorupdatePropertySetPermissions(f);
                    }
                } else {
                    callback.receiveErrorupdatePropertySetPermissions(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorupdatePropertySetPermissions(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[40].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[40].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param createVignettePublishFormatParam818
     * @param authHeader819
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#createVignettePublishFormat
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateVignettePublishFormatReturn createVignettePublishFormat(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateVignettePublishFormatParam createVignettePublishFormatParam818,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader819)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[41].getName());
            _operationClient.getOptions().setAction("createVignettePublishFormat");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    createVignettePublishFormatParam818,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createVignettePublishFormat")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createVignettePublishFormat"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader819 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader819 = toOM(authHeader819,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createVignettePublishFormat")));
                addHeader(omElementauthHeader819, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateVignettePublishFormatReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateVignettePublishFormatReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createVignettePublishFormat"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createVignettePublishFormat"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createVignettePublishFormat"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param createVignettePublishFormatParam818
     * @param authHeader819
     * @see com.scene7.www.ipsapi.IpsApiService#startcreateVignettePublishFormat
     */
    public void startcreateVignettePublishFormat(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateVignettePublishFormatParam createVignettePublishFormatParam818,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader819,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[41].getName());
        _operationClient.getOptions().setAction("createVignettePublishFormat");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                createVignettePublishFormatParam818,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createVignettePublishFormat")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createVignettePublishFormat"));

        // add the soap_headers only if they are not null
        if (authHeader819 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader819 = toOM(authHeader819,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createVignettePublishFormat")));
            addHeader(omElementauthHeader819, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateVignettePublishFormatReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultcreateVignettePublishFormat(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateVignettePublishFormatReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorcreateVignettePublishFormat(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createVignettePublishFormat"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createVignettePublishFormat"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createVignettePublishFormat"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorcreateVignettePublishFormat(
                                            (com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorcreateVignettePublishFormat((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorcreateVignettePublishFormat(
                                            (com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorcreateVignettePublishFormat(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateVignettePublishFormat(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateVignettePublishFormat(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateVignettePublishFormat(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateVignettePublishFormat(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateVignettePublishFormat(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateVignettePublishFormat(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateVignettePublishFormat(f);
                            }
                        } else {
                            callback.receiveErrorcreateVignettePublishFormat(f);
                        }
                    } else {
                        callback.receiveErrorcreateVignettePublishFormat(f);
                    }
                } else {
                    callback.receiveErrorcreateVignettePublishFormat(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorcreateVignettePublishFormat(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[41].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[41].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setViewerConfigSettingsParam821
     * @param authHeader822
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setViewerConfigSettings
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetViewerConfigSettingsReturn setViewerConfigSettings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetViewerConfigSettingsParam setViewerConfigSettingsParam821,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader822)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[42].getName());
            _operationClient.getOptions().setAction("setViewerConfigSettings");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setViewerConfigSettingsParam821,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setViewerConfigSettings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setViewerConfigSettings"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader822 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader822 = toOM(authHeader822,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setViewerConfigSettings")));
                addHeader(omElementauthHeader822, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetViewerConfigSettingsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetViewerConfigSettingsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setViewerConfigSettings"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setViewerConfigSettings"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setViewerConfigSettings"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setViewerConfigSettingsParam821
     * @param authHeader822
     * @see com.scene7.www.ipsapi.IpsApiService#startsetViewerConfigSettings
     */
    public void startsetViewerConfigSettings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetViewerConfigSettingsParam setViewerConfigSettingsParam821,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader822,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[42].getName());
        _operationClient.getOptions().setAction("setViewerConfigSettings");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setViewerConfigSettingsParam821,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setViewerConfigSettings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setViewerConfigSettings"));

        // add the soap_headers only if they are not null
        if (authHeader822 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader822 = toOM(authHeader822,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setViewerConfigSettings")));
            addHeader(omElementauthHeader822, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetViewerConfigSettingsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetViewerConfigSettings(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetViewerConfigSettingsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetViewerConfigSettings(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setViewerConfigSettings"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setViewerConfigSettings"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setViewerConfigSettings"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetViewerConfigSettings((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetViewerConfigSettings((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetViewerConfigSettings((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetViewerConfigSettings(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetViewerConfigSettings(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetViewerConfigSettings(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetViewerConfigSettings(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetViewerConfigSettings(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetViewerConfigSettings(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetViewerConfigSettings(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetViewerConfigSettings(f);
                            }
                        } else {
                            callback.receiveErrorsetViewerConfigSettings(f);
                        }
                    } else {
                        callback.receiveErrorsetViewerConfigSettings(f);
                    }
                } else {
                    callback.receiveErrorsetViewerConfigSettings(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetViewerConfigSettings(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[42].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[42].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param pauseJobParam824
     * @param authHeader825
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#pauseJob
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.PauseJobReturn pauseJob(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.PauseJobParam pauseJobParam824,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader825)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[43].getName());
            _operationClient.getOptions().setAction("pauseJob");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    pauseJobParam824,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "pauseJob")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "pauseJob"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader825 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader825 = toOM(authHeader825,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "pauseJob")));
                addHeader(omElementauthHeader825, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.PauseJobReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.PauseJobReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "pauseJob"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "pauseJob"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "pauseJob"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param pauseJobParam824
     * @param authHeader825
     * @see com.scene7.www.ipsapi.IpsApiService#startpauseJob
     */
    public void startpauseJob(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.PauseJobParam pauseJobParam824,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader825,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[43].getName());
        _operationClient.getOptions().setAction("pauseJob");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                pauseJobParam824,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "pauseJob")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "pauseJob"));

        // add the soap_headers only if they are not null
        if (authHeader825 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader825 = toOM(authHeader825,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "pauseJob")));
            addHeader(omElementauthHeader825, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.PauseJobReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultpauseJob(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.PauseJobReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorpauseJob(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "pauseJob"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "pauseJob"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "pauseJob"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorpauseJob((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorpauseJob((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorpauseJob((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorpauseJob(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorpauseJob(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorpauseJob(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorpauseJob(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorpauseJob(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorpauseJob(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorpauseJob(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorpauseJob(f);
                            }
                        } else {
                            callback.receiveErrorpauseJob(f);
                        }
                    } else {
                        callback.receiveErrorpauseJob(f);
                    }
                } else {
                    callback.receiveErrorpauseJob(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorpauseJob(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[43].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[43].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param addTagFieldValuesParam827
     * @param authHeader828
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#addTagFieldValues
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddTagFieldValuesReturn addTagFieldValues(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddTagFieldValuesParam addTagFieldValuesParam827,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader828)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[44].getName());
            _operationClient.getOptions().setAction("addTagFieldValues");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    addTagFieldValuesParam827,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "addTagFieldValues")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "addTagFieldValues"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader828 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader828 = toOM(authHeader828,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addTagFieldValues")));
                addHeader(omElementauthHeader828, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddTagFieldValuesReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddTagFieldValuesReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addTagFieldValues"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addTagFieldValues"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addTagFieldValues"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param addTagFieldValuesParam827
     * @param authHeader828
     * @see com.scene7.www.ipsapi.IpsApiService#startaddTagFieldValues
     */
    public void startaddTagFieldValues(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddTagFieldValuesParam addTagFieldValuesParam827,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader828,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[44].getName());
        _operationClient.getOptions().setAction("addTagFieldValues");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                addTagFieldValuesParam827,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "addTagFieldValues")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "addTagFieldValues"));

        // add the soap_headers only if they are not null
        if (authHeader828 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader828 = toOM(authHeader828,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addTagFieldValues")));
            addHeader(omElementauthHeader828, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddTagFieldValuesReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultaddTagFieldValues(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddTagFieldValuesReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErroraddTagFieldValues(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addTagFieldValues"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addTagFieldValues"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addTagFieldValues"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErroraddTagFieldValues((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErroraddTagFieldValues((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErroraddTagFieldValues((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErroraddTagFieldValues(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddTagFieldValues(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddTagFieldValues(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddTagFieldValues(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddTagFieldValues(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddTagFieldValues(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddTagFieldValues(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddTagFieldValues(f);
                            }
                        } else {
                            callback.receiveErroraddTagFieldValues(f);
                        }
                    } else {
                        callback.receiveErroraddTagFieldValues(f);
                    }
                } else {
                    callback.receiveErroraddTagFieldValues(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErroraddTagFieldValues(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[44].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[44].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getMediaPortalEventParam830
     * @param authHeader831
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getMediaPortalEvent
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMediaPortalEventReturn getMediaPortalEvent(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMediaPortalEventParam getMediaPortalEventParam830,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader831)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[45].getName());
            _operationClient.getOptions().setAction("getMediaPortalEvent");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getMediaPortalEventParam830,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getMediaPortalEvent")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getMediaPortalEvent"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader831 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader831 = toOM(authHeader831,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getMediaPortalEvent")));
                addHeader(omElementauthHeader831, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMediaPortalEventReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMediaPortalEventReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMediaPortalEvent"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMediaPortalEvent"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMediaPortalEvent"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getMediaPortalEventParam830
     * @param authHeader831
     * @see com.scene7.www.ipsapi.IpsApiService#startgetMediaPortalEvent
     */
    public void startgetMediaPortalEvent(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMediaPortalEventParam getMediaPortalEventParam830,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader831,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[45].getName());
        _operationClient.getOptions().setAction("getMediaPortalEvent");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getMediaPortalEventParam830,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getMediaPortalEvent")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getMediaPortalEvent"));

        // add the soap_headers only if they are not null
        if (authHeader831 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader831 = toOM(authHeader831,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getMediaPortalEvent")));
            addHeader(omElementauthHeader831, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMediaPortalEventReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetMediaPortalEvent(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMediaPortalEventReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetMediaPortalEvent(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMediaPortalEvent"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMediaPortalEvent"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMediaPortalEvent"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetMediaPortalEvent((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetMediaPortalEvent((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetMediaPortalEvent((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetMediaPortalEvent(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMediaPortalEvent(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMediaPortalEvent(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMediaPortalEvent(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMediaPortalEvent(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMediaPortalEvent(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMediaPortalEvent(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMediaPortalEvent(f);
                            }
                        } else {
                            callback.receiveErrorgetMediaPortalEvent(f);
                        }
                    } else {
                        callback.receiveErrorgetMediaPortalEvent(f);
                    }
                } else {
                    callback.receiveErrorgetMediaPortalEvent(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetMediaPortalEvent(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[45].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[45].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getJobLogDetailsParam833
     * @param authHeader834
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getJobLogDetails
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogDetailsReturn getJobLogDetails(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogDetailsParam getJobLogDetailsParam833,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader834)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[46].getName());
            _operationClient.getOptions().setAction("getJobLogDetails");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getJobLogDetailsParam833,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getJobLogDetails")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getJobLogDetails"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader834 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader834 = toOM(authHeader834,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getJobLogDetails")));
                addHeader(omElementauthHeader834, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogDetailsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogDetailsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getJobLogDetails"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getJobLogDetails"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getJobLogDetails"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getJobLogDetailsParam833
     * @param authHeader834
     * @see com.scene7.www.ipsapi.IpsApiService#startgetJobLogDetails
     */
    public void startgetJobLogDetails(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogDetailsParam getJobLogDetailsParam833,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader834,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[46].getName());
        _operationClient.getOptions().setAction("getJobLogDetails");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getJobLogDetailsParam833,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getJobLogDetails")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getJobLogDetails"));

        // add the soap_headers only if they are not null
        if (authHeader834 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader834 = toOM(authHeader834,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getJobLogDetails")));
            addHeader(omElementauthHeader834, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogDetailsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetJobLogDetails(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogDetailsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetJobLogDetails(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getJobLogDetails"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getJobLogDetails"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getJobLogDetails"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetJobLogDetails((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetJobLogDetails((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetJobLogDetails((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetJobLogDetails(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetJobLogDetails(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetJobLogDetails(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetJobLogDetails(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetJobLogDetails(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetJobLogDetails(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetJobLogDetails(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetJobLogDetails(f);
                            }
                        } else {
                            callback.receiveErrorgetJobLogDetails(f);
                        }
                    } else {
                        callback.receiveErrorgetJobLogDetails(f);
                    }
                } else {
                    callback.receiveErrorgetJobLogDetails(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetJobLogDetails(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[46].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[46].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getSystemPropertiesParam836
     * @param authHeader837
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getSystemProperties
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSystemPropertiesReturn getSystemProperties(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSystemPropertiesParam getSystemPropertiesParam836,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader837)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[47].getName());
            _operationClient.getOptions().setAction("getSystemProperties");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getSystemPropertiesParam836,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getSystemProperties")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getSystemProperties"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader837 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader837 = toOM(authHeader837,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getSystemProperties")));
                addHeader(omElementauthHeader837, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSystemPropertiesReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSystemPropertiesReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getSystemProperties"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getSystemProperties"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getSystemProperties"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getSystemPropertiesParam836
     * @param authHeader837
     * @see com.scene7.www.ipsapi.IpsApiService#startgetSystemProperties
     */
    public void startgetSystemProperties(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSystemPropertiesParam getSystemPropertiesParam836,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader837,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[47].getName());
        _operationClient.getOptions().setAction("getSystemProperties");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getSystemPropertiesParam836,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getSystemProperties")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getSystemProperties"));

        // add the soap_headers only if they are not null
        if (authHeader837 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader837 = toOM(authHeader837,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getSystemProperties")));
            addHeader(omElementauthHeader837, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSystemPropertiesReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetSystemProperties(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSystemPropertiesReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetSystemProperties(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getSystemProperties"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getSystemProperties"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getSystemProperties"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetSystemProperties((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetSystemProperties((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetSystemProperties((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetSystemProperties(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetSystemProperties(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetSystemProperties(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetSystemProperties(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetSystemProperties(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetSystemProperties(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetSystemProperties(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetSystemProperties(f);
                            }
                        } else {
                            callback.receiveErrorgetSystemProperties(f);
                        }
                    } else {
                        callback.receiveErrorgetSystemProperties(f);
                    }
                } else {
                    callback.receiveErrorgetSystemProperties(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetSystemProperties(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[47].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[47].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param removePropertySetPermissionsParam839
     * @param authHeader840
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#removePropertySetPermissions
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemovePropertySetPermissionsReturn removePropertySetPermissions(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemovePropertySetPermissionsParam removePropertySetPermissionsParam839,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader840)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[48].getName());
            _operationClient.getOptions().setAction("removePropertySetPermissions");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    removePropertySetPermissionsParam839,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "removePropertySetPermissions")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "removePropertySetPermissions"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader840 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader840 = toOM(authHeader840,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removePropertySetPermissions")));
                addHeader(omElementauthHeader840, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemovePropertySetPermissionsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemovePropertySetPermissionsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removePropertySetPermissions"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removePropertySetPermissions"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removePropertySetPermissions"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param removePropertySetPermissionsParam839
     * @param authHeader840
     * @see com.scene7.www.ipsapi.IpsApiService#startremovePropertySetPermissions
     */
    public void startremovePropertySetPermissions(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemovePropertySetPermissionsParam removePropertySetPermissionsParam839,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader840,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[48].getName());
        _operationClient.getOptions().setAction("removePropertySetPermissions");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                removePropertySetPermissionsParam839,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "removePropertySetPermissions")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "removePropertySetPermissions"));

        // add the soap_headers only if they are not null
        if (authHeader840 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader840 = toOM(authHeader840,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removePropertySetPermissions")));
            addHeader(omElementauthHeader840, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemovePropertySetPermissionsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultremovePropertySetPermissions(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemovePropertySetPermissionsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorremovePropertySetPermissions(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(
                                new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removePropertySetPermissions"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removePropertySetPermissions"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removePropertySetPermissions"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorremovePropertySetPermissions(
                                            (com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorremovePropertySetPermissions((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorremovePropertySetPermissions(
                                            (com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorremovePropertySetPermissions(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremovePropertySetPermissions(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremovePropertySetPermissions(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremovePropertySetPermissions(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremovePropertySetPermissions(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremovePropertySetPermissions(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremovePropertySetPermissions(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremovePropertySetPermissions(f);
                            }
                        } else {
                            callback.receiveErrorremovePropertySetPermissions(f);
                        }
                    } else {
                        callback.receiveErrorremovePropertySetPermissions(f);
                    }
                } else {
                    callback.receiveErrorremovePropertySetPermissions(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorremovePropertySetPermissions(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[48].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[48].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getAssetCountsParam842
     * @param authHeader843
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getAssetCounts
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetCountsReturn getAssetCounts(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetCountsParam getAssetCountsParam842,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader843)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[49].getName());
            _operationClient.getOptions().setAction("getAssetCounts");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getAssetCountsParam842,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAssetCounts")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAssetCounts"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader843 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader843 = toOM(authHeader843,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssetCounts")));
                addHeader(omElementauthHeader843, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetCountsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetCountsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetCounts"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetCounts"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetCounts"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getAssetCountsParam842
     * @param authHeader843
     * @see com.scene7.www.ipsapi.IpsApiService#startgetAssetCounts
     */
    public void startgetAssetCounts(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetCountsParam getAssetCountsParam842,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader843,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[49].getName());
        _operationClient.getOptions().setAction("getAssetCounts");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getAssetCountsParam842,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAssetCounts")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAssetCounts"));

        // add the soap_headers only if they are not null
        if (authHeader843 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader843 = toOM(authHeader843,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssetCounts")));
            addHeader(omElementauthHeader843, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetCountsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetAssetCounts(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetCountsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetAssetCounts(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetCounts"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetCounts"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetCounts"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetAssetCounts((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetAssetCounts((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetAssetCounts((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetAssetCounts(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetCounts(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetCounts(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetCounts(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetCounts(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetCounts(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetCounts(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetCounts(f);
                            }
                        } else {
                            callback.receiveErrorgetAssetCounts(f);
                        }
                    } else {
                        callback.receiveErrorgetAssetCounts(f);
                    }
                } else {
                    callback.receiveErrorgetAssetCounts(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetAssetCounts(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[49].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[49].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getGroupMembershipParam845
     * @param authHeader846
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getGroupMembership
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembershipReturn getGroupMembership(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembershipParam getGroupMembershipParam845,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader846)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[50].getName());
            _operationClient.getOptions().setAction("getGroupMembership");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getGroupMembershipParam845,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getGroupMembership")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getGroupMembership"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader846 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader846 = toOM(authHeader846,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getGroupMembership")));
                addHeader(omElementauthHeader846, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembershipReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembershipReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGroupMembership"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGroupMembership"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGroupMembership"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getGroupMembershipParam845
     * @param authHeader846
     * @see com.scene7.www.ipsapi.IpsApiService#startgetGroupMembership
     */
    public void startgetGroupMembership(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembershipParam getGroupMembershipParam845,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader846,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[50].getName());
        _operationClient.getOptions().setAction("getGroupMembership");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getGroupMembershipParam845,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getGroupMembership")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getGroupMembership"));

        // add the soap_headers only if they are not null
        if (authHeader846 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader846 = toOM(authHeader846,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getGroupMembership")));
            addHeader(omElementauthHeader846, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembershipReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetGroupMembership(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembershipReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetGroupMembership(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGroupMembership"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGroupMembership"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGroupMembership"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetGroupMembership((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetGroupMembership((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetGroupMembership((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetGroupMembership(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroupMembership(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroupMembership(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroupMembership(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroupMembership(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroupMembership(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroupMembership(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroupMembership(f);
                            }
                        } else {
                            callback.receiveErrorgetGroupMembership(f);
                        }
                    } else {
                        callback.receiveErrorgetGroupMembership(f);
                    }
                } else {
                    callback.receiveErrorgetGroupMembership(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetGroupMembership(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[50].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[50].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getGenerationInfoParam848
     * @param authHeader849
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getGenerationInfo
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGenerationInfoReturn getGenerationInfo(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGenerationInfoParam getGenerationInfoParam848,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader849)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[51].getName());
            _operationClient.getOptions().setAction("getGenerationInfo");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getGenerationInfoParam848,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getGenerationInfo")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getGenerationInfo"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader849 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader849 = toOM(authHeader849,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getGenerationInfo")));
                addHeader(omElementauthHeader849, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGenerationInfoReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGenerationInfoReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGenerationInfo"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGenerationInfo"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGenerationInfo"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getGenerationInfoParam848
     * @param authHeader849
     * @see com.scene7.www.ipsapi.IpsApiService#startgetGenerationInfo
     */
    public void startgetGenerationInfo(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGenerationInfoParam getGenerationInfoParam848,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader849,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[51].getName());
        _operationClient.getOptions().setAction("getGenerationInfo");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getGenerationInfoParam848,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getGenerationInfo")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getGenerationInfo"));

        // add the soap_headers only if they are not null
        if (authHeader849 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader849 = toOM(authHeader849,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getGenerationInfo")));
            addHeader(omElementauthHeader849, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGenerationInfoReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetGenerationInfo(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGenerationInfoReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetGenerationInfo(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGenerationInfo"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGenerationInfo"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGenerationInfo"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetGenerationInfo((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetGenerationInfo((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetGenerationInfo((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetGenerationInfo(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGenerationInfo(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGenerationInfo(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGenerationInfo(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGenerationInfo(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGenerationInfo(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGenerationInfo(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGenerationInfo(f);
                            }
                        } else {
                            callback.receiveErrorgetGenerationInfo(f);
                        }
                    } else {
                        callback.receiveErrorgetGenerationInfo(f);
                    }
                } else {
                    callback.receiveErrorgetGenerationInfo(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetGenerationInfo(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[51].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[51].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getZipEntriesParam851
     * @param authHeader852
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getZipEntries
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetZipEntriesReturn getZipEntries(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetZipEntriesParam getZipEntriesParam851,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader852)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[52].getName());
            _operationClient.getOptions().setAction("getZipEntries");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getZipEntriesParam851,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getZipEntries")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getZipEntries"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader852 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader852 = toOM(authHeader852,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getZipEntries")));
                addHeader(omElementauthHeader852, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetZipEntriesReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetZipEntriesReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getZipEntries"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getZipEntries"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getZipEntries"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getZipEntriesParam851
     * @param authHeader852
     * @see com.scene7.www.ipsapi.IpsApiService#startgetZipEntries
     */
    public void startgetZipEntries(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetZipEntriesParam getZipEntriesParam851,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader852,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[52].getName());
        _operationClient.getOptions().setAction("getZipEntries");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getZipEntriesParam851,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getZipEntries")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getZipEntries"));

        // add the soap_headers only if they are not null
        if (authHeader852 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader852 = toOM(authHeader852,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getZipEntries")));
            addHeader(omElementauthHeader852, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetZipEntriesReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetZipEntries(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetZipEntriesReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetZipEntries(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getZipEntries"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getZipEntries"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getZipEntries"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetZipEntries((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetZipEntries((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetZipEntries((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetZipEntries(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetZipEntries(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetZipEntries(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetZipEntries(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetZipEntries(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetZipEntries(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetZipEntries(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetZipEntries(f);
                            }
                        } else {
                            callback.receiveErrorgetZipEntries(f);
                        }
                    } else {
                        callback.receiveErrorgetZipEntries(f);
                    }
                } else {
                    callback.receiveErrorgetZipEntries(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetZipEntries(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[52].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[52].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getImageRenderingPublishSettingsParam854
     * @param authHeader855
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getImageRenderingPublishSettings
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageRenderingPublishSettingsReturn getImageRenderingPublishSettings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageRenderingPublishSettingsParam getImageRenderingPublishSettingsParam854,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader855)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[53].getName());
            _operationClient.getOptions().setAction("getImageRenderingPublishSettings");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getImageRenderingPublishSettingsParam854,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getImageRenderingPublishSettings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getImageRenderingPublishSettings"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader855 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader855 = toOM(authHeader855,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getImageRenderingPublishSettings")));
                addHeader(omElementauthHeader855, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageRenderingPublishSettingsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageRenderingPublishSettingsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageRenderingPublishSettings"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageRenderingPublishSettings"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageRenderingPublishSettings"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getImageRenderingPublishSettingsParam854
     * @param authHeader855
     * @see com.scene7.www.ipsapi.IpsApiService#startgetImageRenderingPublishSettings
     */
    public void startgetImageRenderingPublishSettings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageRenderingPublishSettingsParam getImageRenderingPublishSettingsParam854,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader855,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[53].getName());
        _operationClient.getOptions().setAction("getImageRenderingPublishSettings");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getImageRenderingPublishSettingsParam854,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getImageRenderingPublishSettings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getImageRenderingPublishSettings"));

        // add the soap_headers only if they are not null
        if (authHeader855 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader855 = toOM(authHeader855,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getImageRenderingPublishSettings")));
            addHeader(omElementauthHeader855, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageRenderingPublishSettingsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetImageRenderingPublishSettings(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageRenderingPublishSettingsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetImageRenderingPublishSettings(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(
                                new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageRenderingPublishSettings"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),
                                                "getImageRenderingPublishSettings"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),
                                                "getImageRenderingPublishSettings"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetImageRenderingPublishSettings(
                                            (com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetImageRenderingPublishSettings((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetImageRenderingPublishSettings(
                                            (com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetImageRenderingPublishSettings(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageRenderingPublishSettings(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageRenderingPublishSettings(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageRenderingPublishSettings(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageRenderingPublishSettings(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageRenderingPublishSettings(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageRenderingPublishSettings(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageRenderingPublishSettings(f);
                            }
                        } else {
                            callback.receiveErrorgetImageRenderingPublishSettings(f);
                        }
                    } else {
                        callback.receiveErrorgetImageRenderingPublishSettings(f);
                    }
                } else {
                    callback.receiveErrorgetImageRenderingPublishSettings(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetImageRenderingPublishSettings(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[53].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[53].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getUsersParam857
     * @param authHeader858
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getUsers
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUsersReturn getUsers(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUsersParam getUsersParam857,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader858)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[54].getName());
            _operationClient.getOptions().setAction("getUsers");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getUsersParam857,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getUsers")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getUsers"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader858 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader858 = toOM(authHeader858,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getUsers")));
                addHeader(omElementauthHeader858, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUsersReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUsersReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUsers"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUsers"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUsers"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getUsersParam857
     * @param authHeader858
     * @see com.scene7.www.ipsapi.IpsApiService#startgetUsers
     */
    public void startgetUsers(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUsersParam getUsersParam857,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader858,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[54].getName());
        _operationClient.getOptions().setAction("getUsers");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getUsersParam857,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getUsers")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getUsers"));

        // add the soap_headers only if they are not null
        if (authHeader858 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader858 = toOM(authHeader858,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getUsers")));
            addHeader(omElementauthHeader858, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUsersReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetUsers(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUsersReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetUsers(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUsers"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUsers"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUsers"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetUsers((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetUsers((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetUsers((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetUsers(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUsers(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUsers(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUsers(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUsers(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUsers(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUsers(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUsers(f);
                            }
                        } else {
                            callback.receiveErrorgetUsers(f);
                        }
                    } else {
                        callback.receiveErrorgetUsers(f);
                    }
                } else {
                    callback.receiveErrorgetUsers(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetUsers(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[54].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[54].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getCompanyInfoParam860
     * @param authHeader861
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getCompanyInfo
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyInfoReturn getCompanyInfo(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyInfoParam getCompanyInfoParam860,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader861)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[55].getName());
            _operationClient.getOptions().setAction("getCompanyInfo");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getCompanyInfoParam860,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getCompanyInfo")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getCompanyInfo"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader861 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader861 = toOM(authHeader861,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getCompanyInfo")));
                addHeader(omElementauthHeader861, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyInfoReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyInfoReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyInfo"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyInfo"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyInfo"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getCompanyInfoParam860
     * @param authHeader861
     * @see com.scene7.www.ipsapi.IpsApiService#startgetCompanyInfo
     */
    public void startgetCompanyInfo(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyInfoParam getCompanyInfoParam860,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader861,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[55].getName());
        _operationClient.getOptions().setAction("getCompanyInfo");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getCompanyInfoParam860,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getCompanyInfo")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getCompanyInfo"));

        // add the soap_headers only if they are not null
        if (authHeader861 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader861 = toOM(authHeader861,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getCompanyInfo")));
            addHeader(omElementauthHeader861, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyInfoReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetCompanyInfo(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyInfoReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetCompanyInfo(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyInfo"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyInfo"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyInfo"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetCompanyInfo((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetCompanyInfo((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetCompanyInfo((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetCompanyInfo(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyInfo(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyInfo(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyInfo(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyInfo(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyInfo(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyInfo(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyInfo(f);
                            }
                        } else {
                            callback.receiveErrorgetCompanyInfo(f);
                        }
                    } else {
                        callback.receiveErrorgetCompanyInfo(f);
                    }
                } else {
                    callback.receiveErrorgetCompanyInfo(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetCompanyInfo(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[55].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[55].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getUniqueMetadataValuesParam863
     * @param authHeader864
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getUniqueMetadataValues
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUniqueMetadataValuesReturn getUniqueMetadataValues(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUniqueMetadataValuesParam getUniqueMetadataValuesParam863,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader864)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[56].getName());
            _operationClient.getOptions().setAction("getUniqueMetadataValues");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getUniqueMetadataValuesParam863,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getUniqueMetadataValues")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getUniqueMetadataValues"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader864 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader864 = toOM(authHeader864,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getUniqueMetadataValues")));
                addHeader(omElementauthHeader864, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUniqueMetadataValuesReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUniqueMetadataValuesReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUniqueMetadataValues"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUniqueMetadataValues"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUniqueMetadataValues"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getUniqueMetadataValuesParam863
     * @param authHeader864
     * @see com.scene7.www.ipsapi.IpsApiService#startgetUniqueMetadataValues
     */
    public void startgetUniqueMetadataValues(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUniqueMetadataValuesParam getUniqueMetadataValuesParam863,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader864,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[56].getName());
        _operationClient.getOptions().setAction("getUniqueMetadataValues");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getUniqueMetadataValuesParam863,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getUniqueMetadataValues")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getUniqueMetadataValues"));

        // add the soap_headers only if they are not null
        if (authHeader864 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader864 = toOM(authHeader864,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getUniqueMetadataValues")));
            addHeader(omElementauthHeader864, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUniqueMetadataValuesReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetUniqueMetadataValues(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUniqueMetadataValuesReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetUniqueMetadataValues(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUniqueMetadataValues"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUniqueMetadataValues"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getUniqueMetadataValues"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetUniqueMetadataValues((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetUniqueMetadataValues((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetUniqueMetadataValues((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetUniqueMetadataValues(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUniqueMetadataValues(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUniqueMetadataValues(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUniqueMetadataValues(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUniqueMetadataValues(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUniqueMetadataValues(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUniqueMetadataValues(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetUniqueMetadataValues(f);
                            }
                        } else {
                            callback.receiveErrorgetUniqueMetadataValues(f);
                        }
                    } else {
                        callback.receiveErrorgetUniqueMetadataValues(f);
                    }
                } else {
                    callback.receiveErrorgetUniqueMetadataValues(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetUniqueMetadataValues(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[56].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[56].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getImageSetMembersParam866
     * @param authHeader867
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getImageSetMembers
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageSetMembersReturn getImageSetMembers(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageSetMembersParam getImageSetMembersParam866,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader867)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[57].getName());
            _operationClient.getOptions().setAction("getImageSetMembers");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getImageSetMembersParam866,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getImageSetMembers")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getImageSetMembers"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader867 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader867 = toOM(authHeader867,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getImageSetMembers")));
                addHeader(omElementauthHeader867, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageSetMembersReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageSetMembersReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageSetMembers"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageSetMembers"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageSetMembers"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getImageSetMembersParam866
     * @param authHeader867
     * @see com.scene7.www.ipsapi.IpsApiService#startgetImageSetMembers
     */
    public void startgetImageSetMembers(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageSetMembersParam getImageSetMembersParam866,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader867,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[57].getName());
        _operationClient.getOptions().setAction("getImageSetMembers");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getImageSetMembersParam866,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getImageSetMembers")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getImageSetMembers"));

        // add the soap_headers only if they are not null
        if (authHeader867 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader867 = toOM(authHeader867,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getImageSetMembers")));
            addHeader(omElementauthHeader867, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageSetMembersReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetImageSetMembers(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageSetMembersReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetImageSetMembers(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageSetMembers"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageSetMembers"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageSetMembers"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetImageSetMembers((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetImageSetMembers((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetImageSetMembers((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetImageSetMembers(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageSetMembers(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageSetMembers(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageSetMembers(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageSetMembers(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageSetMembers(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageSetMembers(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageSetMembers(f);
                            }
                        } else {
                            callback.receiveErrorgetImageSetMembers(f);
                        }
                    } else {
                        callback.receiveErrorgetImageSetMembers(f);
                    }
                } else {
                    callback.receiveErrorgetImageSetMembers(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetImageSetMembers(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[57].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[57].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param updateXMPPacketParam869
     * @param authHeader870
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#updateXMPPacket
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateXMPPacketReturn updateXMPPacket(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateXMPPacketParam updateXMPPacketParam869,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader870)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[58].getName());
            _operationClient.getOptions().setAction("updateXMPPacket");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    updateXMPPacketParam869,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateXMPPacket")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateXMPPacket"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader870 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader870 = toOM(authHeader870,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateXMPPacket")));
                addHeader(omElementauthHeader870, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateXMPPacketReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateXMPPacketReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateXMPPacket"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateXMPPacket"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateXMPPacket"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param updateXMPPacketParam869
     * @param authHeader870
     * @see com.scene7.www.ipsapi.IpsApiService#startupdateXMPPacket
     */
    public void startupdateXMPPacket(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateXMPPacketParam updateXMPPacketParam869,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader870,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[58].getName());
        _operationClient.getOptions().setAction("updateXMPPacket");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                updateXMPPacketParam869,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateXMPPacket")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateXMPPacket"));

        // add the soap_headers only if they are not null
        if (authHeader870 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader870 = toOM(authHeader870,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateXMPPacket")));
            addHeader(omElementauthHeader870, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateXMPPacketReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultupdateXMPPacket(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateXMPPacketReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorupdateXMPPacket(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateXMPPacket"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateXMPPacket"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateXMPPacket"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorupdateXMPPacket((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorupdateXMPPacket((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorupdateXMPPacket((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorupdateXMPPacket(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateXMPPacket(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateXMPPacket(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateXMPPacket(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateXMPPacket(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateXMPPacket(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateXMPPacket(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateXMPPacket(f);
                            }
                        } else {
                            callback.receiveErrorupdateXMPPacket(f);
                        }
                    } else {
                        callback.receiveErrorupdateXMPPacket(f);
                    }
                } else {
                    callback.receiveErrorupdateXMPPacket(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorupdateXMPPacket(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[58].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[58].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setImageRenderingPublishSettingsParam872
     * @param authHeader873
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setImageRenderingPublishSettings
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageRenderingPublishSettingsReturn setImageRenderingPublishSettings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageRenderingPublishSettingsParam setImageRenderingPublishSettingsParam872,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader873)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[59].getName());
            _operationClient.getOptions().setAction("setImageRenderingPublishSettings");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setImageRenderingPublishSettingsParam872,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setImageRenderingPublishSettings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setImageRenderingPublishSettings"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader873 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader873 = toOM(authHeader873,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setImageRenderingPublishSettings")));
                addHeader(omElementauthHeader873, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageRenderingPublishSettingsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageRenderingPublishSettingsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageRenderingPublishSettings"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageRenderingPublishSettings"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageRenderingPublishSettings"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setImageRenderingPublishSettingsParam872
     * @param authHeader873
     * @see com.scene7.www.ipsapi.IpsApiService#startsetImageRenderingPublishSettings
     */
    public void startsetImageRenderingPublishSettings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageRenderingPublishSettingsParam setImageRenderingPublishSettingsParam872,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader873,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[59].getName());
        _operationClient.getOptions().setAction("setImageRenderingPublishSettings");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setImageRenderingPublishSettingsParam872,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setImageRenderingPublishSettings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setImageRenderingPublishSettings"));

        // add the soap_headers only if they are not null
        if (authHeader873 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader873 = toOM(authHeader873,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setImageRenderingPublishSettings")));
            addHeader(omElementauthHeader873, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageRenderingPublishSettingsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetImageRenderingPublishSettings(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageRenderingPublishSettingsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetImageRenderingPublishSettings(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(
                                new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageRenderingPublishSettings"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),
                                                "setImageRenderingPublishSettings"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),
                                                "setImageRenderingPublishSettings"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetImageRenderingPublishSettings(
                                            (com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetImageRenderingPublishSettings((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetImageRenderingPublishSettings(
                                            (com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetImageRenderingPublishSettings(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageRenderingPublishSettings(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageRenderingPublishSettings(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageRenderingPublishSettings(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageRenderingPublishSettings(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageRenderingPublishSettings(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageRenderingPublishSettings(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageRenderingPublishSettings(f);
                            }
                        } else {
                            callback.receiveErrorsetImageRenderingPublishSettings(f);
                        }
                    } else {
                        callback.receiveErrorsetImageRenderingPublishSettings(f);
                    }
                } else {
                    callback.receiveErrorsetImageRenderingPublishSettings(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetImageRenderingPublishSettings(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[59].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[59].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getAllUsersParam875
     * @param authHeader876
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getAllUsers
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllUsersReturn getAllUsers(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllUsersParam getAllUsersParam875,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader876)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[60].getName());
            _operationClient.getOptions().setAction("getAllUsers");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getAllUsersParam875,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAllUsers")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAllUsers"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader876 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader876 = toOM(authHeader876,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAllUsers")));
                addHeader(omElementauthHeader876, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllUsersReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllUsersReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAllUsers"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAllUsers"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAllUsers"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getAllUsersParam875
     * @param authHeader876
     * @see com.scene7.www.ipsapi.IpsApiService#startgetAllUsers
     */
    public void startgetAllUsers(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllUsersParam getAllUsersParam875,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader876,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[60].getName());
        _operationClient.getOptions().setAction("getAllUsers");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getAllUsersParam875,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAllUsers")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAllUsers"));

        // add the soap_headers only if they are not null
        if (authHeader876 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader876 = toOM(authHeader876,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAllUsers")));
            addHeader(omElementauthHeader876, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllUsersReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetAllUsers(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllUsersReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetAllUsers(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAllUsers"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAllUsers"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAllUsers"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetAllUsers((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetAllUsers((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetAllUsers((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetAllUsers(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAllUsers(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAllUsers(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAllUsers(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAllUsers(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAllUsers(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAllUsers(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAllUsers(f);
                            }
                        } else {
                            callback.receiveErrorgetAllUsers(f);
                        }
                    } else {
                        callback.receiveErrorgetAllUsers(f);
                    }
                } else {
                    callback.receiveErrorgetAllUsers(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetAllUsers(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[60].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[60].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param deleteTagFieldValuesParam878
     * @param authHeader879
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#deleteTagFieldValues
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteTagFieldValuesReturn deleteTagFieldValues(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteTagFieldValuesParam deleteTagFieldValuesParam878,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader879)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[61].getName());
            _operationClient.getOptions().setAction("deleteTagFieldValues");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    deleteTagFieldValuesParam878,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteTagFieldValues")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteTagFieldValues"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader879 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader879 = toOM(authHeader879,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteTagFieldValues")));
                addHeader(omElementauthHeader879, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteTagFieldValuesReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteTagFieldValuesReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteTagFieldValues"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteTagFieldValues"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteTagFieldValues"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param deleteTagFieldValuesParam878
     * @param authHeader879
     * @see com.scene7.www.ipsapi.IpsApiService#startdeleteTagFieldValues
     */
    public void startdeleteTagFieldValues(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteTagFieldValuesParam deleteTagFieldValuesParam878,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader879,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[61].getName());
        _operationClient.getOptions().setAction("deleteTagFieldValues");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                deleteTagFieldValuesParam878,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteTagFieldValues")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteTagFieldValues"));

        // add the soap_headers only if they are not null
        if (authHeader879 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader879 = toOM(authHeader879,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteTagFieldValues")));
            addHeader(omElementauthHeader879, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteTagFieldValuesReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultdeleteTagFieldValues(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteTagFieldValuesReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrordeleteTagFieldValues(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteTagFieldValues"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteTagFieldValues"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteTagFieldValues"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrordeleteTagFieldValues((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrordeleteTagFieldValues((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrordeleteTagFieldValues((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrordeleteTagFieldValues(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteTagFieldValues(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteTagFieldValues(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteTagFieldValues(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteTagFieldValues(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteTagFieldValues(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteTagFieldValues(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteTagFieldValues(f);
                            }
                        } else {
                            callback.receiveErrordeleteTagFieldValues(f);
                        }
                    } else {
                        callback.receiveErrordeleteTagFieldValues(f);
                    }
                } else {
                    callback.receiveErrordeleteTagFieldValues(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrordeleteTagFieldValues(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[61].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[61].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getDiskUsageParam881
     * @param authHeader882
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getDiskUsage
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDiskUsageReturn getDiskUsage(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDiskUsageParam getDiskUsageParam881,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader882)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[62].getName());
            _operationClient.getOptions().setAction("getDiskUsage");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getDiskUsageParam881,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getDiskUsage")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getDiskUsage"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader882 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader882 = toOM(authHeader882,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getDiskUsage")));
                addHeader(omElementauthHeader882, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDiskUsageReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDiskUsageReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getDiskUsage"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getDiskUsage"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getDiskUsage"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getDiskUsageParam881
     * @param authHeader882
     * @see com.scene7.www.ipsapi.IpsApiService#startgetDiskUsage
     */
    public void startgetDiskUsage(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDiskUsageParam getDiskUsageParam881,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader882,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[62].getName());
        _operationClient.getOptions().setAction("getDiskUsage");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getDiskUsageParam881,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getDiskUsage")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getDiskUsage"));

        // add the soap_headers only if they are not null
        if (authHeader882 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader882 = toOM(authHeader882,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getDiskUsage")));
            addHeader(omElementauthHeader882, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDiskUsageReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetDiskUsage(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDiskUsageReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetDiskUsage(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getDiskUsage"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getDiskUsage"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getDiskUsage"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetDiskUsage((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetDiskUsage((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetDiskUsage((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetDiskUsage(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetDiskUsage(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetDiskUsage(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetDiskUsage(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetDiskUsage(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetDiskUsage(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetDiskUsage(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetDiskUsage(f);
                            }
                        } else {
                            callback.receiveErrorgetDiskUsage(f);
                        }
                    } else {
                        callback.receiveErrorgetDiskUsage(f);
                    }
                } else {
                    callback.receiveErrorgetDiskUsage(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetDiskUsage(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[62].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[62].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param createViewerPresetParam884
     * @param authHeader885
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#createViewerPreset
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateViewerPresetReturn createViewerPreset(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateViewerPresetParam createViewerPresetParam884,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader885)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[63].getName());
            _operationClient.getOptions().setAction("createViewerPreset");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    createViewerPresetParam884,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createViewerPreset")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createViewerPreset"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader885 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader885 = toOM(authHeader885,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createViewerPreset")));
                addHeader(omElementauthHeader885, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateViewerPresetReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateViewerPresetReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createViewerPreset"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createViewerPreset"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createViewerPreset"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param createViewerPresetParam884
     * @param authHeader885
     * @see com.scene7.www.ipsapi.IpsApiService#startcreateViewerPreset
     */
    public void startcreateViewerPreset(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateViewerPresetParam createViewerPresetParam884,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader885,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[63].getName());
        _operationClient.getOptions().setAction("createViewerPreset");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                createViewerPresetParam884,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createViewerPreset")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createViewerPreset"));

        // add the soap_headers only if they are not null
        if (authHeader885 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader885 = toOM(authHeader885,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createViewerPreset")));
            addHeader(omElementauthHeader885, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateViewerPresetReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultcreateViewerPreset(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateViewerPresetReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorcreateViewerPreset(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createViewerPreset"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createViewerPreset"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createViewerPreset"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorcreateViewerPreset((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorcreateViewerPreset((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorcreateViewerPreset((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorcreateViewerPreset(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateViewerPreset(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateViewerPreset(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateViewerPreset(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateViewerPreset(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateViewerPreset(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateViewerPreset(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateViewerPreset(f);
                            }
                        } else {
                            callback.receiveErrorcreateViewerPreset(f);
                        }
                    } else {
                        callback.receiveErrorcreateViewerPreset(f);
                    }
                } else {
                    callback.receiveErrorcreateViewerPreset(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorcreateViewerPreset(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[63].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[63].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param searchAssetsParam887
     * @param authHeader888
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#searchAssets
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsReturn searchAssets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsParam searchAssetsParam887,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader888)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[64].getName());
            _operationClient.getOptions().setAction("searchAssets");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    searchAssetsParam887,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "searchAssets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "searchAssets"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader888 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader888 = toOM(authHeader888,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "searchAssets")));
                addHeader(omElementauthHeader888, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "searchAssets"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "searchAssets"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "searchAssets"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param searchAssetsParam887
     * @param authHeader888
     * @see com.scene7.www.ipsapi.IpsApiService#startsearchAssets
     */
    public void startsearchAssets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsParam searchAssetsParam887,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader888,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[64].getName());
        _operationClient.getOptions().setAction("searchAssets");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                searchAssetsParam887,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "searchAssets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "searchAssets"));

        // add the soap_headers only if they are not null
        if (authHeader888 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader888 = toOM(authHeader888,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "searchAssets")));
            addHeader(omElementauthHeader888, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsearchAssets(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsearchAssets(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "searchAssets"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "searchAssets"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "searchAssets"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsearchAssets((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsearchAssets((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsearchAssets((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsearchAssets(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsearchAssets(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsearchAssets(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsearchAssets(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsearchAssets(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsearchAssets(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsearchAssets(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsearchAssets(f);
                            }
                        } else {
                            callback.receiveErrorsearchAssets(f);
                        }
                    } else {
                        callback.receiveErrorsearchAssets(f);
                    }
                } else {
                    callback.receiveErrorsearchAssets(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsearchAssets(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[64].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[64].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param executeJobParam890
     * @param authHeader891
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#executeJob
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.ExecuteJobReturn executeJob(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ExecuteJobParam executeJobParam890,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader891)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[65].getName());
            _operationClient.getOptions().setAction("executeJob");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    executeJobParam890,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "executeJob")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "executeJob"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader891 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader891 = toOM(authHeader891,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "executeJob")));
                addHeader(omElementauthHeader891, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.ExecuteJobReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ExecuteJobReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "executeJob"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "executeJob"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "executeJob"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param executeJobParam890
     * @param authHeader891
     * @see com.scene7.www.ipsapi.IpsApiService#startexecuteJob
     */
    public void startexecuteJob(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ExecuteJobParam executeJobParam890,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader891,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[65].getName());
        _operationClient.getOptions().setAction("executeJob");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                executeJobParam890,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "executeJob")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "executeJob"));

        // add the soap_headers only if they are not null
        if (authHeader891 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader891 = toOM(authHeader891,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "executeJob")));
            addHeader(omElementauthHeader891, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ExecuteJobReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultexecuteJob(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ExecuteJobReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorexecuteJob(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "executeJob"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "executeJob"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "executeJob"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorexecuteJob((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorexecuteJob((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorexecuteJob((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorexecuteJob(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorexecuteJob(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorexecuteJob(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorexecuteJob(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorexecuteJob(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorexecuteJob(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorexecuteJob(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorexecuteJob(f);
                            }
                        } else {
                            callback.receiveErrorexecuteJob(f);
                        }
                    } else {
                        callback.receiveErrorexecuteJob(f);
                    }
                } else {
                    callback.receiveErrorexecuteJob(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorexecuteJob(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[65].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[65].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param forceRepublishAssetsParam893
     * @param authHeader894
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#forceRepublishAssets
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.ForceRepublishAssetsReturn forceRepublishAssets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ForceRepublishAssetsParam forceRepublishAssetsParam893,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader894)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[66].getName());
            _operationClient.getOptions().setAction("forceRepublishAssets");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    forceRepublishAssetsParam893,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "forceRepublishAssets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "forceRepublishAssets"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader894 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader894 = toOM(authHeader894,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "forceRepublishAssets")));
                addHeader(omElementauthHeader894, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.ForceRepublishAssetsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ForceRepublishAssetsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "forceRepublishAssets"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "forceRepublishAssets"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "forceRepublishAssets"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param forceRepublishAssetsParam893
     * @param authHeader894
     * @see com.scene7.www.ipsapi.IpsApiService#startforceRepublishAssets
     */
    public void startforceRepublishAssets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ForceRepublishAssetsParam forceRepublishAssetsParam893,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader894,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[66].getName());
        _operationClient.getOptions().setAction("forceRepublishAssets");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                forceRepublishAssetsParam893,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "forceRepublishAssets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "forceRepublishAssets"));

        // add the soap_headers only if they are not null
        if (authHeader894 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader894 = toOM(authHeader894,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "forceRepublishAssets")));
            addHeader(omElementauthHeader894, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ForceRepublishAssetsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultforceRepublishAssets(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ForceRepublishAssetsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorforceRepublishAssets(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "forceRepublishAssets"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "forceRepublishAssets"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "forceRepublishAssets"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorforceRepublishAssets((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorforceRepublishAssets((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorforceRepublishAssets((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorforceRepublishAssets(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorforceRepublishAssets(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorforceRepublishAssets(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorforceRepublishAssets(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorforceRepublishAssets(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorforceRepublishAssets(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorforceRepublishAssets(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorforceRepublishAssets(f);
                            }
                        } else {
                            callback.receiveErrorforceRepublishAssets(f);
                        }
                    } else {
                        callback.receiveErrorforceRepublishAssets(f);
                    }
                } else {
                    callback.receiveErrorforceRepublishAssets(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorforceRepublishAssets(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[66].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[66].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getAssociatedAssetsParam896
     * @param authHeader897
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getAssociatedAssets
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssociatedAssetsReturn getAssociatedAssets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssociatedAssetsParam getAssociatedAssetsParam896,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader897)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[67].getName());
            _operationClient.getOptions().setAction("getAssociatedAssets");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getAssociatedAssetsParam896,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAssociatedAssets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAssociatedAssets"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader897 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader897 = toOM(authHeader897,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssociatedAssets")));
                addHeader(omElementauthHeader897, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssociatedAssetsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssociatedAssetsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssociatedAssets"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssociatedAssets"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssociatedAssets"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getAssociatedAssetsParam896
     * @param authHeader897
     * @see com.scene7.www.ipsapi.IpsApiService#startgetAssociatedAssets
     */
    public void startgetAssociatedAssets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssociatedAssetsParam getAssociatedAssetsParam896,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader897,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[67].getName());
        _operationClient.getOptions().setAction("getAssociatedAssets");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getAssociatedAssetsParam896,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAssociatedAssets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAssociatedAssets"));

        // add the soap_headers only if they are not null
        if (authHeader897 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader897 = toOM(authHeader897,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssociatedAssets")));
            addHeader(omElementauthHeader897, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssociatedAssetsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetAssociatedAssets(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssociatedAssetsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetAssociatedAssets(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssociatedAssets"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssociatedAssets"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssociatedAssets"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetAssociatedAssets((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetAssociatedAssets((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetAssociatedAssets((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetAssociatedAssets(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssociatedAssets(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssociatedAssets(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssociatedAssets(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssociatedAssets(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssociatedAssets(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssociatedAssets(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssociatedAssets(f);
                            }
                        } else {
                            callback.receiveErrorgetAssociatedAssets(f);
                        }
                    } else {
                        callback.receiveErrorgetAssociatedAssets(f);
                    }
                } else {
                    callback.receiveErrorgetAssociatedAssets(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetAssociatedAssets(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[67].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[67].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param restoreAssetsFromTrashParam899
     * @param authHeader900
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#restoreAssetsFromTrash
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.RestoreAssetsFromTrashReturn restoreAssetsFromTrash(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RestoreAssetsFromTrashParam restoreAssetsFromTrashParam899,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader900)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[68].getName());
            _operationClient.getOptions().setAction("restoreAssetsFromTrash");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    restoreAssetsFromTrashParam899,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "restoreAssetsFromTrash")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "restoreAssetsFromTrash"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader900 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader900 = toOM(authHeader900,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "restoreAssetsFromTrash")));
                addHeader(omElementauthHeader900, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.RestoreAssetsFromTrashReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RestoreAssetsFromTrashReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "restoreAssetsFromTrash"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "restoreAssetsFromTrash"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "restoreAssetsFromTrash"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param restoreAssetsFromTrashParam899
     * @param authHeader900
     * @see com.scene7.www.ipsapi.IpsApiService#startrestoreAssetsFromTrash
     */
    public void startrestoreAssetsFromTrash(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RestoreAssetsFromTrashParam restoreAssetsFromTrashParam899,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader900,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[68].getName());
        _operationClient.getOptions().setAction("restoreAssetsFromTrash");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                restoreAssetsFromTrashParam899,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "restoreAssetsFromTrash")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "restoreAssetsFromTrash"));

        // add the soap_headers only if they are not null
        if (authHeader900 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader900 = toOM(authHeader900,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "restoreAssetsFromTrash")));
            addHeader(omElementauthHeader900, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RestoreAssetsFromTrashReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultrestoreAssetsFromTrash(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RestoreAssetsFromTrashReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorrestoreAssetsFromTrash(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "restoreAssetsFromTrash"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "restoreAssetsFromTrash"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "restoreAssetsFromTrash"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorrestoreAssetsFromTrash((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorrestoreAssetsFromTrash((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorrestoreAssetsFromTrash((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorrestoreAssetsFromTrash(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrestoreAssetsFromTrash(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrestoreAssetsFromTrash(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrestoreAssetsFromTrash(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrestoreAssetsFromTrash(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrestoreAssetsFromTrash(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrestoreAssetsFromTrash(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrestoreAssetsFromTrash(f);
                            }
                        } else {
                            callback.receiveErrorrestoreAssetsFromTrash(f);
                        }
                    } else {
                        callback.receiveErrorrestoreAssetsFromTrash(f);
                    }
                } else {
                    callback.receiveErrorrestoreAssetsFromTrash(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorrestoreAssetsFromTrash(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[68].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[68].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setUserInfoParam902
     * @param authHeader903
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setUserInfo
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUserInfoReturn setUserInfo(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUserInfoParam setUserInfoParam902,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader903)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[69].getName());
            _operationClient.getOptions().setAction("setUserInfo");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setUserInfoParam902,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setUserInfo")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setUserInfo"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader903 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader903 = toOM(authHeader903,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setUserInfo")));
                addHeader(omElementauthHeader903, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUserInfoReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUserInfoReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setUserInfo"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setUserInfo"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setUserInfo"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setUserInfoParam902
     * @param authHeader903
     * @see com.scene7.www.ipsapi.IpsApiService#startsetUserInfo
     */
    public void startsetUserInfo(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUserInfoParam setUserInfoParam902,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader903,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[69].getName());
        _operationClient.getOptions().setAction("setUserInfo");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setUserInfoParam902,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setUserInfo")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setUserInfo"));

        // add the soap_headers only if they are not null
        if (authHeader903 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader903 = toOM(authHeader903,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setUserInfo")));
            addHeader(omElementauthHeader903, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUserInfoReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetUserInfo(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUserInfoReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetUserInfo(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setUserInfo"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setUserInfo"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setUserInfo"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetUserInfo((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetUserInfo((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetUserInfo((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetUserInfo(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetUserInfo(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetUserInfo(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetUserInfo(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetUserInfo(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetUserInfo(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetUserInfo(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetUserInfo(f);
                            }
                        } else {
                            callback.receiveErrorsetUserInfo(f);
                        }
                    } else {
                        callback.receiveErrorsetUserInfo(f);
                    }
                } else {
                    callback.receiveErrorsetUserInfo(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetUserInfo(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[69].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[69].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getAutoCropRectParam905
     * @param authHeader906
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getAutoCropRect
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAutoCropRectReturn getAutoCropRect(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAutoCropRectParam getAutoCropRectParam905,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader906)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[70].getName());
            _operationClient.getOptions().setAction("getAutoCropRect");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getAutoCropRectParam905,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAutoCropRect")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAutoCropRect"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader906 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader906 = toOM(authHeader906,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAutoCropRect")));
                addHeader(omElementauthHeader906, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAutoCropRectReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAutoCropRectReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAutoCropRect"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAutoCropRect"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAutoCropRect"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getAutoCropRectParam905
     * @param authHeader906
     * @see com.scene7.www.ipsapi.IpsApiService#startgetAutoCropRect
     */
    public void startgetAutoCropRect(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAutoCropRectParam getAutoCropRectParam905,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader906,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[70].getName());
        _operationClient.getOptions().setAction("getAutoCropRect");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getAutoCropRectParam905,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAutoCropRect")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAutoCropRect"));

        // add the soap_headers only if they are not null
        if (authHeader906 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader906 = toOM(authHeader906,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAutoCropRect")));
            addHeader(omElementauthHeader906, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAutoCropRectReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetAutoCropRect(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAutoCropRectReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetAutoCropRect(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAutoCropRect"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAutoCropRect"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAutoCropRect"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetAutoCropRect((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetAutoCropRect((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetAutoCropRect((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetAutoCropRect(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAutoCropRect(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAutoCropRect(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAutoCropRect(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAutoCropRect(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAutoCropRect(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAutoCropRect(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAutoCropRect(f);
                            }
                        } else {
                            callback.receiveErrorgetAutoCropRect(f);
                        }
                    } else {
                        callback.receiveErrorgetAutoCropRect(f);
                    }
                } else {
                    callback.receiveErrorgetAutoCropRect(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetAutoCropRect(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[70].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[70].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setImageMapsParam908
     * @param authHeader909
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setImageMaps
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageMapsReturn setImageMaps(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageMapsParam setImageMapsParam908,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader909)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[71].getName());
            _operationClient.getOptions().setAction("setImageMaps");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setImageMapsParam908,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setImageMaps")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setImageMaps"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader909 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader909 = toOM(authHeader909,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setImageMaps")));
                addHeader(omElementauthHeader909, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageMapsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageMapsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageMaps"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageMaps"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageMaps"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setImageMapsParam908
     * @param authHeader909
     * @see com.scene7.www.ipsapi.IpsApiService#startsetImageMaps
     */
    public void startsetImageMaps(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageMapsParam setImageMapsParam908,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader909,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[71].getName());
        _operationClient.getOptions().setAction("setImageMaps");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setImageMapsParam908,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setImageMaps")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setImageMaps"));

        // add the soap_headers only if they are not null
        if (authHeader909 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader909 = toOM(authHeader909,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setImageMaps")));
            addHeader(omElementauthHeader909, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageMapsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetImageMaps(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageMapsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetImageMaps(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageMaps"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageMaps"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageMaps"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetImageMaps((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetImageMaps((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetImageMaps((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetImageMaps(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageMaps(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageMaps(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageMaps(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageMaps(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageMaps(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageMaps(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageMaps(f);
                            }
                        } else {
                            callback.receiveErrorsetImageMaps(f);
                        }
                    } else {
                        callback.receiveErrorsetImageMaps(f);
                    }
                } else {
                    callback.receiveErrorsetImageMaps(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetImageMaps(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[71].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[71].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param updatePropertySetParam911
     * @param authHeader912
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#updatePropertySet
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetReturn updatePropertySet(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetParam updatePropertySetParam911,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader912)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[72].getName());
            _operationClient.getOptions().setAction("updatePropertySet");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    updatePropertySetParam911,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updatePropertySet")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updatePropertySet"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader912 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader912 = toOM(authHeader912,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updatePropertySet")));
                addHeader(omElementauthHeader912, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updatePropertySet"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updatePropertySet"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updatePropertySet"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param updatePropertySetParam911
     * @param authHeader912
     * @see com.scene7.www.ipsapi.IpsApiService#startupdatePropertySet
     */
    public void startupdatePropertySet(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetParam updatePropertySetParam911,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader912,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[72].getName());
        _operationClient.getOptions().setAction("updatePropertySet");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                updatePropertySetParam911,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updatePropertySet")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updatePropertySet"));

        // add the soap_headers only if they are not null
        if (authHeader912 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader912 = toOM(authHeader912,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updatePropertySet")));
            addHeader(omElementauthHeader912, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultupdatePropertySet(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorupdatePropertySet(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updatePropertySet"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updatePropertySet"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updatePropertySet"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorupdatePropertySet((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorupdatePropertySet((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorupdatePropertySet((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorupdatePropertySet(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdatePropertySet(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdatePropertySet(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdatePropertySet(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdatePropertySet(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdatePropertySet(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdatePropertySet(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdatePropertySet(f);
                            }
                        } else {
                            callback.receiveErrorupdatePropertySet(f);
                        }
                    } else {
                        callback.receiveErrorupdatePropertySet(f);
                    }
                } else {
                    callback.receiveErrorupdatePropertySet(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorupdatePropertySet(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[72].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[72].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param deleteVignettePublishFormatParam914
     * @param authHeader915
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#deleteVignettePublishFormat
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteVignettePublishFormatReturn deleteVignettePublishFormat(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteVignettePublishFormatParam deleteVignettePublishFormatParam914,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader915)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[73].getName());
            _operationClient.getOptions().setAction("deleteVignettePublishFormat");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    deleteVignettePublishFormatParam914,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteVignettePublishFormat")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteVignettePublishFormat"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader915 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader915 = toOM(authHeader915,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteVignettePublishFormat")));
                addHeader(omElementauthHeader915, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteVignettePublishFormatReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteVignettePublishFormatReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteVignettePublishFormat"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteVignettePublishFormat"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteVignettePublishFormat"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param deleteVignettePublishFormatParam914
     * @param authHeader915
     * @see com.scene7.www.ipsapi.IpsApiService#startdeleteVignettePublishFormat
     */
    public void startdeleteVignettePublishFormat(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteVignettePublishFormatParam deleteVignettePublishFormatParam914,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader915,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[73].getName());
        _operationClient.getOptions().setAction("deleteVignettePublishFormat");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                deleteVignettePublishFormatParam914,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteVignettePublishFormat")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteVignettePublishFormat"));

        // add the soap_headers only if they are not null
        if (authHeader915 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader915 = toOM(authHeader915,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteVignettePublishFormat")));
            addHeader(omElementauthHeader915, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteVignettePublishFormatReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultdeleteVignettePublishFormat(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteVignettePublishFormatReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrordeleteVignettePublishFormat(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteVignettePublishFormat"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteVignettePublishFormat"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteVignettePublishFormat"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrordeleteVignettePublishFormat(
                                            (com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrordeleteVignettePublishFormat((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrordeleteVignettePublishFormat(
                                            (com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrordeleteVignettePublishFormat(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteVignettePublishFormat(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteVignettePublishFormat(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteVignettePublishFormat(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteVignettePublishFormat(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteVignettePublishFormat(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteVignettePublishFormat(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteVignettePublishFormat(f);
                            }
                        } else {
                            callback.receiveErrordeleteVignettePublishFormat(f);
                        }
                    } else {
                        callback.receiveErrordeleteVignettePublishFormat(f);
                    }
                } else {
                    callback.receiveErrordeleteVignettePublishFormat(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrordeleteVignettePublishFormat(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[73].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[73].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param createDerivedAssetParam917
     * @param authHeader918
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#createDerivedAsset
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateDerivedAssetReturn createDerivedAsset(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateDerivedAssetParam createDerivedAssetParam917,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader918)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[74].getName());
            _operationClient.getOptions().setAction("createDerivedAsset");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    createDerivedAssetParam917,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createDerivedAsset")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createDerivedAsset"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader918 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader918 = toOM(authHeader918,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createDerivedAsset")));
                addHeader(omElementauthHeader918, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateDerivedAssetReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateDerivedAssetReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createDerivedAsset"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createDerivedAsset"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createDerivedAsset"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param createDerivedAssetParam917
     * @param authHeader918
     * @see com.scene7.www.ipsapi.IpsApiService#startcreateDerivedAsset
     */
    public void startcreateDerivedAsset(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateDerivedAssetParam createDerivedAssetParam917,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader918,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[74].getName());
        _operationClient.getOptions().setAction("createDerivedAsset");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                createDerivedAssetParam917,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createDerivedAsset")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createDerivedAsset"));

        // add the soap_headers only if they are not null
        if (authHeader918 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader918 = toOM(authHeader918,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createDerivedAsset")));
            addHeader(omElementauthHeader918, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateDerivedAssetReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultcreateDerivedAsset(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateDerivedAssetReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorcreateDerivedAsset(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createDerivedAsset"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createDerivedAsset"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createDerivedAsset"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorcreateDerivedAsset((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorcreateDerivedAsset((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorcreateDerivedAsset((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorcreateDerivedAsset(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateDerivedAsset(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateDerivedAsset(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateDerivedAsset(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateDerivedAsset(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateDerivedAsset(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateDerivedAsset(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateDerivedAsset(f);
                            }
                        } else {
                            callback.receiveErrorcreateDerivedAsset(f);
                        }
                    } else {
                        callback.receiveErrorcreateDerivedAsset(f);
                    }
                } else {
                    callback.receiveErrorcreateDerivedAsset(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorcreateDerivedAsset(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[74].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[74].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setCompanyMembershipParam920
     * @param authHeader921
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setCompanyMembership
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanyMembershipReturn setCompanyMembership(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanyMembershipParam setCompanyMembershipParam920,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader921)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[75].getName());
            _operationClient.getOptions().setAction("setCompanyMembership");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setCompanyMembershipParam920,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setCompanyMembership")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setCompanyMembership"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader921 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader921 = toOM(authHeader921,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setCompanyMembership")));
                addHeader(omElementauthHeader921, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanyMembershipReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanyMembershipReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setCompanyMembership"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setCompanyMembership"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setCompanyMembership"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setCompanyMembershipParam920
     * @param authHeader921
     * @see com.scene7.www.ipsapi.IpsApiService#startsetCompanyMembership
     */
    public void startsetCompanyMembership(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanyMembershipParam setCompanyMembershipParam920,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader921,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[75].getName());
        _operationClient.getOptions().setAction("setCompanyMembership");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setCompanyMembershipParam920,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setCompanyMembership")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setCompanyMembership"));

        // add the soap_headers only if they are not null
        if (authHeader921 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader921 = toOM(authHeader921,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setCompanyMembership")));
            addHeader(omElementauthHeader921, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanyMembershipReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetCompanyMembership(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanyMembershipReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetCompanyMembership(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setCompanyMembership"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setCompanyMembership"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setCompanyMembership"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetCompanyMembership((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetCompanyMembership((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetCompanyMembership((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetCompanyMembership(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetCompanyMembership(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetCompanyMembership(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetCompanyMembership(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetCompanyMembership(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetCompanyMembership(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetCompanyMembership(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetCompanyMembership(f);
                            }
                        } else {
                            callback.receiveErrorsetCompanyMembership(f);
                        }
                    } else {
                        callback.receiveErrorsetCompanyMembership(f);
                    }
                } else {
                    callback.receiveErrorsetCompanyMembership(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetCompanyMembership(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[75].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[75].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param uploadPostParam923
     * @param authHeader924
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#uploadPost
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.UploadPostReturn uploadPost(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UploadPostParam uploadPostParam923,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader924)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[76].getName());
            _operationClient.getOptions().setAction("uploadPost");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    uploadPostParam923,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "uploadPost")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "uploadPost"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader924 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader924 = toOM(authHeader924,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "uploadPost")));
                addHeader(omElementauthHeader924, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.UploadPostReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UploadPostReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "uploadPost"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "uploadPost"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "uploadPost"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param uploadPostParam923
     * @param authHeader924
     * @see com.scene7.www.ipsapi.IpsApiService#startuploadPost
     */
    public void startuploadPost(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UploadPostParam uploadPostParam923,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader924,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[76].getName());
        _operationClient.getOptions().setAction("uploadPost");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                uploadPostParam923,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "uploadPost")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "uploadPost"));

        // add the soap_headers only if they are not null
        if (authHeader924 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader924 = toOM(authHeader924,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "uploadPost")));
            addHeader(omElementauthHeader924, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UploadPostReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultuploadPost(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UploadPostReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErroruploadPost(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "uploadPost"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "uploadPost"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "uploadPost"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErroruploadPost((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErroruploadPost((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErroruploadPost((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErroruploadPost(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroruploadPost(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroruploadPost(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroruploadPost(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroruploadPost(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroruploadPost(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroruploadPost(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroruploadPost(f);
                            }
                        } else {
                            callback.receiveErroruploadPost(f);
                        }
                    } else {
                        callback.receiveErroruploadPost(f);
                    }
                } else {
                    callback.receiveErroruploadPost(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErroruploadPost(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[76].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[76].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param addProjectAssetsParam926
     * @param authHeader927
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#addProjectAssets
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddProjectAssetsReturn addProjectAssets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddProjectAssetsParam addProjectAssetsParam926,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader927)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[77].getName());
            _operationClient.getOptions().setAction("addProjectAssets");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    addProjectAssetsParam926,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "addProjectAssets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "addProjectAssets"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader927 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader927 = toOM(authHeader927,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addProjectAssets")));
                addHeader(omElementauthHeader927, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddProjectAssetsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddProjectAssetsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addProjectAssets"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addProjectAssets"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addProjectAssets"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param addProjectAssetsParam926
     * @param authHeader927
     * @see com.scene7.www.ipsapi.IpsApiService#startaddProjectAssets
     */
    public void startaddProjectAssets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddProjectAssetsParam addProjectAssetsParam926,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader927,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[77].getName());
        _operationClient.getOptions().setAction("addProjectAssets");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                addProjectAssetsParam926,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "addProjectAssets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "addProjectAssets"));

        // add the soap_headers only if they are not null
        if (authHeader927 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader927 = toOM(authHeader927,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addProjectAssets")));
            addHeader(omElementauthHeader927, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddProjectAssetsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultaddProjectAssets(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddProjectAssetsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErroraddProjectAssets(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addProjectAssets"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addProjectAssets"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addProjectAssets"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErroraddProjectAssets((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErroraddProjectAssets((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErroraddProjectAssets((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErroraddProjectAssets(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddProjectAssets(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddProjectAssets(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddProjectAssets(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddProjectAssets(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddProjectAssets(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddProjectAssets(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddProjectAssets(f);
                            }
                        } else {
                            callback.receiveErroraddProjectAssets(f);
                        }
                    } else {
                        callback.receiveErroraddProjectAssets(f);
                    }
                } else {
                    callback.receiveErroraddProjectAssets(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErroraddProjectAssets(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[77].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[77].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getJobLogsParam929
     * @param authHeader930
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getJobLogs
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogsReturn getJobLogs(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogsParam getJobLogsParam929,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader930)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[78].getName());
            _operationClient.getOptions().setAction("getJobLogs");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getJobLogsParam929,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getJobLogs")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getJobLogs"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader930 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader930 = toOM(authHeader930,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getJobLogs")));
                addHeader(omElementauthHeader930, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getJobLogs"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getJobLogs"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getJobLogs"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getJobLogsParam929
     * @param authHeader930
     * @see com.scene7.www.ipsapi.IpsApiService#startgetJobLogs
     */
    public void startgetJobLogs(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogsParam getJobLogsParam929,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader930,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[78].getName());
        _operationClient.getOptions().setAction("getJobLogs");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getJobLogsParam929,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getJobLogs")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getJobLogs"));

        // add the soap_headers only if they are not null
        if (authHeader930 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader930 = toOM(authHeader930,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getJobLogs")));
            addHeader(omElementauthHeader930, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetJobLogs(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetJobLogs(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getJobLogs"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getJobLogs"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getJobLogs"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetJobLogs((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetJobLogs((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetJobLogs((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetJobLogs(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetJobLogs(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetJobLogs(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetJobLogs(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetJobLogs(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetJobLogs(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetJobLogs(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetJobLogs(f);
                            }
                        } else {
                            callback.receiveErrorgetJobLogs(f);
                        }
                    } else {
                        callback.receiveErrorgetJobLogs(f);
                    }
                } else {
                    callback.receiveErrorgetJobLogs(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetJobLogs(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[78].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[78].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param resumeJobParam932
     * @param authHeader933
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#resumeJob
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.ResumeJobReturn resumeJob(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ResumeJobParam resumeJobParam932,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader933)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[79].getName());
            _operationClient.getOptions().setAction("resumeJob");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    resumeJobParam932,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "resumeJob")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "resumeJob"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader933 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader933 = toOM(authHeader933,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "resumeJob")));
                addHeader(omElementauthHeader933, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.ResumeJobReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ResumeJobReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "resumeJob"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "resumeJob"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "resumeJob"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param resumeJobParam932
     * @param authHeader933
     * @see com.scene7.www.ipsapi.IpsApiService#startresumeJob
     */
    public void startresumeJob(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ResumeJobParam resumeJobParam932,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader933,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[79].getName());
        _operationClient.getOptions().setAction("resumeJob");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                resumeJobParam932,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "resumeJob")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "resumeJob"));

        // add the soap_headers only if they are not null
        if (authHeader933 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader933 = toOM(authHeader933,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "resumeJob")));
            addHeader(omElementauthHeader933, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ResumeJobReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultresumeJob(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ResumeJobReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorresumeJob(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "resumeJob"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "resumeJob"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "resumeJob"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorresumeJob((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorresumeJob((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorresumeJob((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorresumeJob(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorresumeJob(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorresumeJob(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorresumeJob(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorresumeJob(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorresumeJob(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorresumeJob(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorresumeJob(f);
                            }
                        } else {
                            callback.receiveErrorresumeJob(f);
                        }
                    } else {
                        callback.receiveErrorresumeJob(f);
                    }
                } else {
                    callback.receiveErrorresumeJob(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorresumeJob(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[79].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[79].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param deleteFolderParam935
     * @param authHeader936
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#deleteFolder
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteFolderReturn deleteFolder(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteFolderParam deleteFolderParam935,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader936)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[80].getName());
            _operationClient.getOptions().setAction("deleteFolder");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    deleteFolderParam935,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteFolder")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteFolder"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader936 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader936 = toOM(authHeader936,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteFolder")));
                addHeader(omElementauthHeader936, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteFolderReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteFolderReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteFolder"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteFolder"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteFolder"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param deleteFolderParam935
     * @param authHeader936
     * @see com.scene7.www.ipsapi.IpsApiService#startdeleteFolder
     */
    public void startdeleteFolder(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteFolderParam deleteFolderParam935,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader936,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[80].getName());
        _operationClient.getOptions().setAction("deleteFolder");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                deleteFolderParam935,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteFolder")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteFolder"));

        // add the soap_headers only if they are not null
        if (authHeader936 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader936 = toOM(authHeader936,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteFolder")));
            addHeader(omElementauthHeader936, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteFolderReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultdeleteFolder(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteFolderReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrordeleteFolder(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteFolder"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteFolder"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteFolder"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrordeleteFolder((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrordeleteFolder((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrordeleteFolder((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrordeleteFolder(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteFolder(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteFolder(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteFolder(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteFolder(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteFolder(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteFolder(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteFolder(f);
                            }
                        } else {
                            callback.receiveErrordeleteFolder(f);
                        }
                    } else {
                        callback.receiveErrordeleteFolder(f);
                    }
                } else {
                    callback.receiveErrordeleteFolder(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrordeleteFolder(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[80].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[80].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param removeMetadataSchemaParam938
     * @param authHeader939
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#removeMetadataSchema
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMetadataSchemaReturn removeMetadataSchema(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMetadataSchemaParam removeMetadataSchemaParam938,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader939)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[81].getName());
            _operationClient.getOptions().setAction("removeMetadataSchema");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    removeMetadataSchemaParam938,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "removeMetadataSchema")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "removeMetadataSchema"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader939 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader939 = toOM(authHeader939,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeMetadataSchema")));
                addHeader(omElementauthHeader939, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMetadataSchemaReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMetadataSchemaReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeMetadataSchema"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeMetadataSchema"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeMetadataSchema"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param removeMetadataSchemaParam938
     * @param authHeader939
     * @see com.scene7.www.ipsapi.IpsApiService#startremoveMetadataSchema
     */
    public void startremoveMetadataSchema(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMetadataSchemaParam removeMetadataSchemaParam938,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader939,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[81].getName());
        _operationClient.getOptions().setAction("removeMetadataSchema");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                removeMetadataSchemaParam938,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "removeMetadataSchema")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "removeMetadataSchema"));

        // add the soap_headers only if they are not null
        if (authHeader939 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader939 = toOM(authHeader939,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeMetadataSchema")));
            addHeader(omElementauthHeader939, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMetadataSchemaReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultremoveMetadataSchema(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMetadataSchemaReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorremoveMetadataSchema(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeMetadataSchema"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeMetadataSchema"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeMetadataSchema"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorremoveMetadataSchema((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorremoveMetadataSchema((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorremoveMetadataSchema((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorremoveMetadataSchema(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveMetadataSchema(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveMetadataSchema(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveMetadataSchema(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveMetadataSchema(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveMetadataSchema(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveMetadataSchema(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveMetadataSchema(f);
                            }
                        } else {
                            callback.receiveErrorremoveMetadataSchema(f);
                        }
                    } else {
                        callback.receiveErrorremoveMetadataSchema(f);
                    }
                } else {
                    callback.receiveErrorremoveMetadataSchema(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorremoveMetadataSchema(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[81].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[81].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param saveImageFormatParam941
     * @param authHeader942
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#saveImageFormat
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageFormatReturn saveImageFormat(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageFormatParam saveImageFormatParam941,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader942)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[82].getName());
            _operationClient.getOptions().setAction("saveImageFormat");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    saveImageFormatParam941,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "saveImageFormat")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "saveImageFormat"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader942 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader942 = toOM(authHeader942,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "saveImageFormat")));
                addHeader(omElementauthHeader942, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageFormatReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageFormatReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveImageFormat"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveImageFormat"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveImageFormat"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param saveImageFormatParam941
     * @param authHeader942
     * @see com.scene7.www.ipsapi.IpsApiService#startsaveImageFormat
     */
    public void startsaveImageFormat(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageFormatParam saveImageFormatParam941,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader942,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[82].getName());
        _operationClient.getOptions().setAction("saveImageFormat");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                saveImageFormatParam941,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "saveImageFormat")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "saveImageFormat"));

        // add the soap_headers only if they are not null
        if (authHeader942 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader942 = toOM(authHeader942,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "saveImageFormat")));
            addHeader(omElementauthHeader942, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageFormatReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsaveImageFormat(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageFormatReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsaveImageFormat(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveImageFormat"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveImageFormat"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveImageFormat"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsaveImageFormat((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsaveImageFormat((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsaveImageFormat((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsaveImageFormat(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveImageFormat(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveImageFormat(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveImageFormat(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveImageFormat(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveImageFormat(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveImageFormat(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveImageFormat(f);
                            }
                        } else {
                            callback.receiveErrorsaveImageFormat(f);
                        }
                    } else {
                        callback.receiveErrorsaveImageFormat(f);
                    }
                } else {
                    callback.receiveErrorsaveImageFormat(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsaveImageFormat(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[82].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[82].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getFolderTreeParam944
     * @param authHeader945
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getFolderTree
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFolderTreeReturn getFolderTree(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFolderTreeParam getFolderTreeParam944,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader945)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[83].getName());
            _operationClient.getOptions().setAction("getFolderTree");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getFolderTreeParam944,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getFolderTree")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getFolderTree"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader945 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader945 = toOM(authHeader945,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getFolderTree")));
                addHeader(omElementauthHeader945, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFolderTreeReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFolderTreeReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getFolderTree"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getFolderTree"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getFolderTree"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getFolderTreeParam944
     * @param authHeader945
     * @see com.scene7.www.ipsapi.IpsApiService#startgetFolderTree
     */
    public void startgetFolderTree(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFolderTreeParam getFolderTreeParam944,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader945,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[83].getName());
        _operationClient.getOptions().setAction("getFolderTree");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getFolderTreeParam944,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getFolderTree")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getFolderTree"));

        // add the soap_headers only if they are not null
        if (authHeader945 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader945 = toOM(authHeader945,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getFolderTree")));
            addHeader(omElementauthHeader945, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFolderTreeReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetFolderTree(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFolderTreeReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetFolderTree(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getFolderTree"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getFolderTree"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getFolderTree"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetFolderTree((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetFolderTree((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetFolderTree((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetFolderTree(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetFolderTree(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetFolderTree(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetFolderTree(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetFolderTree(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetFolderTree(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetFolderTree(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetFolderTree(f);
                            }
                        } else {
                            callback.receiveErrorgetFolderTree(f);
                        }
                    } else {
                        callback.receiveErrorgetFolderTree(f);
                    }
                } else {
                    callback.receiveErrorgetFolderTree(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetFolderTree(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[83].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[83].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setZoomTargetsParam947
     * @param authHeader948
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setZoomTargets
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetZoomTargetsReturn setZoomTargets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetZoomTargetsParam setZoomTargetsParam947,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader948)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[84].getName());
            _operationClient.getOptions().setAction("setZoomTargets");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setZoomTargetsParam947,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setZoomTargets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setZoomTargets"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader948 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader948 = toOM(authHeader948,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setZoomTargets")));
                addHeader(omElementauthHeader948, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetZoomTargetsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetZoomTargetsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setZoomTargets"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setZoomTargets"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setZoomTargets"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setZoomTargetsParam947
     * @param authHeader948
     * @see com.scene7.www.ipsapi.IpsApiService#startsetZoomTargets
     */
    public void startsetZoomTargets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetZoomTargetsParam setZoomTargetsParam947,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader948,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[84].getName());
        _operationClient.getOptions().setAction("setZoomTargets");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setZoomTargetsParam947,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setZoomTargets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setZoomTargets"));

        // add the soap_headers only if they are not null
        if (authHeader948 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader948 = toOM(authHeader948,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setZoomTargets")));
            addHeader(omElementauthHeader948, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetZoomTargetsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetZoomTargets(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetZoomTargetsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetZoomTargets(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setZoomTargets"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setZoomTargets"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setZoomTargets"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetZoomTargets((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetZoomTargets((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetZoomTargets((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetZoomTargets(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetZoomTargets(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetZoomTargets(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetZoomTargets(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetZoomTargets(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetZoomTargets(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetZoomTargets(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetZoomTargets(f);
                            }
                        } else {
                            callback.receiveErrorsetZoomTargets(f);
                        }
                    } else {
                        callback.receiveErrorsetZoomTargets(f);
                    }
                } else {
                    callback.receiveErrorsetZoomTargets(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetZoomTargets(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[84].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[84].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getAssetMetadataFieldsParam950
     * @param authHeader951
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getAssetMetadataFields
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetMetadataFieldsReturn getAssetMetadataFields(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetMetadataFieldsParam getAssetMetadataFieldsParam950,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader951)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[85].getName());
            _operationClient.getOptions().setAction("getAssetMetadataFields");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getAssetMetadataFieldsParam950,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAssetMetadataFields")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAssetMetadataFields"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader951 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader951 = toOM(authHeader951,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssetMetadataFields")));
                addHeader(omElementauthHeader951, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetMetadataFieldsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetMetadataFieldsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetMetadataFields"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetMetadataFields"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetMetadataFields"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getAssetMetadataFieldsParam950
     * @param authHeader951
     * @see com.scene7.www.ipsapi.IpsApiService#startgetAssetMetadataFields
     */
    public void startgetAssetMetadataFields(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetMetadataFieldsParam getAssetMetadataFieldsParam950,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader951,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[85].getName());
        _operationClient.getOptions().setAction("getAssetMetadataFields");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getAssetMetadataFieldsParam950,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAssetMetadataFields")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAssetMetadataFields"));

        // add the soap_headers only if they are not null
        if (authHeader951 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader951 = toOM(authHeader951,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssetMetadataFields")));
            addHeader(omElementauthHeader951, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetMetadataFieldsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetAssetMetadataFields(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetMetadataFieldsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetAssetMetadataFields(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetMetadataFields"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetMetadataFields"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetMetadataFields"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetAssetMetadataFields((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetAssetMetadataFields((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetAssetMetadataFields((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetAssetMetadataFields(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetMetadataFields(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetMetadataFields(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetMetadataFields(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetMetadataFields(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetMetadataFields(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetMetadataFields(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetMetadataFields(f);
                            }
                        } else {
                            callback.receiveErrorgetAssetMetadataFields(f);
                        }
                    } else {
                        callback.receiveErrorgetAssetMetadataFields(f);
                    }
                } else {
                    callback.receiveErrorgetAssetMetadataFields(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetAssetMetadataFields(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[85].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[85].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setTagFieldValuesParam953
     * @param authHeader954
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setTagFieldValues
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetTagFieldValuesReturn setTagFieldValues(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetTagFieldValuesParam setTagFieldValuesParam953,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader954)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[86].getName());
            _operationClient.getOptions().setAction("setTagFieldValues");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setTagFieldValuesParam953,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setTagFieldValues")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setTagFieldValues"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader954 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader954 = toOM(authHeader954,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setTagFieldValues")));
                addHeader(omElementauthHeader954, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetTagFieldValuesReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetTagFieldValuesReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setTagFieldValues"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setTagFieldValues"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setTagFieldValues"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setTagFieldValuesParam953
     * @param authHeader954
     * @see com.scene7.www.ipsapi.IpsApiService#startsetTagFieldValues
     */
    public void startsetTagFieldValues(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetTagFieldValuesParam setTagFieldValuesParam953,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader954,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[86].getName());
        _operationClient.getOptions().setAction("setTagFieldValues");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setTagFieldValuesParam953,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setTagFieldValues")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setTagFieldValues"));

        // add the soap_headers only if they are not null
        if (authHeader954 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader954 = toOM(authHeader954,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setTagFieldValues")));
            addHeader(omElementauthHeader954, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetTagFieldValuesReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetTagFieldValues(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetTagFieldValuesReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetTagFieldValues(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setTagFieldValues"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setTagFieldValues"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setTagFieldValues"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetTagFieldValues((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetTagFieldValues((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetTagFieldValues((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetTagFieldValues(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetTagFieldValues(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetTagFieldValues(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetTagFieldValues(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetTagFieldValues(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetTagFieldValues(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetTagFieldValues(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetTagFieldValues(f);
                            }
                        } else {
                            callback.receiveErrorsetTagFieldValues(f);
                        }
                    } else {
                        callback.receiveErrorsetTagFieldValues(f);
                    }
                } else {
                    callback.receiveErrorsetTagFieldValues(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetTagFieldValues(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[86].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[86].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param moveFolderParam956
     * @param authHeader957
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#moveFolder
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveFolderReturn moveFolder(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveFolderParam moveFolderParam956,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader957)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[87].getName());
            _operationClient.getOptions().setAction("moveFolder");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    moveFolderParam956,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "moveFolder")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "moveFolder"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader957 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader957 = toOM(authHeader957,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "moveFolder")));
                addHeader(omElementauthHeader957, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveFolderReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveFolderReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "moveFolder"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "moveFolder"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "moveFolder"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param moveFolderParam956
     * @param authHeader957
     * @see com.scene7.www.ipsapi.IpsApiService#startmoveFolder
     */
    public void startmoveFolder(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveFolderParam moveFolderParam956,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader957,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[87].getName());
        _operationClient.getOptions().setAction("moveFolder");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                moveFolderParam956,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "moveFolder")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "moveFolder"));

        // add the soap_headers only if they are not null
        if (authHeader957 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader957 = toOM(authHeader957,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "moveFolder")));
            addHeader(omElementauthHeader957, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveFolderReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultmoveFolder(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveFolderReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrormoveFolder(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "moveFolder"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "moveFolder"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "moveFolder"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrormoveFolder((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrormoveFolder((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrormoveFolder((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrormoveFolder(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveFolder(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveFolder(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveFolder(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveFolder(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveFolder(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveFolder(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveFolder(f);
                            }
                        } else {
                            callback.receiveErrormoveFolder(f);
                        }
                    } else {
                        callback.receiveErrormoveFolder(f);
                    }
                } else {
                    callback.receiveErrormoveFolder(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrormoveFolder(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[87].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[87].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getViewerConfigSettingsParam959
     * @param authHeader960
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getViewerConfigSettings
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetViewerConfigSettingsReturn getViewerConfigSettings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetViewerConfigSettingsParam getViewerConfigSettingsParam959,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader960)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[88].getName());
            _operationClient.getOptions().setAction("getViewerConfigSettings");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getViewerConfigSettingsParam959,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getViewerConfigSettings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getViewerConfigSettings"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader960 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader960 = toOM(authHeader960,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getViewerConfigSettings")));
                addHeader(omElementauthHeader960, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetViewerConfigSettingsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetViewerConfigSettingsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getViewerConfigSettings"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getViewerConfigSettings"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getViewerConfigSettings"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getViewerConfigSettingsParam959
     * @param authHeader960
     * @see com.scene7.www.ipsapi.IpsApiService#startgetViewerConfigSettings
     */
    public void startgetViewerConfigSettings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetViewerConfigSettingsParam getViewerConfigSettingsParam959,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader960,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[88].getName());
        _operationClient.getOptions().setAction("getViewerConfigSettings");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getViewerConfigSettingsParam959,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getViewerConfigSettings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getViewerConfigSettings"));

        // add the soap_headers only if they are not null
        if (authHeader960 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader960 = toOM(authHeader960,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getViewerConfigSettings")));
            addHeader(omElementauthHeader960, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetViewerConfigSettingsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetViewerConfigSettings(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetViewerConfigSettingsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetViewerConfigSettings(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getViewerConfigSettings"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getViewerConfigSettings"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getViewerConfigSettings"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetViewerConfigSettings((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetViewerConfigSettings((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetViewerConfigSettings((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetViewerConfigSettings(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetViewerConfigSettings(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetViewerConfigSettings(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetViewerConfigSettings(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetViewerConfigSettings(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetViewerConfigSettings(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetViewerConfigSettings(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetViewerConfigSettings(f);
                            }
                        } else {
                            callback.receiveErrorgetViewerConfigSettings(f);
                        }
                    } else {
                        callback.receiveErrorgetViewerConfigSettings(f);
                    }
                } else {
                    callback.receiveErrorgetViewerConfigSettings(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetViewerConfigSettings(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[88].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[88].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getImageFormatsParam962
     * @param authHeader963
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getImageFormats
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageFormatsReturn getImageFormats(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageFormatsParam getImageFormatsParam962,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader963)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[89].getName());
            _operationClient.getOptions().setAction("getImageFormats");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getImageFormatsParam962,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getImageFormats")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getImageFormats"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader963 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader963 = toOM(authHeader963,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getImageFormats")));
                addHeader(omElementauthHeader963, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageFormatsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageFormatsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageFormats"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageFormats"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageFormats"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getImageFormatsParam962
     * @param authHeader963
     * @see com.scene7.www.ipsapi.IpsApiService#startgetImageFormats
     */
    public void startgetImageFormats(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageFormatsParam getImageFormatsParam962,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader963,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[89].getName());
        _operationClient.getOptions().setAction("getImageFormats");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getImageFormatsParam962,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getImageFormats")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getImageFormats"));

        // add the soap_headers only if they are not null
        if (authHeader963 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader963 = toOM(authHeader963,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getImageFormats")));
            addHeader(omElementauthHeader963, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageFormatsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetImageFormats(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageFormatsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetImageFormats(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageFormats"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageFormats"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getImageFormats"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetImageFormats((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetImageFormats((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetImageFormats((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetImageFormats(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageFormats(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageFormats(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageFormats(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageFormats(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageFormats(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageFormats(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetImageFormats(f);
                            }
                        } else {
                            callback.receiveErrorgetImageFormats(f);
                        }
                    } else {
                        callback.receiveErrorgetImageFormats(f);
                    }
                } else {
                    callback.receiveErrorgetImageFormats(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetImageFormats(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[89].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[89].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setImageSetMembersParam965
     * @param authHeader966
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setImageSetMembers
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageSetMembersReturn setImageSetMembers(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageSetMembersParam setImageSetMembersParam965,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader966)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[90].getName());
            _operationClient.getOptions().setAction("setImageSetMembers");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setImageSetMembersParam965,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setImageSetMembers")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setImageSetMembers"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader966 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader966 = toOM(authHeader966,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setImageSetMembers")));
                addHeader(omElementauthHeader966, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageSetMembersReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageSetMembersReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageSetMembers"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageSetMembers"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageSetMembers"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setImageSetMembersParam965
     * @param authHeader966
     * @see com.scene7.www.ipsapi.IpsApiService#startsetImageSetMembers
     */
    public void startsetImageSetMembers(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageSetMembersParam setImageSetMembersParam965,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader966,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[90].getName());
        _operationClient.getOptions().setAction("setImageSetMembers");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setImageSetMembersParam965,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setImageSetMembers")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setImageSetMembers"));

        // add the soap_headers only if they are not null
        if (authHeader966 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader966 = toOM(authHeader966,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setImageSetMembers")));
            addHeader(omElementauthHeader966, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageSetMembersReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetImageSetMembers(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageSetMembersReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetImageSetMembers(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageSetMembers"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageSetMembers"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageSetMembers"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetImageSetMembers((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetImageSetMembers((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetImageSetMembers((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetImageSetMembers(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageSetMembers(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageSetMembers(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageSetMembers(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageSetMembers(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageSetMembers(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageSetMembers(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageSetMembers(f);
                            }
                        } else {
                            callback.receiveErrorsetImageSetMembers(f);
                        }
                    } else {
                        callback.receiveErrorsetImageSetMembers(f);
                    }
                } else {
                    callback.receiveErrorsetImageSetMembers(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetImageSetMembers(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[90].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[90].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param saveZoomTargetParam968
     * @param authHeader969
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#saveZoomTarget
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveZoomTargetReturn saveZoomTarget(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveZoomTargetParam saveZoomTargetParam968,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader969)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[91].getName());
            _operationClient.getOptions().setAction("saveZoomTarget");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    saveZoomTargetParam968,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "saveZoomTarget")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "saveZoomTarget"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader969 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader969 = toOM(authHeader969,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "saveZoomTarget")));
                addHeader(omElementauthHeader969, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveZoomTargetReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveZoomTargetReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveZoomTarget"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveZoomTarget"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveZoomTarget"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param saveZoomTargetParam968
     * @param authHeader969
     * @see com.scene7.www.ipsapi.IpsApiService#startsaveZoomTarget
     */
    public void startsaveZoomTarget(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveZoomTargetParam saveZoomTargetParam968,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader969,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[91].getName());
        _operationClient.getOptions().setAction("saveZoomTarget");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                saveZoomTargetParam968,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "saveZoomTarget")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "saveZoomTarget"));

        // add the soap_headers only if they are not null
        if (authHeader969 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader969 = toOM(authHeader969,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "saveZoomTarget")));
            addHeader(omElementauthHeader969, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveZoomTargetReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsaveZoomTarget(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveZoomTargetReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsaveZoomTarget(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveZoomTarget"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveZoomTarget"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveZoomTarget"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsaveZoomTarget((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsaveZoomTarget((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsaveZoomTarget((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsaveZoomTarget(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveZoomTarget(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveZoomTarget(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveZoomTarget(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveZoomTarget(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveZoomTarget(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveZoomTarget(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveZoomTarget(f);
                            }
                        } else {
                            callback.receiveErrorsaveZoomTarget(f);
                        }
                    } else {
                        callback.receiveErrorsaveZoomTarget(f);
                    }
                } else {
                    callback.receiveErrorsaveZoomTarget(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsaveZoomTarget(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[91].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[91].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param createAssetSetParam971
     * @param authHeader972
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#createAssetSet
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateAssetSetReturn createAssetSet(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateAssetSetParam createAssetSetParam971,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader972)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[92].getName());
            _operationClient.getOptions().setAction("createAssetSet");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    createAssetSetParam971,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createAssetSet")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createAssetSet"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader972 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader972 = toOM(authHeader972,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createAssetSet")));
                addHeader(omElementauthHeader972, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateAssetSetReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateAssetSetReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createAssetSet"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createAssetSet"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createAssetSet"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param createAssetSetParam971
     * @param authHeader972
     * @see com.scene7.www.ipsapi.IpsApiService#startcreateAssetSet
     */
    public void startcreateAssetSet(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateAssetSetParam createAssetSetParam971,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader972,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[92].getName());
        _operationClient.getOptions().setAction("createAssetSet");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                createAssetSetParam971,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createAssetSet")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createAssetSet"));

        // add the soap_headers only if they are not null
        if (authHeader972 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader972 = toOM(authHeader972,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createAssetSet")));
            addHeader(omElementauthHeader972, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateAssetSetReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultcreateAssetSet(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateAssetSetReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorcreateAssetSet(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createAssetSet"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createAssetSet"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createAssetSet"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorcreateAssetSet((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorcreateAssetSet((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorcreateAssetSet((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorcreateAssetSet(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateAssetSet(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateAssetSet(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateAssetSet(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateAssetSet(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateAssetSet(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateAssetSet(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateAssetSet(f);
                            }
                        } else {
                            callback.receiveErrorcreateAssetSet(f);
                        }
                    } else {
                        callback.receiveErrorcreateAssetSet(f);
                    }
                } else {
                    callback.receiveErrorcreateAssetSet(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorcreateAssetSet(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[92].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[92].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param searchAssetsByMetadataParam974
     * @param authHeader975
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#searchAssetsByMetadata
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsByMetadataReturn searchAssetsByMetadata(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsByMetadataParam searchAssetsByMetadataParam974,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader975)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[93].getName());
            _operationClient.getOptions().setAction("searchAssetsByMetadata");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    searchAssetsByMetadataParam974,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "searchAssetsByMetadata")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "searchAssetsByMetadata"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader975 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader975 = toOM(authHeader975,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "searchAssetsByMetadata")));
                addHeader(omElementauthHeader975, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsByMetadataReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsByMetadataReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "searchAssetsByMetadata"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "searchAssetsByMetadata"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "searchAssetsByMetadata"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param searchAssetsByMetadataParam974
     * @param authHeader975
     * @see com.scene7.www.ipsapi.IpsApiService#startsearchAssetsByMetadata
     */
    public void startsearchAssetsByMetadata(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsByMetadataParam searchAssetsByMetadataParam974,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader975,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[93].getName());
        _operationClient.getOptions().setAction("searchAssetsByMetadata");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                searchAssetsByMetadataParam974,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "searchAssetsByMetadata")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "searchAssetsByMetadata"));

        // add the soap_headers only if they are not null
        if (authHeader975 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader975 = toOM(authHeader975,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "searchAssetsByMetadata")));
            addHeader(omElementauthHeader975, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsByMetadataReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsearchAssetsByMetadata(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsByMetadataReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsearchAssetsByMetadata(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "searchAssetsByMetadata"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "searchAssetsByMetadata"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "searchAssetsByMetadata"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsearchAssetsByMetadata((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsearchAssetsByMetadata((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsearchAssetsByMetadata((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsearchAssetsByMetadata(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsearchAssetsByMetadata(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsearchAssetsByMetadata(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsearchAssetsByMetadata(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsearchAssetsByMetadata(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsearchAssetsByMetadata(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsearchAssetsByMetadata(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsearchAssetsByMetadata(f);
                            }
                        } else {
                            callback.receiveErrorsearchAssetsByMetadata(f);
                        }
                    } else {
                        callback.receiveErrorsearchAssetsByMetadata(f);
                    }
                } else {
                    callback.receiveErrorsearchAssetsByMetadata(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsearchAssetsByMetadata(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[93].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[93].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param cdnCacheInvalidationParam977
     * @param authHeader978
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#cdnCacheInvalidation
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.CdnCacheInvalidationReturn cdnCacheInvalidation(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CdnCacheInvalidationParam cdnCacheInvalidationParam977,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader978)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[94].getName());
            _operationClient.getOptions().setAction("cdnCacheInvalidation");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    cdnCacheInvalidationParam977,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "cdnCacheInvalidation")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "cdnCacheInvalidation"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader978 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader978 = toOM(authHeader978,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "cdnCacheInvalidation")));
                addHeader(omElementauthHeader978, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.CdnCacheInvalidationReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CdnCacheInvalidationReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "cdnCacheInvalidation"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "cdnCacheInvalidation"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "cdnCacheInvalidation"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param cdnCacheInvalidationParam977
     * @param authHeader978
     * @see com.scene7.www.ipsapi.IpsApiService#startcdnCacheInvalidation
     */
    public void startcdnCacheInvalidation(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CdnCacheInvalidationParam cdnCacheInvalidationParam977,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader978,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[94].getName());
        _operationClient.getOptions().setAction("cdnCacheInvalidation");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                cdnCacheInvalidationParam977,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "cdnCacheInvalidation")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "cdnCacheInvalidation"));

        // add the soap_headers only if they are not null
        if (authHeader978 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader978 = toOM(authHeader978,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "cdnCacheInvalidation")));
            addHeader(omElementauthHeader978, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CdnCacheInvalidationReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultcdnCacheInvalidation(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CdnCacheInvalidationReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorcdnCacheInvalidation(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "cdnCacheInvalidation"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "cdnCacheInvalidation"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "cdnCacheInvalidation"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorcdnCacheInvalidation((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorcdnCacheInvalidation((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorcdnCacheInvalidation((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorcdnCacheInvalidation(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcdnCacheInvalidation(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcdnCacheInvalidation(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcdnCacheInvalidation(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcdnCacheInvalidation(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcdnCacheInvalidation(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcdnCacheInvalidation(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcdnCacheInvalidation(f);
                            }
                        } else {
                            callback.receiveErrorcdnCacheInvalidation(f);
                        }
                    } else {
                        callback.receiveErrorcdnCacheInvalidation(f);
                    }
                } else {
                    callback.receiveErrorcdnCacheInvalidation(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorcdnCacheInvalidation(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[94].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[94].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getPhotoshopPathParam980
     * @param authHeader981
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getPhotoshopPath
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathReturn getPhotoshopPath(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathParam getPhotoshopPathParam980,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader981)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[95].getName());
            _operationClient.getOptions().setAction("getPhotoshopPath");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getPhotoshopPathParam980,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getPhotoshopPath")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getPhotoshopPath"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader981 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader981 = toOM(authHeader981,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getPhotoshopPath")));
                addHeader(omElementauthHeader981, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPhotoshopPath"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPhotoshopPath"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPhotoshopPath"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getPhotoshopPathParam980
     * @param authHeader981
     * @see com.scene7.www.ipsapi.IpsApiService#startgetPhotoshopPath
     */
    public void startgetPhotoshopPath(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathParam getPhotoshopPathParam980,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader981,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[95].getName());
        _operationClient.getOptions().setAction("getPhotoshopPath");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getPhotoshopPathParam980,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getPhotoshopPath")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getPhotoshopPath"));

        // add the soap_headers only if they are not null
        if (authHeader981 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader981 = toOM(authHeader981,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getPhotoshopPath")));
            addHeader(omElementauthHeader981, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetPhotoshopPath(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetPhotoshopPath(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPhotoshopPath"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPhotoshopPath"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPhotoshopPath"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetPhotoshopPath((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetPhotoshopPath((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetPhotoshopPath((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetPhotoshopPath(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPhotoshopPath(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPhotoshopPath(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPhotoshopPath(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPhotoshopPath(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPhotoshopPath(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPhotoshopPath(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPhotoshopPath(f);
                            }
                        } else {
                            callback.receiveErrorgetPhotoshopPath(f);
                        }
                    } else {
                        callback.receiveErrorgetPhotoshopPath(f);
                    }
                } else {
                    callback.receiveErrorgetPhotoshopPath(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetPhotoshopPath(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[95].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[95].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param batchGetAssetPublishContextsParam983
     * @param authHeader984
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#batchGetAssetPublishContexts
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchGetAssetPublishContextsReturn batchGetAssetPublishContexts(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchGetAssetPublishContextsParam batchGetAssetPublishContextsParam983,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader984)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[96].getName());
            _operationClient.getOptions().setAction("batchGetAssetPublishContexts");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    batchGetAssetPublishContextsParam983,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "batchGetAssetPublishContexts")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "batchGetAssetPublishContexts"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader984 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader984 = toOM(authHeader984,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "batchGetAssetPublishContexts")));
                addHeader(omElementauthHeader984, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchGetAssetPublishContextsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchGetAssetPublishContextsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchGetAssetPublishContexts"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchGetAssetPublishContexts"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchGetAssetPublishContexts"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param batchGetAssetPublishContextsParam983
     * @param authHeader984
     * @see com.scene7.www.ipsapi.IpsApiService#startbatchGetAssetPublishContexts
     */
    public void startbatchGetAssetPublishContexts(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchGetAssetPublishContextsParam batchGetAssetPublishContextsParam983,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader984,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[96].getName());
        _operationClient.getOptions().setAction("batchGetAssetPublishContexts");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                batchGetAssetPublishContextsParam983,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "batchGetAssetPublishContexts")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "batchGetAssetPublishContexts"));

        // add the soap_headers only if they are not null
        if (authHeader984 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader984 = toOM(authHeader984,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "batchGetAssetPublishContexts")));
            addHeader(omElementauthHeader984, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchGetAssetPublishContextsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultbatchGetAssetPublishContexts(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchGetAssetPublishContextsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorbatchGetAssetPublishContexts(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(
                                new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchGetAssetPublishContexts"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchGetAssetPublishContexts"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchGetAssetPublishContexts"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorbatchGetAssetPublishContexts(
                                            (com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorbatchGetAssetPublishContexts((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorbatchGetAssetPublishContexts(
                                            (com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorbatchGetAssetPublishContexts(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchGetAssetPublishContexts(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchGetAssetPublishContexts(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchGetAssetPublishContexts(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchGetAssetPublishContexts(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchGetAssetPublishContexts(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchGetAssetPublishContexts(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchGetAssetPublishContexts(f);
                            }
                        } else {
                            callback.receiveErrorbatchGetAssetPublishContexts(f);
                        }
                    } else {
                        callback.receiveErrorbatchGetAssetPublishContexts(f);
                    }
                } else {
                    callback.receiveErrorbatchGetAssetPublishContexts(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorbatchGetAssetPublishContexts(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[96].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[96].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param checkAssetNamesParam986
     * @param authHeader987
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#checkAssetNames
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckAssetNamesReturn checkAssetNames(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckAssetNamesParam checkAssetNamesParam986,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader987)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[97].getName());
            _operationClient.getOptions().setAction("checkAssetNames");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    checkAssetNamesParam986,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "checkAssetNames")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "checkAssetNames"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader987 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader987 = toOM(authHeader987,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "checkAssetNames")));
                addHeader(omElementauthHeader987, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckAssetNamesReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckAssetNamesReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "checkAssetNames"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "checkAssetNames"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "checkAssetNames"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param checkAssetNamesParam986
     * @param authHeader987
     * @see com.scene7.www.ipsapi.IpsApiService#startcheckAssetNames
     */
    public void startcheckAssetNames(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckAssetNamesParam checkAssetNamesParam986,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader987,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[97].getName());
        _operationClient.getOptions().setAction("checkAssetNames");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                checkAssetNamesParam986,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "checkAssetNames")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "checkAssetNames"));

        // add the soap_headers only if they are not null
        if (authHeader987 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader987 = toOM(authHeader987,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "checkAssetNames")));
            addHeader(omElementauthHeader987, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckAssetNamesReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultcheckAssetNames(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckAssetNamesReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorcheckAssetNames(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "checkAssetNames"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "checkAssetNames"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "checkAssetNames"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorcheckAssetNames((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorcheckAssetNames((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorcheckAssetNames((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorcheckAssetNames(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcheckAssetNames(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcheckAssetNames(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcheckAssetNames(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcheckAssetNames(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcheckAssetNames(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcheckAssetNames(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcheckAssetNames(f);
                            }
                        } else {
                            callback.receiveErrorcheckAssetNames(f);
                        }
                    } else {
                        callback.receiveErrorcheckAssetNames(f);
                    }
                } else {
                    callback.receiveErrorcheckAssetNames(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorcheckAssetNames(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[97].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[97].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setUrlModifierParam989
     * @param authHeader990
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setUrlModifier
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUrlModifierReturn setUrlModifier(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUrlModifierParam setUrlModifierParam989,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader990)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[98].getName());
            _operationClient.getOptions().setAction("setUrlModifier");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setUrlModifierParam989,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setUrlModifier")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setUrlModifier"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader990 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader990 = toOM(authHeader990,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setUrlModifier")));
                addHeader(omElementauthHeader990, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUrlModifierReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUrlModifierReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setUrlModifier"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setUrlModifier"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setUrlModifier"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setUrlModifierParam989
     * @param authHeader990
     * @see com.scene7.www.ipsapi.IpsApiService#startsetUrlModifier
     */
    public void startsetUrlModifier(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUrlModifierParam setUrlModifierParam989,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader990,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[98].getName());
        _operationClient.getOptions().setAction("setUrlModifier");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setUrlModifierParam989,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setUrlModifier")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setUrlModifier"));

        // add the soap_headers only if they are not null
        if (authHeader990 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader990 = toOM(authHeader990,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setUrlModifier")));
            addHeader(omElementauthHeader990, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUrlModifierReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetUrlModifier(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUrlModifierReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetUrlModifier(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setUrlModifier"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setUrlModifier"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setUrlModifier"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetUrlModifier((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetUrlModifier((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetUrlModifier((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetUrlModifier(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetUrlModifier(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetUrlModifier(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetUrlModifier(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetUrlModifier(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetUrlModifier(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetUrlModifier(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetUrlModifier(f);
                            }
                        } else {
                            callback.receiveErrorsetUrlModifier(f);
                        }
                    } else {
                        callback.receiveErrorsetUrlModifier(f);
                    }
                } else {
                    callback.receiveErrorsetUrlModifier(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetUrlModifier(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[98].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[98].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param createCompanyMetadataParam992
     * @param authHeader993
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#createCompanyMetadata
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateCompanyMetadataReturn createCompanyMetadata(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateCompanyMetadataParam createCompanyMetadataParam992,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader993)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[99].getName());
            _operationClient.getOptions().setAction("createCompanyMetadata");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    createCompanyMetadataParam992,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createCompanyMetadata")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createCompanyMetadata"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader993 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader993 = toOM(authHeader993,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createCompanyMetadata")));
                addHeader(omElementauthHeader993, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateCompanyMetadataReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateCompanyMetadataReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createCompanyMetadata"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createCompanyMetadata"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createCompanyMetadata"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param createCompanyMetadataParam992
     * @param authHeader993
     * @see com.scene7.www.ipsapi.IpsApiService#startcreateCompanyMetadata
     */
    public void startcreateCompanyMetadata(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateCompanyMetadataParam createCompanyMetadataParam992,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader993,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[99].getName());
        _operationClient.getOptions().setAction("createCompanyMetadata");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                createCompanyMetadataParam992,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createCompanyMetadata")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createCompanyMetadata"));

        // add the soap_headers only if they are not null
        if (authHeader993 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader993 = toOM(authHeader993,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createCompanyMetadata")));
            addHeader(omElementauthHeader993, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateCompanyMetadataReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultcreateCompanyMetadata(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateCompanyMetadataReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorcreateCompanyMetadata(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createCompanyMetadata"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createCompanyMetadata"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createCompanyMetadata"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorcreateCompanyMetadata((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorcreateCompanyMetadata((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorcreateCompanyMetadata((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorcreateCompanyMetadata(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateCompanyMetadata(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateCompanyMetadata(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateCompanyMetadata(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateCompanyMetadata(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateCompanyMetadata(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateCompanyMetadata(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateCompanyMetadata(f);
                            }
                        } else {
                            callback.receiveErrorcreateCompanyMetadata(f);
                        }
                    } else {
                        callback.receiveErrorcreateCompanyMetadata(f);
                    }
                } else {
                    callback.receiveErrorcreateCompanyMetadata(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorcreateCompanyMetadata(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[99].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[99].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setImageServingPublishSettingsParam995
     * @param authHeader996
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setImageServingPublishSettings
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageServingPublishSettingsReturn setImageServingPublishSettings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageServingPublishSettingsParam setImageServingPublishSettingsParam995,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader996)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[100].getName());
            _operationClient.getOptions().setAction("setImageServingPublishSettings");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setImageServingPublishSettingsParam995,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setImageServingPublishSettings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setImageServingPublishSettings"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader996 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader996 = toOM(authHeader996,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setImageServingPublishSettings")));
                addHeader(omElementauthHeader996, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageServingPublishSettingsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageServingPublishSettingsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageServingPublishSettings"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageServingPublishSettings"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageServingPublishSettings"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setImageServingPublishSettingsParam995
     * @param authHeader996
     * @see com.scene7.www.ipsapi.IpsApiService#startsetImageServingPublishSettings
     */
    public void startsetImageServingPublishSettings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageServingPublishSettingsParam setImageServingPublishSettingsParam995,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader996,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[100].getName());
        _operationClient.getOptions().setAction("setImageServingPublishSettings");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setImageServingPublishSettingsParam995,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setImageServingPublishSettings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setImageServingPublishSettings"));

        // add the soap_headers only if they are not null
        if (authHeader996 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader996 = toOM(authHeader996,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setImageServingPublishSettings")));
            addHeader(omElementauthHeader996, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageServingPublishSettingsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetImageServingPublishSettings(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageServingPublishSettingsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetImageServingPublishSettings(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(
                                new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setImageServingPublishSettings"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),
                                                "setImageServingPublishSettings"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),
                                                "setImageServingPublishSettings"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetImageServingPublishSettings(
                                            (com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetImageServingPublishSettings((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetImageServingPublishSettings(
                                            (com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetImageServingPublishSettings(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageServingPublishSettings(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageServingPublishSettings(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageServingPublishSettings(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageServingPublishSettings(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageServingPublishSettings(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageServingPublishSettings(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetImageServingPublishSettings(f);
                            }
                        } else {
                            callback.receiveErrorsetImageServingPublishSettings(f);
                        }
                    } else {
                        callback.receiveErrorsetImageServingPublishSettings(f);
                    }
                } else {
                    callback.receiveErrorsetImageServingPublishSettings(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetImageServingPublishSettings(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[100].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[100].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param deleteZoomTargetParam998
     * @param authHeader999
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#deleteZoomTarget
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteZoomTargetReturn deleteZoomTarget(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteZoomTargetParam deleteZoomTargetParam998,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader999)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[101].getName());
            _operationClient.getOptions().setAction("deleteZoomTarget");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    deleteZoomTargetParam998,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteZoomTarget")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteZoomTarget"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader999 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader999 = toOM(authHeader999,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteZoomTarget")));
                addHeader(omElementauthHeader999, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteZoomTargetReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteZoomTargetReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteZoomTarget"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteZoomTarget"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteZoomTarget"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param deleteZoomTargetParam998
     * @param authHeader999
     * @see com.scene7.www.ipsapi.IpsApiService#startdeleteZoomTarget
     */
    public void startdeleteZoomTarget(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteZoomTargetParam deleteZoomTargetParam998,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader999,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[101].getName());
        _operationClient.getOptions().setAction("deleteZoomTarget");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                deleteZoomTargetParam998,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteZoomTarget")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteZoomTarget"));

        // add the soap_headers only if they are not null
        if (authHeader999 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader999 = toOM(authHeader999,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteZoomTarget")));
            addHeader(omElementauthHeader999, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteZoomTargetReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultdeleteZoomTarget(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteZoomTargetReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrordeleteZoomTarget(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteZoomTarget"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteZoomTarget"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteZoomTarget"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrordeleteZoomTarget((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrordeleteZoomTarget((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrordeleteZoomTarget((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrordeleteZoomTarget(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteZoomTarget(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteZoomTarget(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteZoomTarget(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteZoomTarget(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteZoomTarget(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteZoomTarget(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteZoomTarget(f);
                            }
                        } else {
                            callback.receiveErrordeleteZoomTarget(f);
                        }
                    } else {
                        callback.receiveErrordeleteZoomTarget(f);
                    }
                } else {
                    callback.receiveErrordeleteZoomTarget(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrordeleteZoomTarget(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[101].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[101].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param updateFolderPermissionsParam1
     * @param authHeader2
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#updateFolderPermissions
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateFolderPermissionsReturn updateFolderPermissions(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateFolderPermissionsParam updateFolderPermissionsParam1,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader2)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[102].getName());
            _operationClient.getOptions().setAction("updateFolderPermissions");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    updateFolderPermissionsParam1,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateFolderPermissions")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateFolderPermissions"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader2 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader2 = toOM(authHeader2,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateFolderPermissions")));
                addHeader(omElementauthHeader2, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateFolderPermissionsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateFolderPermissionsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateFolderPermissions"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateFolderPermissions"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateFolderPermissions"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param updateFolderPermissionsParam1
     * @param authHeader2
     * @see com.scene7.www.ipsapi.IpsApiService#startupdateFolderPermissions
     */
    public void startupdateFolderPermissions(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateFolderPermissionsParam updateFolderPermissionsParam1,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader2,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[102].getName());
        _operationClient.getOptions().setAction("updateFolderPermissions");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                updateFolderPermissionsParam1,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateFolderPermissions")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateFolderPermissions"));

        // add the soap_headers only if they are not null
        if (authHeader2 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader2 = toOM(authHeader2,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateFolderPermissions")));
            addHeader(omElementauthHeader2, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateFolderPermissionsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultupdateFolderPermissions(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateFolderPermissionsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorupdateFolderPermissions(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateFolderPermissions"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateFolderPermissions"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateFolderPermissions"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorupdateFolderPermissions((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorupdateFolderPermissions((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorupdateFolderPermissions((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorupdateFolderPermissions(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateFolderPermissions(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateFolderPermissions(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateFolderPermissions(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateFolderPermissions(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateFolderPermissions(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateFolderPermissions(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateFolderPermissions(f);
                            }
                        } else {
                            callback.receiveErrorupdateFolderPermissions(f);
                        }
                    } else {
                        callback.receiveErrorupdateFolderPermissions(f);
                    }
                } else {
                    callback.receiveErrorupdateFolderPermissions(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorupdateFolderPermissions(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[102].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[102].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param createImageSetParam4
     * @param authHeader5
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#createImageSet
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateImageSetReturn createImageSet(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateImageSetParam createImageSetParam4,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader5)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[103].getName());
            _operationClient.getOptions().setAction("createImageSet");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    createImageSetParam4,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createImageSet")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createImageSet"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader5 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader5 = toOM(authHeader5,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createImageSet")));
                addHeader(omElementauthHeader5, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateImageSetReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateImageSetReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createImageSet"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createImageSet"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createImageSet"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param createImageSetParam4
     * @param authHeader5
     * @see com.scene7.www.ipsapi.IpsApiService#startcreateImageSet
     */
    public void startcreateImageSet(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateImageSetParam createImageSetParam4,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader5,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[103].getName());
        _operationClient.getOptions().setAction("createImageSet");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                createImageSetParam4,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createImageSet")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createImageSet"));

        // add the soap_headers only if they are not null
        if (authHeader5 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader5 = toOM(authHeader5,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createImageSet")));
            addHeader(omElementauthHeader5, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateImageSetReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultcreateImageSet(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateImageSetReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorcreateImageSet(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createImageSet"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createImageSet"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createImageSet"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorcreateImageSet((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorcreateImageSet((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorcreateImageSet((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorcreateImageSet(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateImageSet(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateImageSet(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateImageSet(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateImageSet(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateImageSet(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateImageSet(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateImageSet(f);
                            }
                        } else {
                            callback.receiveErrorcreateImageSet(f);
                        }
                    } else {
                        callback.receiveErrorcreateImageSet(f);
                    }
                } else {
                    callback.receiveErrorcreateImageSet(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorcreateImageSet(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[103].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[103].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param deleteAssetsParam7
     * @param authHeader8
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#deleteAssets
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetsReturn deleteAssets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetsParam deleteAssetsParam7,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader8)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[104].getName());
            _operationClient.getOptions().setAction("deleteAssets");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    deleteAssetsParam7,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteAssets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteAssets"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader8 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader8 = toOM(authHeader8,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteAssets")));
                addHeader(omElementauthHeader8, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteAssets"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteAssets"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteAssets"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param deleteAssetsParam7
     * @param authHeader8
     * @see com.scene7.www.ipsapi.IpsApiService#startdeleteAssets
     */
    public void startdeleteAssets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetsParam deleteAssetsParam7,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader8,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[104].getName());
        _operationClient.getOptions().setAction("deleteAssets");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                deleteAssetsParam7,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteAssets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteAssets"));

        // add the soap_headers only if they are not null
        if (authHeader8 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader8 = toOM(authHeader8,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteAssets")));
            addHeader(omElementauthHeader8, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultdeleteAssets(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrordeleteAssets(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteAssets"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteAssets"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteAssets"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrordeleteAssets((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrordeleteAssets((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrordeleteAssets((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrordeleteAssets(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAssets(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAssets(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAssets(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAssets(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAssets(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAssets(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteAssets(f);
                            }
                        } else {
                            callback.receiveErrordeleteAssets(f);
                        }
                    } else {
                        callback.receiveErrordeleteAssets(f);
                    }
                } else {
                    callback.receiveErrordeleteAssets(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrordeleteAssets(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[104].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[104].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getPropertyParam10
     * @param authHeader11
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getProperty
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertyReturn getProperty(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertyParam getPropertyParam10,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader11)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[105].getName());
            _operationClient.getOptions().setAction("getProperty");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getPropertyParam10,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getProperty")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getProperty"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader11 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader11 = toOM(authHeader11,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getProperty")));
                addHeader(omElementauthHeader11, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertyReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertyReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getProperty"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getProperty"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getProperty"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getPropertyParam10
     * @param authHeader11
     * @see com.scene7.www.ipsapi.IpsApiService#startgetProperty
     */
    public void startgetProperty(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertyParam getPropertyParam10,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader11,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[105].getName());
        _operationClient.getOptions().setAction("getProperty");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getPropertyParam10,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getProperty")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getProperty"));

        // add the soap_headers only if they are not null
        if (authHeader11 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader11 = toOM(authHeader11,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getProperty")));
            addHeader(omElementauthHeader11, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertyReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetProperty(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertyReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetProperty(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getProperty"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getProperty"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getProperty"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetProperty((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetProperty((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetProperty((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetProperty(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProperty(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProperty(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProperty(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProperty(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProperty(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProperty(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProperty(f);
                            }
                        } else {
                            callback.receiveErrorgetProperty(f);
                        }
                    } else {
                        callback.receiveErrorgetProperty(f);
                    }
                } else {
                    callback.receiveErrorgetProperty(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetProperty(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[105].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[105].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param saveMetadataSchemaParam13
     * @param authHeader14
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#saveMetadataSchema
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataSchemaReturn saveMetadataSchema(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataSchemaParam saveMetadataSchemaParam13,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader14)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[106].getName());
            _operationClient.getOptions().setAction("saveMetadataSchema");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    saveMetadataSchemaParam13,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "saveMetadataSchema")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "saveMetadataSchema"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader14 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader14 = toOM(authHeader14,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "saveMetadataSchema")));
                addHeader(omElementauthHeader14, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataSchemaReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataSchemaReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveMetadataSchema"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveMetadataSchema"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveMetadataSchema"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param saveMetadataSchemaParam13
     * @param authHeader14
     * @see com.scene7.www.ipsapi.IpsApiService#startsaveMetadataSchema
     */
    public void startsaveMetadataSchema(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataSchemaParam saveMetadataSchemaParam13,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader14,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[106].getName());
        _operationClient.getOptions().setAction("saveMetadataSchema");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                saveMetadataSchemaParam13,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "saveMetadataSchema")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "saveMetadataSchema"));

        // add the soap_headers only if they are not null
        if (authHeader14 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader14 = toOM(authHeader14,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "saveMetadataSchema")));
            addHeader(omElementauthHeader14, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataSchemaReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsaveMetadataSchema(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataSchemaReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsaveMetadataSchema(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveMetadataSchema"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveMetadataSchema"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveMetadataSchema"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsaveMetadataSchema((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsaveMetadataSchema((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsaveMetadataSchema((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsaveMetadataSchema(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveMetadataSchema(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveMetadataSchema(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveMetadataSchema(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveMetadataSchema(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveMetadataSchema(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveMetadataSchema(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveMetadataSchema(f);
                            }
                        } else {
                            callback.receiveErrorsaveMetadataSchema(f);
                        }
                    } else {
                        callback.receiveErrorsaveMetadataSchema(f);
                    }
                } else {
                    callback.receiveErrorsaveMetadataSchema(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsaveMetadataSchema(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[106].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[106].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getPublishContextsParam16
     * @param authHeader17
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getPublishContexts
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPublishContextsReturn getPublishContexts(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPublishContextsParam getPublishContextsParam16,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader17)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[107].getName());
            _operationClient.getOptions().setAction("getPublishContexts");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getPublishContextsParam16,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getPublishContexts")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getPublishContexts"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader17 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader17 = toOM(authHeader17,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getPublishContexts")));
                addHeader(omElementauthHeader17, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPublishContextsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPublishContextsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPublishContexts"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPublishContexts"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPublishContexts"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getPublishContextsParam16
     * @param authHeader17
     * @see com.scene7.www.ipsapi.IpsApiService#startgetPublishContexts
     */
    public void startgetPublishContexts(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPublishContextsParam getPublishContextsParam16,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader17,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[107].getName());
        _operationClient.getOptions().setAction("getPublishContexts");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getPublishContextsParam16,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getPublishContexts")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getPublishContexts"));

        // add the soap_headers only if they are not null
        if (authHeader17 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader17 = toOM(authHeader17,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getPublishContexts")));
            addHeader(omElementauthHeader17, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPublishContextsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetPublishContexts(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPublishContextsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetPublishContexts(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPublishContexts"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPublishContexts"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPublishContexts"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetPublishContexts((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetPublishContexts((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetPublishContexts((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetPublishContexts(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPublishContexts(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPublishContexts(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPublishContexts(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPublishContexts(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPublishContexts(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPublishContexts(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPublishContexts(f);
                            }
                        } else {
                            callback.receiveErrorgetPublishContexts(f);
                        }
                    } else {
                        callback.receiveErrorgetPublishContexts(f);
                    }
                } else {
                    callback.receiveErrorgetPublishContexts(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetPublishContexts(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[107].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[107].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getCompanyMembershipParam19
     * @param authHeader20
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getCompanyMembership
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembershipReturn getCompanyMembership(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembershipParam getCompanyMembershipParam19,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader20)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[108].getName());
            _operationClient.getOptions().setAction("getCompanyMembership");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getCompanyMembershipParam19,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getCompanyMembership")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getCompanyMembership"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader20 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader20 = toOM(authHeader20,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getCompanyMembership")));
                addHeader(omElementauthHeader20, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembershipReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembershipReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyMembership"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyMembership"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyMembership"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getCompanyMembershipParam19
     * @param authHeader20
     * @see com.scene7.www.ipsapi.IpsApiService#startgetCompanyMembership
     */
    public void startgetCompanyMembership(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembershipParam getCompanyMembershipParam19,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader20,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[108].getName());
        _operationClient.getOptions().setAction("getCompanyMembership");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getCompanyMembershipParam19,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getCompanyMembership")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getCompanyMembership"));

        // add the soap_headers only if they are not null
        if (authHeader20 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader20 = toOM(authHeader20,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getCompanyMembership")));
            addHeader(omElementauthHeader20, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembershipReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetCompanyMembership(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembershipReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetCompanyMembership(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyMembership"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyMembership"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyMembership"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetCompanyMembership((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetCompanyMembership((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetCompanyMembership((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetCompanyMembership(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMembership(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMembership(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMembership(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMembership(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMembership(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMembership(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMembership(f);
                            }
                        } else {
                            callback.receiveErrorgetCompanyMembership(f);
                        }
                    } else {
                        callback.receiveErrorgetCompanyMembership(f);
                    }
                } else {
                    callback.receiveErrorgetCompanyMembership(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetCompanyMembership(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[108].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[108].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param updateMetadataFieldParam22
     * @param authHeader23
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#updateMetadataField
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateMetadataFieldReturn updateMetadataField(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateMetadataFieldParam updateMetadataFieldParam22,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader23)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[109].getName());
            _operationClient.getOptions().setAction("updateMetadataField");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    updateMetadataFieldParam22,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateMetadataField")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateMetadataField"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader23 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader23 = toOM(authHeader23,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateMetadataField")));
                addHeader(omElementauthHeader23, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateMetadataFieldReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateMetadataFieldReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateMetadataField"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateMetadataField"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateMetadataField"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param updateMetadataFieldParam22
     * @param authHeader23
     * @see com.scene7.www.ipsapi.IpsApiService#startupdateMetadataField
     */
    public void startupdateMetadataField(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateMetadataFieldParam updateMetadataFieldParam22,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader23,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[109].getName());
        _operationClient.getOptions().setAction("updateMetadataField");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                updateMetadataFieldParam22,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateMetadataField")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateMetadataField"));

        // add the soap_headers only if they are not null
        if (authHeader23 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader23 = toOM(authHeader23,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateMetadataField")));
            addHeader(omElementauthHeader23, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateMetadataFieldReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultupdateMetadataField(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateMetadataFieldReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorupdateMetadataField(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateMetadataField"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateMetadataField"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateMetadataField"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorupdateMetadataField((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorupdateMetadataField((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorupdateMetadataField((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorupdateMetadataField(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateMetadataField(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateMetadataField(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateMetadataField(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateMetadataField(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateMetadataField(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateMetadataField(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateMetadataField(f);
                            }
                        } else {
                            callback.receiveErrorupdateMetadataField(f);
                        }
                    } else {
                        callback.receiveErrorupdateMetadataField(f);
                    }
                } else {
                    callback.receiveErrorupdateMetadataField(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorupdateMetadataField(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[109].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[109].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param renameAssetParam25
     * @param authHeader26
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#renameAsset
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameAssetReturn renameAsset(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameAssetParam renameAssetParam25,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader26)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[110].getName());
            _operationClient.getOptions().setAction("renameAsset");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    renameAssetParam25,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "renameAsset")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "renameAsset"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader26 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader26 = toOM(authHeader26,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "renameAsset")));
                addHeader(omElementauthHeader26, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameAssetReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameAssetReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "renameAsset"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "renameAsset"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "renameAsset"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param renameAssetParam25
     * @param authHeader26
     * @see com.scene7.www.ipsapi.IpsApiService#startrenameAsset
     */
    public void startrenameAsset(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameAssetParam renameAssetParam25,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader26,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[110].getName());
        _operationClient.getOptions().setAction("renameAsset");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                renameAssetParam25,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "renameAsset")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "renameAsset"));

        // add the soap_headers only if they are not null
        if (authHeader26 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader26 = toOM(authHeader26,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "renameAsset")));
            addHeader(omElementauthHeader26, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameAssetReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultrenameAsset(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameAssetReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorrenameAsset(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "renameAsset"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "renameAsset"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "renameAsset"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorrenameAsset((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorrenameAsset((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorrenameAsset((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorrenameAsset(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameAsset(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameAsset(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameAsset(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameAsset(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameAsset(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameAsset(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameAsset(f);
                            }
                        } else {
                            callback.receiveErrorrenameAsset(f);
                        }
                    } else {
                        callback.receiveErrorrenameAsset(f);
                    }
                } else {
                    callback.receiveErrorrenameAsset(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorrenameAsset(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[110].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[110].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param removeMaskParam28
     * @param authHeader29
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#removeMask
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMaskReturn removeMask(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMaskParam removeMaskParam28,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader29)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[111].getName());
            _operationClient.getOptions().setAction("removeMask");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    removeMaskParam28,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "removeMask")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "removeMask"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader29 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader29 = toOM(authHeader29,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeMask")));
                addHeader(omElementauthHeader29, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMaskReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMaskReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeMask"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeMask"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeMask"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param removeMaskParam28
     * @param authHeader29
     * @see com.scene7.www.ipsapi.IpsApiService#startremoveMask
     */
    public void startremoveMask(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMaskParam removeMaskParam28,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader29,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[111].getName());
        _operationClient.getOptions().setAction("removeMask");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                removeMaskParam28,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "removeMask")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "removeMask"));

        // add the soap_headers only if they are not null
        if (authHeader29 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader29 = toOM(authHeader29,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeMask")));
            addHeader(omElementauthHeader29, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMaskReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultremoveMask(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMaskReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorremoveMask(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeMask"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeMask"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeMask"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorremoveMask((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorremoveMask((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorremoveMask((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorremoveMask(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveMask(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveMask(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveMask(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveMask(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveMask(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveMask(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveMask(f);
                            }
                        } else {
                            callback.receiveErrorremoveMask(f);
                        }
                    } else {
                        callback.receiveErrorremoveMask(f);
                    }
                } else {
                    callback.receiveErrorremoveMask(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorremoveMask(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[111].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[111].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getCompanyMetadataParam31
     * @param authHeader32
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getCompanyMetadata
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMetadataReturn getCompanyMetadata(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMetadataParam getCompanyMetadataParam31,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader32)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[112].getName());
            _operationClient.getOptions().setAction("getCompanyMetadata");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getCompanyMetadataParam31,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getCompanyMetadata")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getCompanyMetadata"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader32 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader32 = toOM(authHeader32,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getCompanyMetadata")));
                addHeader(omElementauthHeader32, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMetadataReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMetadataReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyMetadata"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyMetadata"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyMetadata"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getCompanyMetadataParam31
     * @param authHeader32
     * @see com.scene7.www.ipsapi.IpsApiService#startgetCompanyMetadata
     */
    public void startgetCompanyMetadata(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMetadataParam getCompanyMetadataParam31,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader32,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[112].getName());
        _operationClient.getOptions().setAction("getCompanyMetadata");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getCompanyMetadataParam31,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getCompanyMetadata")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getCompanyMetadata"));

        // add the soap_headers only if they are not null
        if (authHeader32 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader32 = toOM(authHeader32,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getCompanyMetadata")));
            addHeader(omElementauthHeader32, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMetadataReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetCompanyMetadata(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMetadataReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetCompanyMetadata(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyMetadata"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyMetadata"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyMetadata"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetCompanyMetadata((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetCompanyMetadata((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetCompanyMetadata((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetCompanyMetadata(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMetadata(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMetadata(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMetadata(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMetadata(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMetadata(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMetadata(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMetadata(f);
                            }
                        } else {
                            callback.receiveErrorgetCompanyMetadata(f);
                        }
                    } else {
                        callback.receiveErrorgetCompanyMetadata(f);
                    }
                } else {
                    callback.receiveErrorgetCompanyMetadata(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetCompanyMetadata(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[112].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[112].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setGroupMembersParam34
     * @param authHeader35
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setGroupMembers
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembersReturn setGroupMembers(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembersParam setGroupMembersParam34,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader35)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[113].getName());
            _operationClient.getOptions().setAction("setGroupMembers");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setGroupMembersParam34,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setGroupMembers")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setGroupMembers"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader35 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader35 = toOM(authHeader35,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setGroupMembers")));
                addHeader(omElementauthHeader35, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembersReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembersReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setGroupMembers"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setGroupMembers"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setGroupMembers"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setGroupMembersParam34
     * @param authHeader35
     * @see com.scene7.www.ipsapi.IpsApiService#startsetGroupMembers
     */
    public void startsetGroupMembers(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembersParam setGroupMembersParam34,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader35,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[113].getName());
        _operationClient.getOptions().setAction("setGroupMembers");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setGroupMembersParam34,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setGroupMembers")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setGroupMembers"));

        // add the soap_headers only if they are not null
        if (authHeader35 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader35 = toOM(authHeader35,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setGroupMembers")));
            addHeader(omElementauthHeader35, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembersReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetGroupMembers(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembersReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetGroupMembers(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setGroupMembers"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setGroupMembers"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setGroupMembers"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetGroupMembers((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetGroupMembers((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetGroupMembers((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetGroupMembers(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetGroupMembers(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetGroupMembers(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetGroupMembers(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetGroupMembers(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetGroupMembers(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetGroupMembers(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetGroupMembers(f);
                            }
                        } else {
                            callback.receiveErrorsetGroupMembers(f);
                        }
                    } else {
                        callback.receiveErrorsetGroupMembers(f);
                    }
                } else {
                    callback.receiveErrorsetGroupMembers(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetGroupMembers(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[113].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[113].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param addGroupMembershipParam37
     * @param authHeader38
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#addGroupMembership
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembershipReturn addGroupMembership(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembershipParam addGroupMembershipParam37,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader38)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[114].getName());
            _operationClient.getOptions().setAction("addGroupMembership");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    addGroupMembershipParam37,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "addGroupMembership")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "addGroupMembership"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader38 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader38 = toOM(authHeader38,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addGroupMembership")));
                addHeader(omElementauthHeader38, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembershipReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembershipReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addGroupMembership"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addGroupMembership"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addGroupMembership"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param addGroupMembershipParam37
     * @param authHeader38
     * @see com.scene7.www.ipsapi.IpsApiService#startaddGroupMembership
     */
    public void startaddGroupMembership(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembershipParam addGroupMembershipParam37,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader38,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[114].getName());
        _operationClient.getOptions().setAction("addGroupMembership");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                addGroupMembershipParam37,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "addGroupMembership")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "addGroupMembership"));

        // add the soap_headers only if they are not null
        if (authHeader38 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader38 = toOM(authHeader38,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addGroupMembership")));
            addHeader(omElementauthHeader38, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembershipReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultaddGroupMembership(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembershipReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErroraddGroupMembership(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addGroupMembership"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addGroupMembership"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addGroupMembership"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErroraddGroupMembership((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErroraddGroupMembership((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErroraddGroupMembership((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErroraddGroupMembership(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddGroupMembership(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddGroupMembership(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddGroupMembership(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddGroupMembership(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddGroupMembership(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddGroupMembership(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddGroupMembership(f);
                            }
                        } else {
                            callback.receiveErroraddGroupMembership(f);
                        }
                    } else {
                        callback.receiveErroraddGroupMembership(f);
                    }
                } else {
                    callback.receiveErroraddGroupMembership(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErroraddGroupMembership(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[114].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[114].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param emptyAssetsFromTrashParam40
     * @param authHeader41
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#emptyAssetsFromTrash
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.EmptyAssetsFromTrashReturn emptyAssetsFromTrash(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.EmptyAssetsFromTrashParam emptyAssetsFromTrashParam40,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader41)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[115].getName());
            _operationClient.getOptions().setAction("emptyAssetsFromTrash");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    emptyAssetsFromTrashParam40,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "emptyAssetsFromTrash")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "emptyAssetsFromTrash"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader41 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader41 = toOM(authHeader41,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "emptyAssetsFromTrash")));
                addHeader(omElementauthHeader41, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.EmptyAssetsFromTrashReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.EmptyAssetsFromTrashReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "emptyAssetsFromTrash"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "emptyAssetsFromTrash"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "emptyAssetsFromTrash"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param emptyAssetsFromTrashParam40
     * @param authHeader41
     * @see com.scene7.www.ipsapi.IpsApiService#startemptyAssetsFromTrash
     */
    public void startemptyAssetsFromTrash(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.EmptyAssetsFromTrashParam emptyAssetsFromTrashParam40,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader41,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[115].getName());
        _operationClient.getOptions().setAction("emptyAssetsFromTrash");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                emptyAssetsFromTrashParam40,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "emptyAssetsFromTrash")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "emptyAssetsFromTrash"));

        // add the soap_headers only if they are not null
        if (authHeader41 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader41 = toOM(authHeader41,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "emptyAssetsFromTrash")));
            addHeader(omElementauthHeader41, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.EmptyAssetsFromTrashReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultemptyAssetsFromTrash(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.EmptyAssetsFromTrashReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErroremptyAssetsFromTrash(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "emptyAssetsFromTrash"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "emptyAssetsFromTrash"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "emptyAssetsFromTrash"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErroremptyAssetsFromTrash((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErroremptyAssetsFromTrash((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErroremptyAssetsFromTrash((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErroremptyAssetsFromTrash(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroremptyAssetsFromTrash(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroremptyAssetsFromTrash(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroremptyAssetsFromTrash(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroremptyAssetsFromTrash(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroremptyAssetsFromTrash(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroremptyAssetsFromTrash(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroremptyAssetsFromTrash(f);
                            }
                        } else {
                            callback.receiveErroremptyAssetsFromTrash(f);
                        }
                    } else {
                        callback.receiveErroremptyAssetsFromTrash(f);
                    }
                } else {
                    callback.receiveErroremptyAssetsFromTrash(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErroremptyAssetsFromTrash(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[115].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[115].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getCdnCacheInvalidationStatusParam43
     * @param authHeader44
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getCdnCacheInvalidationStatus
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCdnCacheInvalidationStatusReturn getCdnCacheInvalidationStatus(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCdnCacheInvalidationStatusParam getCdnCacheInvalidationStatusParam43,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader44)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[116].getName());
            _operationClient.getOptions().setAction("getCdnCacheInvalidationStatus");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getCdnCacheInvalidationStatusParam43,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getCdnCacheInvalidationStatus")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getCdnCacheInvalidationStatus"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader44 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader44 = toOM(authHeader44,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getCdnCacheInvalidationStatus")));
                addHeader(omElementauthHeader44, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCdnCacheInvalidationStatusReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCdnCacheInvalidationStatusReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCdnCacheInvalidationStatus"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCdnCacheInvalidationStatus"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCdnCacheInvalidationStatus"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getCdnCacheInvalidationStatusParam43
     * @param authHeader44
     * @see com.scene7.www.ipsapi.IpsApiService#startgetCdnCacheInvalidationStatus
     */
    public void startgetCdnCacheInvalidationStatus(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCdnCacheInvalidationStatusParam getCdnCacheInvalidationStatusParam43,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader44,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[116].getName());
        _operationClient.getOptions().setAction("getCdnCacheInvalidationStatus");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getCdnCacheInvalidationStatusParam43,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getCdnCacheInvalidationStatus")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getCdnCacheInvalidationStatus"));

        // add the soap_headers only if they are not null
        if (authHeader44 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader44 = toOM(authHeader44,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getCdnCacheInvalidationStatus")));
            addHeader(omElementauthHeader44, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCdnCacheInvalidationStatusReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetCdnCacheInvalidationStatus(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCdnCacheInvalidationStatusReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetCdnCacheInvalidationStatus(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(
                                new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCdnCacheInvalidationStatus"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCdnCacheInvalidationStatus"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCdnCacheInvalidationStatus"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetCdnCacheInvalidationStatus(
                                            (com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetCdnCacheInvalidationStatus((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetCdnCacheInvalidationStatus(
                                            (com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetCdnCacheInvalidationStatus(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCdnCacheInvalidationStatus(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCdnCacheInvalidationStatus(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCdnCacheInvalidationStatus(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCdnCacheInvalidationStatus(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCdnCacheInvalidationStatus(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCdnCacheInvalidationStatus(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCdnCacheInvalidationStatus(f);
                            }
                        } else {
                            callback.receiveErrorgetCdnCacheInvalidationStatus(f);
                        }
                    } else {
                        callback.receiveErrorgetCdnCacheInvalidationStatus(f);
                    }
                } else {
                    callback.receiveErrorgetCdnCacheInvalidationStatus(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetCdnCacheInvalidationStatus(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[116].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[116].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param batchSetThumbAssetParam46
     * @param authHeader47
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#batchSetThumbAsset
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetThumbAssetReturn batchSetThumbAsset(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetThumbAssetParam batchSetThumbAssetParam46,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader47)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[117].getName());
            _operationClient.getOptions().setAction("batchSetThumbAsset");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    batchSetThumbAssetParam46,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "batchSetThumbAsset")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "batchSetThumbAsset"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader47 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader47 = toOM(authHeader47,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "batchSetThumbAsset")));
                addHeader(omElementauthHeader47, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetThumbAssetReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetThumbAssetReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetThumbAsset"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetThumbAsset"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetThumbAsset"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param batchSetThumbAssetParam46
     * @param authHeader47
     * @see com.scene7.www.ipsapi.IpsApiService#startbatchSetThumbAsset
     */
    public void startbatchSetThumbAsset(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetThumbAssetParam batchSetThumbAssetParam46,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader47,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[117].getName());
        _operationClient.getOptions().setAction("batchSetThumbAsset");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                batchSetThumbAssetParam46,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "batchSetThumbAsset")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "batchSetThumbAsset"));

        // add the soap_headers only if they are not null
        if (authHeader47 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader47 = toOM(authHeader47,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "batchSetThumbAsset")));
            addHeader(omElementauthHeader47, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetThumbAssetReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultbatchSetThumbAsset(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetThumbAssetReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorbatchSetThumbAsset(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetThumbAsset"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetThumbAsset"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetThumbAsset"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorbatchSetThumbAsset((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorbatchSetThumbAsset((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorbatchSetThumbAsset((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorbatchSetThumbAsset(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetThumbAsset(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetThumbAsset(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetThumbAsset(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetThumbAsset(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetThumbAsset(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetThumbAsset(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetThumbAsset(f);
                            }
                        } else {
                            callback.receiveErrorbatchSetThumbAsset(f);
                        }
                    } else {
                        callback.receiveErrorbatchSetThumbAsset(f);
                    }
                } else {
                    callback.receiveErrorbatchSetThumbAsset(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorbatchSetThumbAsset(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[117].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[117].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getActivePublishContextsParam49
     * @param authHeader50
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getActivePublishContexts
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActivePublishContextsReturn getActivePublishContexts(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActivePublishContextsParam getActivePublishContextsParam49,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader50)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[118].getName());
            _operationClient.getOptions().setAction("getActivePublishContexts");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getActivePublishContextsParam49,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getActivePublishContexts")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getActivePublishContexts"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader50 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader50 = toOM(authHeader50,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getActivePublishContexts")));
                addHeader(omElementauthHeader50, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActivePublishContextsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActivePublishContextsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getActivePublishContexts"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getActivePublishContexts"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getActivePublishContexts"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getActivePublishContextsParam49
     * @param authHeader50
     * @see com.scene7.www.ipsapi.IpsApiService#startgetActivePublishContexts
     */
    public void startgetActivePublishContexts(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActivePublishContextsParam getActivePublishContextsParam49,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader50,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[118].getName());
        _operationClient.getOptions().setAction("getActivePublishContexts");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getActivePublishContextsParam49,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getActivePublishContexts")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getActivePublishContexts"));

        // add the soap_headers only if they are not null
        if (authHeader50 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader50 = toOM(authHeader50,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getActivePublishContexts")));
            addHeader(omElementauthHeader50, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActivePublishContextsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetActivePublishContexts(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActivePublishContextsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetActivePublishContexts(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getActivePublishContexts"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getActivePublishContexts"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getActivePublishContexts"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetActivePublishContexts((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetActivePublishContexts((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetActivePublishContexts((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetActivePublishContexts(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetActivePublishContexts(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetActivePublishContexts(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetActivePublishContexts(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetActivePublishContexts(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetActivePublishContexts(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetActivePublishContexts(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetActivePublishContexts(f);
                            }
                        } else {
                            callback.receiveErrorgetActivePublishContexts(f);
                        }
                    } else {
                        callback.receiveErrorgetActivePublishContexts(f);
                    }
                } else {
                    callback.receiveErrorgetActivePublishContexts(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetActivePublishContexts(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[118].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[118].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param stopJobParam52
     * @param authHeader53
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#stopJob
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.StopJobReturn stopJob(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.StopJobParam stopJobParam52,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader53)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[119].getName());
            _operationClient.getOptions().setAction("stopJob");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    stopJobParam52,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "stopJob")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "stopJob"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader53 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader53 = toOM(authHeader53,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "stopJob")));
                addHeader(omElementauthHeader53, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.StopJobReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.StopJobReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "stopJob"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "stopJob"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "stopJob"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param stopJobParam52
     * @param authHeader53
     * @see com.scene7.www.ipsapi.IpsApiService#startstopJob
     */
    public void startstopJob(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.StopJobParam stopJobParam52,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader53,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[119].getName());
        _operationClient.getOptions().setAction("stopJob");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                stopJobParam52,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "stopJob")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "stopJob"));

        // add the soap_headers only if they are not null
        if (authHeader53 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader53 = toOM(authHeader53,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "stopJob")));
            addHeader(omElementauthHeader53, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.StopJobReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultstopJob(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.StopJobReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorstopJob(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "stopJob"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "stopJob"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "stopJob"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorstopJob((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorstopJob((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorstopJob((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorstopJob(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorstopJob(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorstopJob(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorstopJob(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorstopJob(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorstopJob(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorstopJob(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorstopJob(f);
                            }
                        } else {
                            callback.receiveErrorstopJob(f);
                        }
                    } else {
                        callback.receiveErrorstopJob(f);
                    }
                } else {
                    callback.receiveErrorstopJob(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorstopJob(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[119].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[119].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getAssetJobLogsParam55
     * @param authHeader56
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getAssetJobLogs
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetJobLogsReturn getAssetJobLogs(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetJobLogsParam getAssetJobLogsParam55,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader56)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[120].getName());
            _operationClient.getOptions().setAction("getAssetJobLogs");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getAssetJobLogsParam55,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAssetJobLogs")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAssetJobLogs"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader56 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader56 = toOM(authHeader56,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssetJobLogs")));
                addHeader(omElementauthHeader56, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetJobLogsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetJobLogsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetJobLogs"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetJobLogs"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetJobLogs"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getAssetJobLogsParam55
     * @param authHeader56
     * @see com.scene7.www.ipsapi.IpsApiService#startgetAssetJobLogs
     */
    public void startgetAssetJobLogs(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetJobLogsParam getAssetJobLogsParam55,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader56,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[120].getName());
        _operationClient.getOptions().setAction("getAssetJobLogs");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getAssetJobLogsParam55,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAssetJobLogs")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAssetJobLogs"));

        // add the soap_headers only if they are not null
        if (authHeader56 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader56 = toOM(authHeader56,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssetJobLogs")));
            addHeader(omElementauthHeader56, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetJobLogsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetAssetJobLogs(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetJobLogsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetAssetJobLogs(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetJobLogs"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetJobLogs"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetJobLogs"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetAssetJobLogs((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetAssetJobLogs((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetAssetJobLogs((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetAssetJobLogs(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetJobLogs(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetJobLogs(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetJobLogs(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetJobLogs(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetJobLogs(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetJobLogs(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetJobLogs(f);
                            }
                        } else {
                            callback.receiveErrorgetAssetJobLogs(f);
                        }
                    } else {
                        callback.receiveErrorgetAssetJobLogs(f);
                    }
                } else {
                    callback.receiveErrorgetAssetJobLogs(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetAssetJobLogs(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[120].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[120].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param addCompanyParam58
     * @param authHeader59
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#addCompany
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyReturn addCompany(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyParam addCompanyParam58,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader59)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[121].getName());
            _operationClient.getOptions().setAction("addCompany");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    addCompanyParam58,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "addCompany")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "addCompany"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader59 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader59 = toOM(authHeader59,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addCompany")));
                addHeader(omElementauthHeader59, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addCompany"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addCompany"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addCompany"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param addCompanyParam58
     * @param authHeader59
     * @see com.scene7.www.ipsapi.IpsApiService#startaddCompany
     */
    public void startaddCompany(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyParam addCompanyParam58,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader59,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[121].getName());
        _operationClient.getOptions().setAction("addCompany");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                addCompanyParam58,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "addCompany")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "addCompany"));

        // add the soap_headers only if they are not null
        if (authHeader59 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader59 = toOM(authHeader59,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addCompany")));
            addHeader(omElementauthHeader59, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultaddCompany(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErroraddCompany(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addCompany"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addCompany"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addCompany"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErroraddCompany((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErroraddCompany((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErroraddCompany((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErroraddCompany(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddCompany(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddCompany(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddCompany(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddCompany(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddCompany(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddCompany(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddCompany(f);
                            }
                        } else {
                            callback.receiveErroraddCompany(f);
                        }
                    } else {
                        callback.receiveErroraddCompany(f);
                    }
                } else {
                    callback.receiveErroraddCompany(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErroraddCompany(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[121].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[121].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param removeProjectAssetsParam61
     * @param authHeader62
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#removeProjectAssets
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveProjectAssetsReturn removeProjectAssets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveProjectAssetsParam removeProjectAssetsParam61,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader62)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[122].getName());
            _operationClient.getOptions().setAction("removeProjectAssets");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    removeProjectAssetsParam61,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "removeProjectAssets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "removeProjectAssets"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader62 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader62 = toOM(authHeader62,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeProjectAssets")));
                addHeader(omElementauthHeader62, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveProjectAssetsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveProjectAssetsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeProjectAssets"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeProjectAssets"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeProjectAssets"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param removeProjectAssetsParam61
     * @param authHeader62
     * @see com.scene7.www.ipsapi.IpsApiService#startremoveProjectAssets
     */
    public void startremoveProjectAssets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveProjectAssetsParam removeProjectAssetsParam61,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader62,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[122].getName());
        _operationClient.getOptions().setAction("removeProjectAssets");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                removeProjectAssetsParam61,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "removeProjectAssets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "removeProjectAssets"));

        // add the soap_headers only if they are not null
        if (authHeader62 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader62 = toOM(authHeader62,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeProjectAssets")));
            addHeader(omElementauthHeader62, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveProjectAssetsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultremoveProjectAssets(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveProjectAssetsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorremoveProjectAssets(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeProjectAssets"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeProjectAssets"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeProjectAssets"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorremoveProjectAssets((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorremoveProjectAssets((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorremoveProjectAssets((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorremoveProjectAssets(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveProjectAssets(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveProjectAssets(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveProjectAssets(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveProjectAssets(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveProjectAssets(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveProjectAssets(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveProjectAssets(f);
                            }
                        } else {
                            callback.receiveErrorremoveProjectAssets(f);
                        }
                    } else {
                        callback.receiveErrorremoveProjectAssets(f);
                    }
                } else {
                    callback.receiveErrorremoveProjectAssets(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorremoveProjectAssets(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[122].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[122].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param batchSetAssetMetadataParam64
     * @param authHeader65
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#batchSetAssetMetadata
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetAssetMetadataReturn batchSetAssetMetadata(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetAssetMetadataParam batchSetAssetMetadataParam64,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader65)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[123].getName());
            _operationClient.getOptions().setAction("batchSetAssetMetadata");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    batchSetAssetMetadataParam64,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "batchSetAssetMetadata")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "batchSetAssetMetadata"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader65 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader65 = toOM(authHeader65,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "batchSetAssetMetadata")));
                addHeader(omElementauthHeader65, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetAssetMetadataReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetAssetMetadataReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetAssetMetadata"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetAssetMetadata"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetAssetMetadata"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param batchSetAssetMetadataParam64
     * @param authHeader65
     * @see com.scene7.www.ipsapi.IpsApiService#startbatchSetAssetMetadata
     */
    public void startbatchSetAssetMetadata(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetAssetMetadataParam batchSetAssetMetadataParam64,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader65,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[123].getName());
        _operationClient.getOptions().setAction("batchSetAssetMetadata");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                batchSetAssetMetadataParam64,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "batchSetAssetMetadata")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "batchSetAssetMetadata"));

        // add the soap_headers only if they are not null
        if (authHeader65 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader65 = toOM(authHeader65,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "batchSetAssetMetadata")));
            addHeader(omElementauthHeader65, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetAssetMetadataReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultbatchSetAssetMetadata(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetAssetMetadataReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorbatchSetAssetMetadata(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetAssetMetadata"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetAssetMetadata"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "batchSetAssetMetadata"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorbatchSetAssetMetadata((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorbatchSetAssetMetadata((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorbatchSetAssetMetadata((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorbatchSetAssetMetadata(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetAssetMetadata(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetAssetMetadata(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetAssetMetadata(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetAssetMetadata(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetAssetMetadata(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetAssetMetadata(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorbatchSetAssetMetadata(f);
                            }
                        } else {
                            callback.receiveErrorbatchSetAssetMetadata(f);
                        }
                    } else {
                        callback.receiveErrorbatchSetAssetMetadata(f);
                    }
                } else {
                    callback.receiveErrorbatchSetAssetMetadata(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorbatchSetAssetMetadata(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[123].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[123].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param removeFolderPermissionsParam67
     * @param authHeader68
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#removeFolderPermissions
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveFolderPermissionsReturn removeFolderPermissions(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveFolderPermissionsParam removeFolderPermissionsParam67,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader68)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[124].getName());
            _operationClient.getOptions().setAction("removeFolderPermissions");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    removeFolderPermissionsParam67,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "removeFolderPermissions")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "removeFolderPermissions"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader68 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader68 = toOM(authHeader68,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeFolderPermissions")));
                addHeader(omElementauthHeader68, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveFolderPermissionsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveFolderPermissionsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeFolderPermissions"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeFolderPermissions"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeFolderPermissions"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param removeFolderPermissionsParam67
     * @param authHeader68
     * @see com.scene7.www.ipsapi.IpsApiService#startremoveFolderPermissions
     */
    public void startremoveFolderPermissions(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveFolderPermissionsParam removeFolderPermissionsParam67,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader68,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[124].getName());
        _operationClient.getOptions().setAction("removeFolderPermissions");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                removeFolderPermissionsParam67,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "removeFolderPermissions")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "removeFolderPermissions"));

        // add the soap_headers only if they are not null
        if (authHeader68 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader68 = toOM(authHeader68,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeFolderPermissions")));
            addHeader(omElementauthHeader68, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveFolderPermissionsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultremoveFolderPermissions(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveFolderPermissionsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorremoveFolderPermissions(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeFolderPermissions"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeFolderPermissions"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeFolderPermissions"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorremoveFolderPermissions((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorremoveFolderPermissions((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorremoveFolderPermissions((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorremoveFolderPermissions(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveFolderPermissions(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveFolderPermissions(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveFolderPermissions(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveFolderPermissions(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveFolderPermissions(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveFolderPermissions(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveFolderPermissions(f);
                            }
                        } else {
                            callback.receiveErrorremoveFolderPermissions(f);
                        }
                    } else {
                        callback.receiveErrorremoveFolderPermissions(f);
                    }
                } else {
                    callback.receiveErrorremoveFolderPermissions(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorremoveFolderPermissions(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[124].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[124].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getXMPPacketParam70
     * @param authHeader71
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getXMPPacket
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetXMPPacketReturn getXMPPacket(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetXMPPacketParam getXMPPacketParam70,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader71)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[125].getName());
            _operationClient.getOptions().setAction("getXMPPacket");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getXMPPacketParam70,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getXMPPacket")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getXMPPacket"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader71 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader71 = toOM(authHeader71,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getXMPPacket")));
                addHeader(omElementauthHeader71, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetXMPPacketReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetXMPPacketReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getXMPPacket"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getXMPPacket"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getXMPPacket"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getXMPPacketParam70
     * @param authHeader71
     * @see com.scene7.www.ipsapi.IpsApiService#startgetXMPPacket
     */
    public void startgetXMPPacket(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetXMPPacketParam getXMPPacketParam70,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader71,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[125].getName());
        _operationClient.getOptions().setAction("getXMPPacket");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getXMPPacketParam70,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getXMPPacket")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getXMPPacket"));

        // add the soap_headers only if they are not null
        if (authHeader71 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader71 = toOM(authHeader71,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getXMPPacket")));
            addHeader(omElementauthHeader71, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetXMPPacketReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetXMPPacket(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetXMPPacketReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetXMPPacket(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getXMPPacket"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getXMPPacket"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getXMPPacket"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetXMPPacket((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetXMPPacket((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetXMPPacket((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetXMPPacket(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetXMPPacket(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetXMPPacket(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetXMPPacket(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetXMPPacket(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetXMPPacket(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetXMPPacket(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetXMPPacket(f);
                            }
                        } else {
                            callback.receiveErrorgetXMPPacket(f);
                        }
                    } else {
                        callback.receiveErrorgetXMPPacket(f);
                    }
                } else {
                    callback.receiveErrorgetXMPPacket(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetXMPPacket(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[125].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[125].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param listCompanyMetadataParam73
     * @param authHeader74
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#listCompanyMetadata
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.ListCompanyMetadataReturn listCompanyMetadata(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ListCompanyMetadataParam listCompanyMetadataParam73,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader74)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[126].getName());
            _operationClient.getOptions().setAction("listCompanyMetadata");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    listCompanyMetadataParam73,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "listCompanyMetadata")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "listCompanyMetadata"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader74 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader74 = toOM(authHeader74,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "listCompanyMetadata")));
                addHeader(omElementauthHeader74, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.ListCompanyMetadataReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ListCompanyMetadataReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "listCompanyMetadata"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "listCompanyMetadata"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "listCompanyMetadata"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param listCompanyMetadataParam73
     * @param authHeader74
     * @see com.scene7.www.ipsapi.IpsApiService#startlistCompanyMetadata
     */
    public void startlistCompanyMetadata(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ListCompanyMetadataParam listCompanyMetadataParam73,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader74,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[126].getName());
        _operationClient.getOptions().setAction("listCompanyMetadata");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                listCompanyMetadataParam73,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "listCompanyMetadata")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "listCompanyMetadata"));

        // add the soap_headers only if they are not null
        if (authHeader74 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader74 = toOM(authHeader74,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "listCompanyMetadata")));
            addHeader(omElementauthHeader74, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ListCompanyMetadataReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultlistCompanyMetadata(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ListCompanyMetadataReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorlistCompanyMetadata(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "listCompanyMetadata"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "listCompanyMetadata"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "listCompanyMetadata"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorlistCompanyMetadata((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorlistCompanyMetadata((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorlistCompanyMetadata((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorlistCompanyMetadata(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorlistCompanyMetadata(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorlistCompanyMetadata(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorlistCompanyMetadata(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorlistCompanyMetadata(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorlistCompanyMetadata(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorlistCompanyMetadata(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorlistCompanyMetadata(f);
                            }
                        } else {
                            callback.receiveErrorlistCompanyMetadata(f);
                        }
                    } else {
                        callback.receiveErrorlistCompanyMetadata(f);
                    }
                } else {
                    callback.receiveErrorlistCompanyMetadata(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorlistCompanyMetadata(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[126].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[126].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getPhotoshopPathNamesParam76
     * @param authHeader77
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getPhotoshopPathNames
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathNamesReturn getPhotoshopPathNames(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathNamesParam getPhotoshopPathNamesParam76,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader77)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[127].getName());
            _operationClient.getOptions().setAction("getPhotoshopPathNames");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getPhotoshopPathNamesParam76,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getPhotoshopPathNames")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getPhotoshopPathNames"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader77 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader77 = toOM(authHeader77,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getPhotoshopPathNames")));
                addHeader(omElementauthHeader77, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathNamesReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathNamesReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPhotoshopPathNames"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPhotoshopPathNames"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPhotoshopPathNames"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getPhotoshopPathNamesParam76
     * @param authHeader77
     * @see com.scene7.www.ipsapi.IpsApiService#startgetPhotoshopPathNames
     */
    public void startgetPhotoshopPathNames(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathNamesParam getPhotoshopPathNamesParam76,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader77,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[127].getName());
        _operationClient.getOptions().setAction("getPhotoshopPathNames");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getPhotoshopPathNamesParam76,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getPhotoshopPathNames")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getPhotoshopPathNames"));

        // add the soap_headers only if they are not null
        if (authHeader77 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader77 = toOM(authHeader77,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getPhotoshopPathNames")));
            addHeader(omElementauthHeader77, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathNamesReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetPhotoshopPathNames(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathNamesReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetPhotoshopPathNames(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPhotoshopPathNames"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPhotoshopPathNames"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPhotoshopPathNames"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetPhotoshopPathNames((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetPhotoshopPathNames((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetPhotoshopPathNames((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetPhotoshopPathNames(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPhotoshopPathNames(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPhotoshopPathNames(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPhotoshopPathNames(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPhotoshopPathNames(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPhotoshopPathNames(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPhotoshopPathNames(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPhotoshopPathNames(f);
                            }
                        } else {
                            callback.receiveErrorgetPhotoshopPathNames(f);
                        }
                    } else {
                        callback.receiveErrorgetPhotoshopPathNames(f);
                    }
                } else {
                    callback.receiveErrorgetPhotoshopPathNames(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetPhotoshopPathNames(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[127].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[127].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getAssetsByNameParam79
     * @param authHeader80
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getAssetsByName
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsByNameReturn getAssetsByName(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsByNameParam getAssetsByNameParam79,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader80)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[128].getName());
            _operationClient.getOptions().setAction("getAssetsByName");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getAssetsByNameParam79,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAssetsByName")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getAssetsByName"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader80 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader80 = toOM(authHeader80,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssetsByName")));
                addHeader(omElementauthHeader80, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsByNameReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsByNameReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetsByName"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetsByName"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetsByName"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getAssetsByNameParam79
     * @param authHeader80
     * @see com.scene7.www.ipsapi.IpsApiService#startgetAssetsByName
     */
    public void startgetAssetsByName(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsByNameParam getAssetsByNameParam79,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader80,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[128].getName());
        _operationClient.getOptions().setAction("getAssetsByName");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getAssetsByNameParam79,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAssetsByName")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getAssetsByName"));

        // add the soap_headers only if they are not null
        if (authHeader80 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader80 = toOM(authHeader80,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getAssetsByName")));
            addHeader(omElementauthHeader80, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsByNameReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetAssetsByName(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsByNameReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetAssetsByName(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetsByName"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetsByName"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getAssetsByName"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetAssetsByName((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetAssetsByName((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetAssetsByName((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetAssetsByName(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetsByName(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetsByName(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetsByName(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetsByName(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetsByName(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetsByName(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetAssetsByName(f);
                            }
                        } else {
                            callback.receiveErrorgetAssetsByName(f);
                        }
                    } else {
                        callback.receiveErrorgetAssetsByName(f);
                    }
                } else {
                    callback.receiveErrorgetAssetsByName(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetAssetsByName(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[128].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[128].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param addUserParam82
     * @param authHeader83
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#addUser
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddUserReturn addUser(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddUserParam addUserParam82,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader83)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[129].getName());
            _operationClient.getOptions().setAction("addUser");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    addUserParam82,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "addUser")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "addUser"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader83 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader83 = toOM(authHeader83,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addUser")));
                addHeader(omElementauthHeader83, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddUserReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddUserReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addUser"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addUser"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addUser"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param addUserParam82
     * @param authHeader83
     * @see com.scene7.www.ipsapi.IpsApiService#startaddUser
     */
    public void startaddUser(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddUserParam addUserParam82,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader83,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[129].getName());
        _operationClient.getOptions().setAction("addUser");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                addUserParam82,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "addUser")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "addUser"));

        // add the soap_headers only if they are not null
        if (authHeader83 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader83 = toOM(authHeader83,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addUser")));
            addHeader(omElementauthHeader83, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddUserReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultaddUser(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddUserReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErroraddUser(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addUser"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addUser"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addUser"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErroraddUser((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErroraddUser((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErroraddUser((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErroraddUser(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddUser(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddUser(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddUser(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddUser(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddUser(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddUser(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddUser(f);
                            }
                        } else {
                            callback.receiveErroraddUser(f);
                        }
                    } else {
                        callback.receiveErroraddUser(f);
                    }
                } else {
                    callback.receiveErroraddUser(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErroraddUser(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[129].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[129].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setPropertySetPermissionsParam85
     * @param authHeader86
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setPropertySetPermissions
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPropertySetPermissionsReturn setPropertySetPermissions(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPropertySetPermissionsParam setPropertySetPermissionsParam85,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader86)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[130].getName());
            _operationClient.getOptions().setAction("setPropertySetPermissions");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setPropertySetPermissionsParam85,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setPropertySetPermissions")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setPropertySetPermissions"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader86 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader86 = toOM(authHeader86,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setPropertySetPermissions")));
                addHeader(omElementauthHeader86, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPropertySetPermissionsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPropertySetPermissionsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setPropertySetPermissions"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setPropertySetPermissions"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setPropertySetPermissions"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setPropertySetPermissionsParam85
     * @param authHeader86
     * @see com.scene7.www.ipsapi.IpsApiService#startsetPropertySetPermissions
     */
    public void startsetPropertySetPermissions(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPropertySetPermissionsParam setPropertySetPermissionsParam85,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader86,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[130].getName());
        _operationClient.getOptions().setAction("setPropertySetPermissions");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setPropertySetPermissionsParam85,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setPropertySetPermissions")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setPropertySetPermissions"));

        // add the soap_headers only if they are not null
        if (authHeader86 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader86 = toOM(authHeader86,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setPropertySetPermissions")));
            addHeader(omElementauthHeader86, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPropertySetPermissionsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetPropertySetPermissions(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPropertySetPermissionsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetPropertySetPermissions(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setPropertySetPermissions"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setPropertySetPermissions"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setPropertySetPermissions"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetPropertySetPermissions((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetPropertySetPermissions((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetPropertySetPermissions((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetPropertySetPermissions(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetPropertySetPermissions(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetPropertySetPermissions(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetPropertySetPermissions(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetPropertySetPermissions(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetPropertySetPermissions(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetPropertySetPermissions(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetPropertySetPermissions(f);
                            }
                        } else {
                            callback.receiveErrorsetPropertySetPermissions(f);
                        }
                    } else {
                        callback.receiveErrorsetPropertySetPermissions(f);
                    }
                } else {
                    callback.receiveErrorsetPropertySetPermissions(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetPropertySetPermissions(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[130].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[130].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param updateViewerConfigSettingsParam88
     * @param authHeader89
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#updateViewerConfigSettings
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateViewerConfigSettingsReturn updateViewerConfigSettings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateViewerConfigSettingsParam updateViewerConfigSettingsParam88,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader89)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[131].getName());
            _operationClient.getOptions().setAction("updateViewerConfigSettings");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    updateViewerConfigSettingsParam88,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateViewerConfigSettings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateViewerConfigSettings"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader89 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader89 = toOM(authHeader89,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateViewerConfigSettings")));
                addHeader(omElementauthHeader89, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateViewerConfigSettingsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateViewerConfigSettingsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateViewerConfigSettings"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateViewerConfigSettings"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateViewerConfigSettings"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param updateViewerConfigSettingsParam88
     * @param authHeader89
     * @see com.scene7.www.ipsapi.IpsApiService#startupdateViewerConfigSettings
     */
    public void startupdateViewerConfigSettings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateViewerConfigSettingsParam updateViewerConfigSettingsParam88,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader89,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[131].getName());
        _operationClient.getOptions().setAction("updateViewerConfigSettings");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                updateViewerConfigSettingsParam88,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateViewerConfigSettings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateViewerConfigSettings"));

        // add the soap_headers only if they are not null
        if (authHeader89 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader89 = toOM(authHeader89,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateViewerConfigSettings")));
            addHeader(omElementauthHeader89, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateViewerConfigSettingsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultupdateViewerConfigSettings(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateViewerConfigSettingsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorupdateViewerConfigSettings(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateViewerConfigSettings"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateViewerConfigSettings"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateViewerConfigSettings"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorupdateViewerConfigSettings(
                                            (com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorupdateViewerConfigSettings((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorupdateViewerConfigSettings((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorupdateViewerConfigSettings(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateViewerConfigSettings(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateViewerConfigSettings(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateViewerConfigSettings(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateViewerConfigSettings(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateViewerConfigSettings(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateViewerConfigSettings(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateViewerConfigSettings(f);
                            }
                        } else {
                            callback.receiveErrorupdateViewerConfigSettings(f);
                        }
                    } else {
                        callback.receiveErrorupdateViewerConfigSettings(f);
                    }
                } else {
                    callback.receiveErrorupdateViewerConfigSettings(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorupdateViewerConfigSettings(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[131].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[131].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param createPropertySetTypeParam91
     * @param authHeader92
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#createPropertySetType
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetTypeReturn createPropertySetType(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetTypeParam createPropertySetTypeParam91,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader92)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[132].getName());
            _operationClient.getOptions().setAction("createPropertySetType");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    createPropertySetTypeParam91,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createPropertySetType")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createPropertySetType"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader92 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader92 = toOM(authHeader92,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createPropertySetType")));
                addHeader(omElementauthHeader92, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetTypeReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetTypeReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createPropertySetType"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createPropertySetType"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createPropertySetType"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param createPropertySetTypeParam91
     * @param authHeader92
     * @see com.scene7.www.ipsapi.IpsApiService#startcreatePropertySetType
     */
    public void startcreatePropertySetType(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetTypeParam createPropertySetTypeParam91,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader92,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[132].getName());
        _operationClient.getOptions().setAction("createPropertySetType");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                createPropertySetTypeParam91,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createPropertySetType")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createPropertySetType"));

        // add the soap_headers only if they are not null
        if (authHeader92 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader92 = toOM(authHeader92,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createPropertySetType")));
            addHeader(omElementauthHeader92, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetTypeReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultcreatePropertySetType(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetTypeReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorcreatePropertySetType(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createPropertySetType"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createPropertySetType"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createPropertySetType"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorcreatePropertySetType((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorcreatePropertySetType((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorcreatePropertySetType((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorcreatePropertySetType(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreatePropertySetType(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreatePropertySetType(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreatePropertySetType(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreatePropertySetType(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreatePropertySetType(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreatePropertySetType(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreatePropertySetType(f);
                            }
                        } else {
                            callback.receiveErrorcreatePropertySetType(f);
                        }
                    } else {
                        callback.receiveErrorcreatePropertySetType(f);
                    }
                } else {
                    callback.receiveErrorcreatePropertySetType(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorcreatePropertySetType(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[132].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[132].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param deleteImageFormatParam94
     * @param authHeader95
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#deleteImageFormat
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageFormatReturn deleteImageFormat(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageFormatParam deleteImageFormatParam94,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader95)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[133].getName());
            _operationClient.getOptions().setAction("deleteImageFormat");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    deleteImageFormatParam94,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteImageFormat")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteImageFormat"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader95 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader95 = toOM(authHeader95,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteImageFormat")));
                addHeader(omElementauthHeader95, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageFormatReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageFormatReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteImageFormat"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteImageFormat"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteImageFormat"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param deleteImageFormatParam94
     * @param authHeader95
     * @see com.scene7.www.ipsapi.IpsApiService#startdeleteImageFormat
     */
    public void startdeleteImageFormat(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageFormatParam deleteImageFormatParam94,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader95,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[133].getName());
        _operationClient.getOptions().setAction("deleteImageFormat");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                deleteImageFormatParam94,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteImageFormat")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteImageFormat"));

        // add the soap_headers only if they are not null
        if (authHeader95 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader95 = toOM(authHeader95,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteImageFormat")));
            addHeader(omElementauthHeader95, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageFormatReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultdeleteImageFormat(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageFormatReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrordeleteImageFormat(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteImageFormat"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteImageFormat"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteImageFormat"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrordeleteImageFormat((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrordeleteImageFormat((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrordeleteImageFormat((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrordeleteImageFormat(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteImageFormat(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteImageFormat(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteImageFormat(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteImageFormat(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteImageFormat(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteImageFormat(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteImageFormat(f);
                            }
                        } else {
                            callback.receiveErrordeleteImageFormat(f);
                        }
                    } else {
                        callback.receiveErrordeleteImageFormat(f);
                    }
                } else {
                    callback.receiveErrordeleteImageFormat(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrordeleteImageFormat(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[133].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[133].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param deleteJobParam97
     * @param authHeader98
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#deleteJob
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteJobReturn deleteJob(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteJobParam deleteJobParam97,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader98)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[134].getName());
            _operationClient.getOptions().setAction("deleteJob");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    deleteJobParam97,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteJob")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteJob"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader98 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader98 = toOM(authHeader98,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteJob")));
                addHeader(omElementauthHeader98, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteJobReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteJobReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteJob"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteJob"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteJob"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param deleteJobParam97
     * @param authHeader98
     * @see com.scene7.www.ipsapi.IpsApiService#startdeleteJob
     */
    public void startdeleteJob(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteJobParam deleteJobParam97,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader98,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[134].getName());
        _operationClient.getOptions().setAction("deleteJob");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                deleteJobParam97,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteJob")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteJob"));

        // add the soap_headers only if they are not null
        if (authHeader98 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader98 = toOM(authHeader98,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteJob")));
            addHeader(omElementauthHeader98, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteJobReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultdeleteJob(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteJobReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrordeleteJob(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteJob"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteJob"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteJob"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrordeleteJob((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrordeleteJob((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrordeleteJob((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrordeleteJob(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteJob(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteJob(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteJob(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteJob(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteJob(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteJob(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteJob(f);
                            }
                        } else {
                            callback.receiveErrordeleteJob(f);
                        }
                    } else {
                        callback.receiveErrordeleteJob(f);
                    }
                } else {
                    callback.receiveErrordeleteJob(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrordeleteJob(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[134].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[134].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setAssetPermissionsParam100
     * @param authHeader101
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setAssetPermissions
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPermissionsReturn setAssetPermissions(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPermissionsParam setAssetPermissionsParam100,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader101)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[135].getName());
            _operationClient.getOptions().setAction("setAssetPermissions");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setAssetPermissionsParam100,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setAssetPermissions")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setAssetPermissions"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader101 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader101 = toOM(authHeader101,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setAssetPermissions")));
                addHeader(omElementauthHeader101, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPermissionsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPermissionsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetPermissions"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetPermissions"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetPermissions"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setAssetPermissionsParam100
     * @param authHeader101
     * @see com.scene7.www.ipsapi.IpsApiService#startsetAssetPermissions
     */
    public void startsetAssetPermissions(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPermissionsParam setAssetPermissionsParam100,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader101,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[135].getName());
        _operationClient.getOptions().setAction("setAssetPermissions");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setAssetPermissionsParam100,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setAssetPermissions")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setAssetPermissions"));

        // add the soap_headers only if they are not null
        if (authHeader101 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader101 = toOM(authHeader101,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setAssetPermissions")));
            addHeader(omElementauthHeader101, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPermissionsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetAssetPermissions(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPermissionsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetAssetPermissions(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetPermissions"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetPermissions"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetPermissions"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetAssetPermissions((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetAssetPermissions((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetAssetPermissions((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetAssetPermissions(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetPermissions(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetPermissions(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetPermissions(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetPermissions(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetPermissions(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetPermissions(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetPermissions(f);
                            }
                        } else {
                            callback.receiveErrorsetAssetPermissions(f);
                        }
                    } else {
                        callback.receiveErrorsetAssetPermissions(f);
                    }
                } else {
                    callback.receiveErrorsetAssetPermissions(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetAssetPermissions(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[135].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[135].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param updateVignettePublishFormatParam103
     * @param authHeader104
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#updateVignettePublishFormat
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateVignettePublishFormatReturn updateVignettePublishFormat(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateVignettePublishFormatParam updateVignettePublishFormatParam103,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader104)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[136].getName());
            _operationClient.getOptions().setAction("updateVignettePublishFormat");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    updateVignettePublishFormatParam103,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateVignettePublishFormat")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateVignettePublishFormat"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader104 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader104 = toOM(authHeader104,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateVignettePublishFormat")));
                addHeader(omElementauthHeader104, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateVignettePublishFormatReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateVignettePublishFormatReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateVignettePublishFormat"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateVignettePublishFormat"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateVignettePublishFormat"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param updateVignettePublishFormatParam103
     * @param authHeader104
     * @see com.scene7.www.ipsapi.IpsApiService#startupdateVignettePublishFormat
     */
    public void startupdateVignettePublishFormat(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateVignettePublishFormatParam updateVignettePublishFormatParam103,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader104,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[136].getName());
        _operationClient.getOptions().setAction("updateVignettePublishFormat");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                updateVignettePublishFormatParam103,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateVignettePublishFormat")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateVignettePublishFormat"));

        // add the soap_headers only if they are not null
        if (authHeader104 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader104 = toOM(authHeader104,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateVignettePublishFormat")));
            addHeader(omElementauthHeader104, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateVignettePublishFormatReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultupdateVignettePublishFormat(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateVignettePublishFormatReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorupdateVignettePublishFormat(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateVignettePublishFormat"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateVignettePublishFormat"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateVignettePublishFormat"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorupdateVignettePublishFormat(
                                            (com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorupdateVignettePublishFormat((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorupdateVignettePublishFormat(
                                            (com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorupdateVignettePublishFormat(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateVignettePublishFormat(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateVignettePublishFormat(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateVignettePublishFormat(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateVignettePublishFormat(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateVignettePublishFormat(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateVignettePublishFormat(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateVignettePublishFormat(f);
                            }
                        } else {
                            callback.receiveErrorupdateVignettePublishFormat(f);
                        }
                    } else {
                        callback.receiveErrorupdateVignettePublishFormat(f);
                    }
                } else {
                    callback.receiveErrorupdateVignettePublishFormat(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorupdateVignettePublishFormat(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[136].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[136].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param removeGroupMembersParam106
     * @param authHeader107
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#removeGroupMembers
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembersReturn removeGroupMembers(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembersParam removeGroupMembersParam106,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader107)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[137].getName());
            _operationClient.getOptions().setAction("removeGroupMembers");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    removeGroupMembersParam106,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "removeGroupMembers")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "removeGroupMembers"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader107 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader107 = toOM(authHeader107,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeGroupMembers")));
                addHeader(omElementauthHeader107, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembersReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembersReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeGroupMembers"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeGroupMembers"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeGroupMembers"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param removeGroupMembersParam106
     * @param authHeader107
     * @see com.scene7.www.ipsapi.IpsApiService#startremoveGroupMembers
     */
    public void startremoveGroupMembers(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembersParam removeGroupMembersParam106,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader107,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[137].getName());
        _operationClient.getOptions().setAction("removeGroupMembers");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                removeGroupMembersParam106,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "removeGroupMembers")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "removeGroupMembers"));

        // add the soap_headers only if they are not null
        if (authHeader107 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader107 = toOM(authHeader107,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeGroupMembers")));
            addHeader(omElementauthHeader107, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembersReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultremoveGroupMembers(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembersReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorremoveGroupMembers(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeGroupMembers"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeGroupMembers"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeGroupMembers"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorremoveGroupMembers((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorremoveGroupMembers((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorremoveGroupMembers((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorremoveGroupMembers(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveGroupMembers(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveGroupMembers(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveGroupMembers(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveGroupMembers(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveGroupMembers(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveGroupMembers(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveGroupMembers(f);
                            }
                        } else {
                            callback.receiveErrorremoveGroupMembers(f);
                        }
                    } else {
                        callback.receiveErrorremoveGroupMembers(f);
                    }
                } else {
                    callback.receiveErrorremoveGroupMembers(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorremoveGroupMembers(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[137].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[137].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getMetadataFieldsParam109
     * @param authHeader110
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getMetadataFields
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataFieldsReturn getMetadataFields(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataFieldsParam getMetadataFieldsParam109,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader110)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[138].getName());
            _operationClient.getOptions().setAction("getMetadataFields");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getMetadataFieldsParam109,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getMetadataFields")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getMetadataFields"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader110 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader110 = toOM(authHeader110,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getMetadataFields")));
                addHeader(omElementauthHeader110, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataFieldsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataFieldsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMetadataFields"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMetadataFields"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMetadataFields"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getMetadataFieldsParam109
     * @param authHeader110
     * @see com.scene7.www.ipsapi.IpsApiService#startgetMetadataFields
     */
    public void startgetMetadataFields(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataFieldsParam getMetadataFieldsParam109,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader110,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[138].getName());
        _operationClient.getOptions().setAction("getMetadataFields");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getMetadataFieldsParam109,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getMetadataFields")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getMetadataFields"));

        // add the soap_headers only if they are not null
        if (authHeader110 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader110 = toOM(authHeader110,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getMetadataFields")));
            addHeader(omElementauthHeader110, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataFieldsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetMetadataFields(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataFieldsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetMetadataFields(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMetadataFields"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMetadataFields"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMetadataFields"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetMetadataFields((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetMetadataFields((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetMetadataFields((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetMetadataFields(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataFields(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataFields(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataFields(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataFields(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataFields(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataFields(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataFields(f);
                            }
                        } else {
                            callback.receiveErrorgetMetadataFields(f);
                        }
                    } else {
                        callback.receiveErrorgetMetadataFields(f);
                    }
                } else {
                    callback.receiveErrorgetMetadataFields(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetMetadataFields(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[138].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[138].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getVignettePublishFormatsParam112
     * @param authHeader113
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getVignettePublishFormats
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetVignettePublishFormatsReturn getVignettePublishFormats(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetVignettePublishFormatsParam getVignettePublishFormatsParam112,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader113)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[139].getName());
            _operationClient.getOptions().setAction("getVignettePublishFormats");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getVignettePublishFormatsParam112,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getVignettePublishFormats")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getVignettePublishFormats"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader113 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader113 = toOM(authHeader113,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getVignettePublishFormats")));
                addHeader(omElementauthHeader113, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetVignettePublishFormatsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetVignettePublishFormatsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getVignettePublishFormats"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getVignettePublishFormats"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getVignettePublishFormats"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getVignettePublishFormatsParam112
     * @param authHeader113
     * @see com.scene7.www.ipsapi.IpsApiService#startgetVignettePublishFormats
     */
    public void startgetVignettePublishFormats(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetVignettePublishFormatsParam getVignettePublishFormatsParam112,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader113,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[139].getName());
        _operationClient.getOptions().setAction("getVignettePublishFormats");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getVignettePublishFormatsParam112,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getVignettePublishFormats")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getVignettePublishFormats"));

        // add the soap_headers only if they are not null
        if (authHeader113 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader113 = toOM(authHeader113,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getVignettePublishFormats")));
            addHeader(omElementauthHeader113, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetVignettePublishFormatsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetVignettePublishFormats(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetVignettePublishFormatsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetVignettePublishFormats(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getVignettePublishFormats"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getVignettePublishFormats"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getVignettePublishFormats"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetVignettePublishFormats((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetVignettePublishFormats((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetVignettePublishFormats((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetVignettePublishFormats(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetVignettePublishFormats(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetVignettePublishFormats(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetVignettePublishFormats(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetVignettePublishFormats(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetVignettePublishFormats(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetVignettePublishFormats(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetVignettePublishFormats(f);
                            }
                        } else {
                            callback.receiveErrorgetVignettePublishFormats(f);
                        }
                    } else {
                        callback.receiveErrorgetVignettePublishFormats(f);
                    }
                } else {
                    callback.receiveErrorgetVignettePublishFormats(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetVignettePublishFormats(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[139].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[139].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param saveMetadataFieldParam115
     * @param authHeader116
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#saveMetadataField
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataFieldReturn saveMetadataField(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataFieldParam saveMetadataFieldParam115,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader116)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[140].getName());
            _operationClient.getOptions().setAction("saveMetadataField");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    saveMetadataFieldParam115,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "saveMetadataField")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "saveMetadataField"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader116 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader116 = toOM(authHeader116,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "saveMetadataField")));
                addHeader(omElementauthHeader116, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataFieldReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataFieldReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveMetadataField"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveMetadataField"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveMetadataField"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param saveMetadataFieldParam115
     * @param authHeader116
     * @see com.scene7.www.ipsapi.IpsApiService#startsaveMetadataField
     */
    public void startsaveMetadataField(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataFieldParam saveMetadataFieldParam115,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader116,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[140].getName());
        _operationClient.getOptions().setAction("saveMetadataField");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                saveMetadataFieldParam115,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "saveMetadataField")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "saveMetadataField"));

        // add the soap_headers only if they are not null
        if (authHeader116 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader116 = toOM(authHeader116,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "saveMetadataField")));
            addHeader(omElementauthHeader116, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataFieldReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsaveMetadataField(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataFieldReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsaveMetadataField(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveMetadataField"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveMetadataField"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveMetadataField"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsaveMetadataField((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsaveMetadataField((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsaveMetadataField((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsaveMetadataField(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveMetadataField(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveMetadataField(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveMetadataField(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveMetadataField(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveMetadataField(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveMetadataField(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveMetadataField(f);
                            }
                        } else {
                            callback.receiveErrorsaveMetadataField(f);
                        }
                    } else {
                        callback.receiveErrorsaveMetadataField(f);
                    }
                } else {
                    callback.receiveErrorsaveMetadataField(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsaveMetadataField(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[140].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[140].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param addCompanyMembershipParam118
     * @param authHeader119
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#addCompanyMembership
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyMembershipReturn addCompanyMembership(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyMembershipParam addCompanyMembershipParam118,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader119)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[141].getName());
            _operationClient.getOptions().setAction("addCompanyMembership");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    addCompanyMembershipParam118,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "addCompanyMembership")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "addCompanyMembership"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader119 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader119 = toOM(authHeader119,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addCompanyMembership")));
                addHeader(omElementauthHeader119, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyMembershipReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyMembershipReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addCompanyMembership"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addCompanyMembership"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addCompanyMembership"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param addCompanyMembershipParam118
     * @param authHeader119
     * @see com.scene7.www.ipsapi.IpsApiService#startaddCompanyMembership
     */
    public void startaddCompanyMembership(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyMembershipParam addCompanyMembershipParam118,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader119,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[141].getName());
        _operationClient.getOptions().setAction("addCompanyMembership");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                addCompanyMembershipParam118,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "addCompanyMembership")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "addCompanyMembership"));

        // add the soap_headers only if they are not null
        if (authHeader119 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader119 = toOM(authHeader119,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addCompanyMembership")));
            addHeader(omElementauthHeader119, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyMembershipReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultaddCompanyMembership(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyMembershipReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErroraddCompanyMembership(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addCompanyMembership"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addCompanyMembership"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addCompanyMembership"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErroraddCompanyMembership((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErroraddCompanyMembership((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErroraddCompanyMembership((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErroraddCompanyMembership(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddCompanyMembership(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddCompanyMembership(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddCompanyMembership(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddCompanyMembership(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddCompanyMembership(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddCompanyMembership(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddCompanyMembership(f);
                            }
                        } else {
                            callback.receiveErroraddCompanyMembership(f);
                        }
                    } else {
                        callback.receiveErroraddCompanyMembership(f);
                    }
                } else {
                    callback.receiveErroraddCompanyMembership(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErroraddCompanyMembership(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[141].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[141].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setAssetMetadataParam121
     * @param authHeader122
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setAssetMetadata
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetMetadataReturn setAssetMetadata(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetMetadataParam setAssetMetadataParam121,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader122)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[142].getName());
            _operationClient.getOptions().setAction("setAssetMetadata");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setAssetMetadataParam121,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setAssetMetadata")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setAssetMetadata"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader122 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader122 = toOM(authHeader122,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setAssetMetadata")));
                addHeader(omElementauthHeader122, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetMetadataReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetMetadataReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetMetadata"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetMetadata"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetMetadata"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setAssetMetadataParam121
     * @param authHeader122
     * @see com.scene7.www.ipsapi.IpsApiService#startsetAssetMetadata
     */
    public void startsetAssetMetadata(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetMetadataParam setAssetMetadataParam121,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader122,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[142].getName());
        _operationClient.getOptions().setAction("setAssetMetadata");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setAssetMetadataParam121,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setAssetMetadata")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setAssetMetadata"));

        // add the soap_headers only if they are not null
        if (authHeader122 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader122 = toOM(authHeader122,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setAssetMetadata")));
            addHeader(omElementauthHeader122, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetMetadataReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetAssetMetadata(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetMetadataReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetAssetMetadata(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetMetadata"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetMetadata"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetMetadata"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetAssetMetadata((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetAssetMetadata((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetAssetMetadata((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetAssetMetadata(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetMetadata(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetMetadata(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetMetadata(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetMetadata(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetMetadata(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetMetadata(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetMetadata(f);
                            }
                        } else {
                            callback.receiveErrorsetAssetMetadata(f);
                        }
                    } else {
                        callback.receiveErrorsetAssetMetadata(f);
                    }
                } else {
                    callback.receiveErrorsetAssetMetadata(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetAssetMetadata(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[142].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[142].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param moveAssetParam124
     * @param authHeader125
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#moveAsset
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetReturn moveAsset(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetParam moveAssetParam124,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader125)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[143].getName());
            _operationClient.getOptions().setAction("moveAsset");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    moveAssetParam124,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "moveAsset")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "moveAsset"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader125 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader125 = toOM(authHeader125,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "moveAsset")));
                addHeader(omElementauthHeader125, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "moveAsset"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "moveAsset"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "moveAsset"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param moveAssetParam124
     * @param authHeader125
     * @see com.scene7.www.ipsapi.IpsApiService#startmoveAsset
     */
    public void startmoveAsset(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetParam moveAssetParam124,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader125,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[143].getName());
        _operationClient.getOptions().setAction("moveAsset");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                moveAssetParam124,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "moveAsset")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "moveAsset"));

        // add the soap_headers only if they are not null
        if (authHeader125 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader125 = toOM(authHeader125,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "moveAsset")));
            addHeader(omElementauthHeader125, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultmoveAsset(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrormoveAsset(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "moveAsset"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "moveAsset"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "moveAsset"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrormoveAsset((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrormoveAsset((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrormoveAsset((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrormoveAsset(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveAsset(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveAsset(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveAsset(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveAsset(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveAsset(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveAsset(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveAsset(f);
                            }
                        } else {
                            callback.receiveErrormoveAsset(f);
                        }
                    } else {
                        callback.receiveErrormoveAsset(f);
                    }
                } else {
                    callback.receiveErrormoveAsset(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrormoveAsset(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[143].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[143].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param createMetadataFieldParam127
     * @param authHeader128
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#createMetadataField
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateMetadataFieldReturn createMetadataField(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateMetadataFieldParam createMetadataFieldParam127,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader128)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[144].getName());
            _operationClient.getOptions().setAction("createMetadataField");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    createMetadataFieldParam127,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createMetadataField")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createMetadataField"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader128 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader128 = toOM(authHeader128,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createMetadataField")));
                addHeader(omElementauthHeader128, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateMetadataFieldReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateMetadataFieldReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createMetadataField"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createMetadataField"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createMetadataField"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param createMetadataFieldParam127
     * @param authHeader128
     * @see com.scene7.www.ipsapi.IpsApiService#startcreateMetadataField
     */
    public void startcreateMetadataField(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateMetadataFieldParam createMetadataFieldParam127,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader128,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[144].getName());
        _operationClient.getOptions().setAction("createMetadataField");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                createMetadataFieldParam127,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createMetadataField")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createMetadataField"));

        // add the soap_headers only if they are not null
        if (authHeader128 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader128 = toOM(authHeader128,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createMetadataField")));
            addHeader(omElementauthHeader128, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateMetadataFieldReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultcreateMetadataField(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateMetadataFieldReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorcreateMetadataField(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createMetadataField"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createMetadataField"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createMetadataField"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorcreateMetadataField((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorcreateMetadataField((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorcreateMetadataField((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorcreateMetadataField(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateMetadataField(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateMetadataField(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateMetadataField(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateMetadataField(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateMetadataField(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateMetadataField(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateMetadataField(f);
                            }
                        } else {
                            callback.receiveErrorcreateMetadataField(f);
                        }
                    } else {
                        callback.receiveErrorcreateMetadataField(f);
                    }
                } else {
                    callback.receiveErrorcreateMetadataField(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorcreateMetadataField(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[144].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[144].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param createFolderParam130
     * @param authHeader131
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#createFolder
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateFolderReturn createFolder(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateFolderParam createFolderParam130,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader131)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[145].getName());
            _operationClient.getOptions().setAction("createFolder");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    createFolderParam130,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createFolder")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createFolder"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader131 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader131 = toOM(authHeader131,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createFolder")));
                addHeader(omElementauthHeader131, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateFolderReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateFolderReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createFolder"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createFolder"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createFolder"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param createFolderParam130
     * @param authHeader131
     * @see com.scene7.www.ipsapi.IpsApiService#startcreateFolder
     */
    public void startcreateFolder(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateFolderParam createFolderParam130,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader131,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[145].getName());
        _operationClient.getOptions().setAction("createFolder");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                createFolderParam130,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createFolder")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createFolder"));

        // add the soap_headers only if they are not null
        if (authHeader131 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader131 = toOM(authHeader131,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createFolder")));
            addHeader(omElementauthHeader131, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateFolderReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultcreateFolder(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateFolderReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorcreateFolder(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createFolder"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createFolder"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createFolder"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorcreateFolder((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorcreateFolder((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorcreateFolder((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorcreateFolder(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateFolder(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateFolder(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateFolder(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateFolder(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateFolder(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateFolder(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateFolder(f);
                            }
                        } else {
                            callback.receiveErrorcreateFolder(f);
                        }
                    } else {
                        callback.receiveErrorcreateFolder(f);
                    }
                } else {
                    callback.receiveErrorcreateFolder(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorcreateFolder(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[145].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[145].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getFoldersParam133
     * @param authHeader134
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getFolders
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFoldersReturn getFolders(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFoldersParam getFoldersParam133,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader134)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[146].getName());
            _operationClient.getOptions().setAction("getFolders");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getFoldersParam133,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getFolders")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getFolders"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader134 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader134 = toOM(authHeader134,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getFolders")));
                addHeader(omElementauthHeader134, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFoldersReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFoldersReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getFolders"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getFolders"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getFolders"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getFoldersParam133
     * @param authHeader134
     * @see com.scene7.www.ipsapi.IpsApiService#startgetFolders
     */
    public void startgetFolders(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFoldersParam getFoldersParam133,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader134,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[146].getName());
        _operationClient.getOptions().setAction("getFolders");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getFoldersParam133,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getFolders")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getFolders"));

        // add the soap_headers only if they are not null
        if (authHeader134 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader134 = toOM(authHeader134,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getFolders")));
            addHeader(omElementauthHeader134, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFoldersReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetFolders(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFoldersReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetFolders(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getFolders"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getFolders"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getFolders"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetFolders((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetFolders((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetFolders((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetFolders(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetFolders(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetFolders(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetFolders(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetFolders(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetFolders(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetFolders(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetFolders(f);
                            }
                        } else {
                            callback.receiveErrorgetFolders(f);
                        }
                    } else {
                        callback.receiveErrorgetFolders(f);
                    }
                } else {
                    callback.receiveErrorgetFolders(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetFolders(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[146].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[146].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getCompanyMembersParam136
     * @param authHeader137
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getCompanyMembers
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembersReturn getCompanyMembers(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembersParam getCompanyMembersParam136,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader137)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[147].getName());
            _operationClient.getOptions().setAction("getCompanyMembers");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getCompanyMembersParam136,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getCompanyMembers")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getCompanyMembers"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader137 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader137 = toOM(authHeader137,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getCompanyMembers")));
                addHeader(omElementauthHeader137, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembersReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembersReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyMembers"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyMembers"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyMembers"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getCompanyMembersParam136
     * @param authHeader137
     * @see com.scene7.www.ipsapi.IpsApiService#startgetCompanyMembers
     */
    public void startgetCompanyMembers(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembersParam getCompanyMembersParam136,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader137,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[147].getName());
        _operationClient.getOptions().setAction("getCompanyMembers");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getCompanyMembersParam136,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getCompanyMembers")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getCompanyMembers"));

        // add the soap_headers only if they are not null
        if (authHeader137 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader137 = toOM(authHeader137,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getCompanyMembers")));
            addHeader(omElementauthHeader137, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembersReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetCompanyMembers(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembersReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetCompanyMembers(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyMembers"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyMembers"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getCompanyMembers"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetCompanyMembers((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetCompanyMembers((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetCompanyMembers((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetCompanyMembers(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMembers(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMembers(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMembers(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMembers(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMembers(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMembers(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetCompanyMembers(f);
                            }
                        } else {
                            callback.receiveErrorgetCompanyMembers(f);
                        }
                    } else {
                        callback.receiveErrorgetCompanyMembers(f);
                    }
                } else {
                    callback.receiveErrorgetCompanyMembers(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetCompanyMembers(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[147].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[147].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param generatePasswordParam139
     * @param authHeader140
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#generatePassword
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GeneratePasswordReturn generatePassword(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GeneratePasswordParam generatePasswordParam139,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader140)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[148].getName());
            _operationClient.getOptions().setAction("generatePassword");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    generatePasswordParam139,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "generatePassword")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "generatePassword"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader140 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader140 = toOM(authHeader140,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "generatePassword")));
                addHeader(omElementauthHeader140, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GeneratePasswordReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GeneratePasswordReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "generatePassword"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "generatePassword"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "generatePassword"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param generatePasswordParam139
     * @param authHeader140
     * @see com.scene7.www.ipsapi.IpsApiService#startgeneratePassword
     */
    public void startgeneratePassword(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GeneratePasswordParam generatePasswordParam139,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader140,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[148].getName());
        _operationClient.getOptions().setAction("generatePassword");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                generatePasswordParam139,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "generatePassword")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "generatePassword"));

        // add the soap_headers only if they are not null
        if (authHeader140 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader140 = toOM(authHeader140,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "generatePassword")));
            addHeader(omElementauthHeader140, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GeneratePasswordReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgeneratePassword(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GeneratePasswordReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgeneratePassword(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "generatePassword"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "generatePassword"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "generatePassword"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgeneratePassword((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgeneratePassword((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgeneratePassword((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgeneratePassword(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgeneratePassword(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgeneratePassword(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgeneratePassword(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgeneratePassword(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgeneratePassword(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgeneratePassword(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgeneratePassword(f);
                            }
                        } else {
                            callback.receiveErrorgeneratePassword(f);
                        }
                    } else {
                        callback.receiveErrorgeneratePassword(f);
                    }
                } else {
                    callback.receiveErrorgeneratePassword(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgeneratePassword(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[148].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[148].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getGroupsParam142
     * @param authHeader143
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getGroups
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupsReturn getGroups(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupsParam getGroupsParam142,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader143)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[149].getName());
            _operationClient.getOptions().setAction("getGroups");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getGroupsParam142,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getGroups")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getGroups"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader143 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader143 = toOM(authHeader143,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getGroups")));
                addHeader(omElementauthHeader143, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGroups"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGroups"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGroups"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getGroupsParam142
     * @param authHeader143
     * @see com.scene7.www.ipsapi.IpsApiService#startgetGroups
     */
    public void startgetGroups(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupsParam getGroupsParam142,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader143,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[149].getName());
        _operationClient.getOptions().setAction("getGroups");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getGroupsParam142,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getGroups")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getGroups"));

        // add the soap_headers only if they are not null
        if (authHeader143 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader143 = toOM(authHeader143,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getGroups")));
            addHeader(omElementauthHeader143, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetGroups(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetGroups(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGroups"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGroups"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGroups"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetGroups((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetGroups((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetGroups((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetGroups(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroups(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroups(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroups(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroups(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroups(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroups(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroups(f);
                            }
                        } else {
                            callback.receiveErrorgetGroups(f);
                        }
                    } else {
                        callback.receiveErrorgetGroups(f);
                    }
                } else {
                    callback.receiveErrorgetGroups(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetGroups(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[149].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[149].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param deleteCompanyMetadataParam145
     * @param authHeader146
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#deleteCompanyMetadata
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteCompanyMetadataReturn deleteCompanyMetadata(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteCompanyMetadataParam deleteCompanyMetadataParam145,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader146)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[150].getName());
            _operationClient.getOptions().setAction("deleteCompanyMetadata");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    deleteCompanyMetadataParam145,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteCompanyMetadata")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteCompanyMetadata"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader146 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader146 = toOM(authHeader146,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteCompanyMetadata")));
                addHeader(omElementauthHeader146, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteCompanyMetadataReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteCompanyMetadataReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteCompanyMetadata"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteCompanyMetadata"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteCompanyMetadata"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param deleteCompanyMetadataParam145
     * @param authHeader146
     * @see com.scene7.www.ipsapi.IpsApiService#startdeleteCompanyMetadata
     */
    public void startdeleteCompanyMetadata(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteCompanyMetadataParam deleteCompanyMetadataParam145,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader146,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[150].getName());
        _operationClient.getOptions().setAction("deleteCompanyMetadata");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                deleteCompanyMetadataParam145,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteCompanyMetadata")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteCompanyMetadata"));

        // add the soap_headers only if they are not null
        if (authHeader146 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader146 = toOM(authHeader146,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteCompanyMetadata")));
            addHeader(omElementauthHeader146, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteCompanyMetadataReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultdeleteCompanyMetadata(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteCompanyMetadataReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrordeleteCompanyMetadata(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteCompanyMetadata"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteCompanyMetadata"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteCompanyMetadata"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrordeleteCompanyMetadata((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrordeleteCompanyMetadata((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrordeleteCompanyMetadata((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrordeleteCompanyMetadata(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteCompanyMetadata(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteCompanyMetadata(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteCompanyMetadata(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteCompanyMetadata(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteCompanyMetadata(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteCompanyMetadata(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteCompanyMetadata(f);
                            }
                        } else {
                            callback.receiveErrordeleteCompanyMetadata(f);
                        }
                    } else {
                        callback.receiveErrordeleteCompanyMetadata(f);
                    }
                } else {
                    callback.receiveErrordeleteCompanyMetadata(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrordeleteCompanyMetadata(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[150].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[150].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param addGroupMembersParam148
     * @param authHeader149
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#addGroupMembers
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembersReturn addGroupMembers(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembersParam addGroupMembersParam148,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader149)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[151].getName());
            _operationClient.getOptions().setAction("addGroupMembers");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    addGroupMembersParam148,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "addGroupMembers")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "addGroupMembers"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader149 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader149 = toOM(authHeader149,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addGroupMembers")));
                addHeader(omElementauthHeader149, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembersReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembersReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addGroupMembers"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addGroupMembers"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addGroupMembers"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param addGroupMembersParam148
     * @param authHeader149
     * @see com.scene7.www.ipsapi.IpsApiService#startaddGroupMembers
     */
    public void startaddGroupMembers(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembersParam addGroupMembersParam148,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader149,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[151].getName());
        _operationClient.getOptions().setAction("addGroupMembers");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                addGroupMembersParam148,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "addGroupMembers")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "addGroupMembers"));

        // add the soap_headers only if they are not null
        if (authHeader149 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader149 = toOM(authHeader149,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addGroupMembers")));
            addHeader(omElementauthHeader149, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembersReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultaddGroupMembers(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembersReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErroraddGroupMembers(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addGroupMembers"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addGroupMembers"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addGroupMembers"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErroraddGroupMembers((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErroraddGroupMembers((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErroraddGroupMembers((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErroraddGroupMembers(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddGroupMembers(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddGroupMembers(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddGroupMembers(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddGroupMembers(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddGroupMembers(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddGroupMembers(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddGroupMembers(f);
                            }
                        } else {
                            callback.receiveErroraddGroupMembers(f);
                        }
                    } else {
                        callback.receiveErroraddGroupMembers(f);
                    }
                } else {
                    callback.receiveErroraddGroupMembers(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErroraddGroupMembers(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[151].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[151].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param updateTagFieldValuesParam151
     * @param authHeader152
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#updateTagFieldValues
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateTagFieldValuesReturn updateTagFieldValues(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateTagFieldValuesParam updateTagFieldValuesParam151,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader152)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[152].getName());
            _operationClient.getOptions().setAction("updateTagFieldValues");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    updateTagFieldValuesParam151,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateTagFieldValues")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateTagFieldValues"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader152 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader152 = toOM(authHeader152,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateTagFieldValues")));
                addHeader(omElementauthHeader152, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateTagFieldValuesReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateTagFieldValuesReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateTagFieldValues"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateTagFieldValues"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateTagFieldValues"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param updateTagFieldValuesParam151
     * @param authHeader152
     * @see com.scene7.www.ipsapi.IpsApiService#startupdateTagFieldValues
     */
    public void startupdateTagFieldValues(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateTagFieldValuesParam updateTagFieldValuesParam151,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader152,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[152].getName());
        _operationClient.getOptions().setAction("updateTagFieldValues");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                updateTagFieldValuesParam151,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateTagFieldValues")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateTagFieldValues"));

        // add the soap_headers only if they are not null
        if (authHeader152 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader152 = toOM(authHeader152,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateTagFieldValues")));
            addHeader(omElementauthHeader152, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateTagFieldValuesReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultupdateTagFieldValues(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateTagFieldValuesReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorupdateTagFieldValues(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateTagFieldValues"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateTagFieldValues"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateTagFieldValues"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorupdateTagFieldValues((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorupdateTagFieldValues((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorupdateTagFieldValues((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorupdateTagFieldValues(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateTagFieldValues(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateTagFieldValues(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateTagFieldValues(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateTagFieldValues(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateTagFieldValues(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateTagFieldValues(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateTagFieldValues(f);
                            }
                        } else {
                            callback.receiveErrorupdateTagFieldValues(f);
                        }
                    } else {
                        callback.receiveErrorupdateTagFieldValues(f);
                    }
                } else {
                    callback.receiveErrorupdateTagFieldValues(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorupdateTagFieldValues(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[152].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[152].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getProjectsParam154
     * @param authHeader155
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getProjects
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetProjectsReturn getProjects(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetProjectsParam getProjectsParam154,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader155)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[153].getName());
            _operationClient.getOptions().setAction("getProjects");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getProjectsParam154,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getProjects")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getProjects"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader155 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader155 = toOM(authHeader155,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getProjects")));
                addHeader(omElementauthHeader155, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetProjectsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetProjectsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getProjects"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getProjects"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getProjects"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getProjectsParam154
     * @param authHeader155
     * @see com.scene7.www.ipsapi.IpsApiService#startgetProjects
     */
    public void startgetProjects(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetProjectsParam getProjectsParam154,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader155,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[153].getName());
        _operationClient.getOptions().setAction("getProjects");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getProjectsParam154,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getProjects")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getProjects"));

        // add the soap_headers only if they are not null
        if (authHeader155 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader155 = toOM(authHeader155,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getProjects")));
            addHeader(omElementauthHeader155, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetProjectsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetProjects(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetProjectsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetProjects(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getProjects"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getProjects"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getProjects"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetProjects((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetProjects((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetProjects((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetProjects(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProjects(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProjects(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProjects(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProjects(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProjects(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProjects(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProjects(f);
                            }
                        } else {
                            callback.receiveErrorgetProjects(f);
                        }
                    } else {
                        callback.receiveErrorgetProjects(f);
                    }
                } else {
                    callback.receiveErrorgetProjects(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetProjects(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[153].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[153].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param saveGroupParam157
     * @param authHeader158
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#saveGroup
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveGroupReturn saveGroup(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveGroupParam saveGroupParam157,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader158)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[154].getName());
            _operationClient.getOptions().setAction("saveGroup");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    saveGroupParam157,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "saveGroup")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "saveGroup"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader158 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader158 = toOM(authHeader158,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "saveGroup")));
                addHeader(omElementauthHeader158, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveGroupReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveGroupReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveGroup"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveGroup"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveGroup"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param saveGroupParam157
     * @param authHeader158
     * @see com.scene7.www.ipsapi.IpsApiService#startsaveGroup
     */
    public void startsaveGroup(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveGroupParam saveGroupParam157,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader158,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[154].getName());
        _operationClient.getOptions().setAction("saveGroup");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                saveGroupParam157,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "saveGroup")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "saveGroup"));

        // add the soap_headers only if they are not null
        if (authHeader158 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader158 = toOM(authHeader158,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "saveGroup")));
            addHeader(omElementauthHeader158, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveGroupReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsaveGroup(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveGroupReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsaveGroup(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveGroup"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveGroup"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "saveGroup"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsaveGroup((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsaveGroup((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsaveGroup((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsaveGroup(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveGroup(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveGroup(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveGroup(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveGroup(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveGroup(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveGroup(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsaveGroup(f);
                            }
                        } else {
                            callback.receiveErrorsaveGroup(f);
                        }
                    } else {
                        callback.receiveErrorsaveGroup(f);
                    }
                } else {
                    callback.receiveErrorsaveGroup(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsaveGroup(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[154].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[154].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param updateAssetSetParam160
     * @param authHeader161
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#updateAssetSet
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetSetReturn updateAssetSet(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetSetParam updateAssetSetParam160,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader161)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[155].getName());
            _operationClient.getOptions().setAction("updateAssetSet");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    updateAssetSetParam160,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateAssetSet")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "updateAssetSet"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader161 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader161 = toOM(authHeader161,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateAssetSet")));
                addHeader(omElementauthHeader161, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetSetReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetSetReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateAssetSet"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateAssetSet"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateAssetSet"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param updateAssetSetParam160
     * @param authHeader161
     * @see com.scene7.www.ipsapi.IpsApiService#startupdateAssetSet
     */
    public void startupdateAssetSet(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetSetParam updateAssetSetParam160,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader161,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[155].getName());
        _operationClient.getOptions().setAction("updateAssetSet");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                updateAssetSetParam160,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateAssetSet")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "updateAssetSet"));

        // add the soap_headers only if they are not null
        if (authHeader161 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader161 = toOM(authHeader161,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "updateAssetSet")));
            addHeader(omElementauthHeader161, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetSetReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultupdateAssetSet(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetSetReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorupdateAssetSet(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateAssetSet"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateAssetSet"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "updateAssetSet"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorupdateAssetSet((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorupdateAssetSet((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorupdateAssetSet((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorupdateAssetSet(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateAssetSet(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateAssetSet(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateAssetSet(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateAssetSet(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateAssetSet(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateAssetSet(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorupdateAssetSet(f);
                            }
                        } else {
                            callback.receiveErrorupdateAssetSet(f);
                        }
                    } else {
                        callback.receiveErrorupdateAssetSet(f);
                    }
                } else {
                    callback.receiveErrorupdateAssetSet(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorupdateAssetSet(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[155].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[155].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param addMediaPortalEventParam163
     * @param authHeader164
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#addMediaPortalEvent
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddMediaPortalEventReturn addMediaPortalEvent(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddMediaPortalEventParam addMediaPortalEventParam163,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader164)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[156].getName());
            _operationClient.getOptions().setAction("addMediaPortalEvent");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    addMediaPortalEventParam163,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "addMediaPortalEvent")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "addMediaPortalEvent"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader164 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader164 = toOM(authHeader164,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addMediaPortalEvent")));
                addHeader(omElementauthHeader164, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddMediaPortalEventReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddMediaPortalEventReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addMediaPortalEvent"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addMediaPortalEvent"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addMediaPortalEvent"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param addMediaPortalEventParam163
     * @param authHeader164
     * @see com.scene7.www.ipsapi.IpsApiService#startaddMediaPortalEvent
     */
    public void startaddMediaPortalEvent(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddMediaPortalEventParam addMediaPortalEventParam163,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader164,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[156].getName());
        _operationClient.getOptions().setAction("addMediaPortalEvent");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                addMediaPortalEventParam163,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "addMediaPortalEvent")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "addMediaPortalEvent"));

        // add the soap_headers only if they are not null
        if (authHeader164 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader164 = toOM(authHeader164,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "addMediaPortalEvent")));
            addHeader(omElementauthHeader164, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddMediaPortalEventReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultaddMediaPortalEvent(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddMediaPortalEventReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErroraddMediaPortalEvent(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addMediaPortalEvent"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addMediaPortalEvent"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "addMediaPortalEvent"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErroraddMediaPortalEvent((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErroraddMediaPortalEvent((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErroraddMediaPortalEvent((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErroraddMediaPortalEvent(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddMediaPortalEvent(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddMediaPortalEvent(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddMediaPortalEvent(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddMediaPortalEvent(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddMediaPortalEvent(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddMediaPortalEvent(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErroraddMediaPortalEvent(f);
                            }
                        } else {
                            callback.receiveErroraddMediaPortalEvent(f);
                        }
                    } else {
                        callback.receiveErroraddMediaPortalEvent(f);
                    }
                } else {
                    callback.receiveErroraddMediaPortalEvent(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErroraddMediaPortalEvent(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[156].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[156].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getOriginalFilePathsParam166
     * @param authHeader167
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getOriginalFilePaths
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetOriginalFilePathsReturn getOriginalFilePaths(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetOriginalFilePathsParam getOriginalFilePathsParam166,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader167)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[157].getName());
            _operationClient.getOptions().setAction("getOriginalFilePaths");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getOriginalFilePathsParam166,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getOriginalFilePaths")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getOriginalFilePaths"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader167 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader167 = toOM(authHeader167,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getOriginalFilePaths")));
                addHeader(omElementauthHeader167, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetOriginalFilePathsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetOriginalFilePathsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getOriginalFilePaths"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getOriginalFilePaths"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getOriginalFilePaths"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getOriginalFilePathsParam166
     * @param authHeader167
     * @see com.scene7.www.ipsapi.IpsApiService#startgetOriginalFilePaths
     */
    public void startgetOriginalFilePaths(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetOriginalFilePathsParam getOriginalFilePathsParam166,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader167,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[157].getName());
        _operationClient.getOptions().setAction("getOriginalFilePaths");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getOriginalFilePathsParam166,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getOriginalFilePaths")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getOriginalFilePaths"));

        // add the soap_headers only if they are not null
        if (authHeader167 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader167 = toOM(authHeader167,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getOriginalFilePaths")));
            addHeader(omElementauthHeader167, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetOriginalFilePathsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetOriginalFilePaths(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetOriginalFilePathsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetOriginalFilePaths(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getOriginalFilePaths"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getOriginalFilePaths"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getOriginalFilePaths"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetOriginalFilePaths((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetOriginalFilePaths((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetOriginalFilePaths((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetOriginalFilePaths(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetOriginalFilePaths(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetOriginalFilePaths(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetOriginalFilePaths(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetOriginalFilePaths(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetOriginalFilePaths(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetOriginalFilePaths(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetOriginalFilePaths(f);
                            }
                        } else {
                            callback.receiveErrorgetOriginalFilePaths(f);
                        }
                    } else {
                        callback.receiveErrorgetOriginalFilePaths(f);
                    }
                } else {
                    callback.receiveErrorgetOriginalFilePaths(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetOriginalFilePaths(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[157].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[157].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param deleteImageMapParam169
     * @param authHeader170
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#deleteImageMap
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageMapReturn deleteImageMap(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageMapParam deleteImageMapParam169,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader170)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[158].getName());
            _operationClient.getOptions().setAction("deleteImageMap");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    deleteImageMapParam169,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteImageMap")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteImageMap"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader170 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader170 = toOM(authHeader170,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteImageMap")));
                addHeader(omElementauthHeader170, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageMapReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageMapReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteImageMap"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteImageMap"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteImageMap"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param deleteImageMapParam169
     * @param authHeader170
     * @see com.scene7.www.ipsapi.IpsApiService#startdeleteImageMap
     */
    public void startdeleteImageMap(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageMapParam deleteImageMapParam169,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader170,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[158].getName());
        _operationClient.getOptions().setAction("deleteImageMap");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                deleteImageMapParam169,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteImageMap")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteImageMap"));

        // add the soap_headers only if they are not null
        if (authHeader170 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader170 = toOM(authHeader170,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteImageMap")));
            addHeader(omElementauthHeader170, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageMapReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultdeleteImageMap(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageMapReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrordeleteImageMap(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteImageMap"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteImageMap"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteImageMap"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrordeleteImageMap((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrordeleteImageMap((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrordeleteImageMap((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrordeleteImageMap(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteImageMap(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteImageMap(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteImageMap(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteImageMap(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteImageMap(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteImageMap(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteImageMap(f);
                            }
                        } else {
                            callback.receiveErrordeleteImageMap(f);
                        }
                    } else {
                        callback.receiveErrordeleteImageMap(f);
                    }
                } else {
                    callback.receiveErrordeleteImageMap(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrordeleteImageMap(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[158].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[158].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param removeGroupMembershipParam172
     * @param authHeader173
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#removeGroupMembership
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembershipReturn removeGroupMembership(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembershipParam removeGroupMembershipParam172,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader173)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[159].getName());
            _operationClient.getOptions().setAction("removeGroupMembership");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    removeGroupMembershipParam172,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "removeGroupMembership")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "removeGroupMembership"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader173 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader173 = toOM(authHeader173,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeGroupMembership")));
                addHeader(omElementauthHeader173, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembershipReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembershipReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeGroupMembership"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeGroupMembership"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeGroupMembership"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param removeGroupMembershipParam172
     * @param authHeader173
     * @see com.scene7.www.ipsapi.IpsApiService#startremoveGroupMembership
     */
    public void startremoveGroupMembership(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembershipParam removeGroupMembershipParam172,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader173,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[159].getName());
        _operationClient.getOptions().setAction("removeGroupMembership");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                removeGroupMembershipParam172,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "removeGroupMembership")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "removeGroupMembership"));

        // add the soap_headers only if they are not null
        if (authHeader173 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader173 = toOM(authHeader173,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "removeGroupMembership")));
            addHeader(omElementauthHeader173, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembershipReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultremoveGroupMembership(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembershipReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorremoveGroupMembership(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeGroupMembership"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeGroupMembership"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "removeGroupMembership"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorremoveGroupMembership((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorremoveGroupMembership((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorremoveGroupMembership((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorremoveGroupMembership(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveGroupMembership(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveGroupMembership(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveGroupMembership(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveGroupMembership(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveGroupMembership(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveGroupMembership(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorremoveGroupMembership(f);
                            }
                        } else {
                            callback.receiveErrorremoveGroupMembership(f);
                        }
                    } else {
                        callback.receiveErrorremoveGroupMembership(f);
                    }
                } else {
                    callback.receiveErrorremoveGroupMembership(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorremoveGroupMembership(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[159].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[159].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setProjectAssetsParam175
     * @param authHeader176
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setProjectAssets
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetProjectAssetsReturn setProjectAssets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetProjectAssetsParam setProjectAssetsParam175,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader176)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[160].getName());
            _operationClient.getOptions().setAction("setProjectAssets");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setProjectAssetsParam175,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setProjectAssets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setProjectAssets"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader176 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader176 = toOM(authHeader176,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setProjectAssets")));
                addHeader(omElementauthHeader176, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetProjectAssetsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetProjectAssetsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setProjectAssets"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setProjectAssets"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setProjectAssets"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setProjectAssetsParam175
     * @param authHeader176
     * @see com.scene7.www.ipsapi.IpsApiService#startsetProjectAssets
     */
    public void startsetProjectAssets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetProjectAssetsParam setProjectAssetsParam175,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader176,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[160].getName());
        _operationClient.getOptions().setAction("setProjectAssets");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setProjectAssetsParam175,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setProjectAssets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setProjectAssets"));

        // add the soap_headers only if they are not null
        if (authHeader176 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader176 = toOM(authHeader176,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setProjectAssets")));
            addHeader(omElementauthHeader176, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetProjectAssetsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetProjectAssets(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetProjectAssetsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetProjectAssets(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setProjectAssets"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setProjectAssets"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setProjectAssets"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetProjectAssets((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetProjectAssets((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetProjectAssets((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetProjectAssets(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetProjectAssets(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetProjectAssets(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetProjectAssets(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetProjectAssets(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetProjectAssets(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetProjectAssets(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetProjectAssets(f);
                            }
                        } else {
                            callback.receiveErrorsetProjectAssets(f);
                        }
                    } else {
                        callback.receiveErrorsetProjectAssets(f);
                    }
                } else {
                    callback.receiveErrorsetProjectAssets(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetProjectAssets(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[160].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[160].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getPropertySetTypesParam178
     * @param authHeader179
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getPropertySetTypes
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypesReturn getPropertySetTypes(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypesParam getPropertySetTypesParam178,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader179)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[161].getName());
            _operationClient.getOptions().setAction("getPropertySetTypes");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getPropertySetTypesParam178,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getPropertySetTypes")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getPropertySetTypes"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader179 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader179 = toOM(authHeader179,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getPropertySetTypes")));
                addHeader(omElementauthHeader179, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypesReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypesReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPropertySetTypes"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPropertySetTypes"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPropertySetTypes"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getPropertySetTypesParam178
     * @param authHeader179
     * @see com.scene7.www.ipsapi.IpsApiService#startgetPropertySetTypes
     */
    public void startgetPropertySetTypes(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypesParam getPropertySetTypesParam178,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader179,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[161].getName());
        _operationClient.getOptions().setAction("getPropertySetTypes");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getPropertySetTypesParam178,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getPropertySetTypes")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getPropertySetTypes"));

        // add the soap_headers only if they are not null
        if (authHeader179 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader179 = toOM(authHeader179,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getPropertySetTypes")));
            addHeader(omElementauthHeader179, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypesReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetPropertySetTypes(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypesReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetPropertySetTypes(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPropertySetTypes"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPropertySetTypes"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getPropertySetTypes"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetPropertySetTypes((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetPropertySetTypes((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetPropertySetTypes((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetPropertySetTypes(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySetTypes(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySetTypes(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySetTypes(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySetTypes(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySetTypes(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySetTypes(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetPropertySetTypes(f);
                            }
                        } else {
                            callback.receiveErrorgetPropertySetTypes(f);
                        }
                    } else {
                        callback.receiveErrorgetPropertySetTypes(f);
                    }
                } else {
                    callback.receiveErrorgetPropertySetTypes(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetPropertySetTypes(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[161].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[161].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getSearchStringsParam181
     * @param authHeader182
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getSearchStrings
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSearchStringsReturn getSearchStrings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSearchStringsParam getSearchStringsParam181,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader182)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[162].getName());
            _operationClient.getOptions().setAction("getSearchStrings");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getSearchStringsParam181,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getSearchStrings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getSearchStrings"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader182 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader182 = toOM(authHeader182,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getSearchStrings")));
                addHeader(omElementauthHeader182, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSearchStringsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSearchStringsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getSearchStrings"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getSearchStrings"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getSearchStrings"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getSearchStringsParam181
     * @param authHeader182
     * @see com.scene7.www.ipsapi.IpsApiService#startgetSearchStrings
     */
    public void startgetSearchStrings(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSearchStringsParam getSearchStringsParam181,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader182,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[162].getName());
        _operationClient.getOptions().setAction("getSearchStrings");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getSearchStringsParam181,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getSearchStrings")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getSearchStrings"));

        // add the soap_headers only if they are not null
        if (authHeader182 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader182 = toOM(authHeader182,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getSearchStrings")));
            addHeader(omElementauthHeader182, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSearchStringsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetSearchStrings(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSearchStringsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetSearchStrings(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getSearchStrings"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getSearchStrings"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getSearchStrings"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetSearchStrings((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetSearchStrings((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetSearchStrings((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetSearchStrings(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetSearchStrings(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetSearchStrings(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetSearchStrings(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetSearchStrings(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetSearchStrings(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetSearchStrings(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetSearchStrings(f);
                            }
                        } else {
                            callback.receiveErrorgetSearchStrings(f);
                        }
                    } else {
                        callback.receiveErrorgetSearchStrings(f);
                    }
                } else {
                    callback.receiveErrorgetSearchStrings(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetSearchStrings(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[162].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[162].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getMetadataSchemaParam184
     * @param authHeader185
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getMetadataSchema
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaReturn getMetadataSchema(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaParam getMetadataSchemaParam184,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader185)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[163].getName());
            _operationClient.getOptions().setAction("getMetadataSchema");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getMetadataSchemaParam184,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getMetadataSchema")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getMetadataSchema"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader185 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader185 = toOM(authHeader185,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getMetadataSchema")));
                addHeader(omElementauthHeader185, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMetadataSchema"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMetadataSchema"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMetadataSchema"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getMetadataSchemaParam184
     * @param authHeader185
     * @see com.scene7.www.ipsapi.IpsApiService#startgetMetadataSchema
     */
    public void startgetMetadataSchema(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaParam getMetadataSchemaParam184,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader185,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[163].getName());
        _operationClient.getOptions().setAction("getMetadataSchema");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getMetadataSchemaParam184,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getMetadataSchema")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getMetadataSchema"));

        // add the soap_headers only if they are not null
        if (authHeader185 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader185 = toOM(authHeader185,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getMetadataSchema")));
            addHeader(omElementauthHeader185, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetMetadataSchema(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetMetadataSchema(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMetadataSchema"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMetadataSchema"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getMetadataSchema"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetMetadataSchema((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetMetadataSchema((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetMetadataSchema((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetMetadataSchema(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataSchema(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataSchema(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataSchema(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataSchema(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataSchema(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataSchema(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetMetadataSchema(f);
                            }
                        } else {
                            callback.receiveErrorgetMetadataSchema(f);
                        }
                    } else {
                        callback.receiveErrorgetMetadataSchema(f);
                    }
                } else {
                    callback.receiveErrorgetMetadataSchema(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetMetadataSchema(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[163].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[163].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param createTemplateParam187
     * @param authHeader188
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#createTemplate
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateTemplateReturn createTemplate(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateTemplateParam createTemplateParam187,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader188)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[164].getName());
            _operationClient.getOptions().setAction("createTemplate");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    createTemplateParam187,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createTemplate")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createTemplate"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader188 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader188 = toOM(authHeader188,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createTemplate")));
                addHeader(omElementauthHeader188, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateTemplateReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateTemplateReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createTemplate"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createTemplate"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createTemplate"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param createTemplateParam187
     * @param authHeader188
     * @see com.scene7.www.ipsapi.IpsApiService#startcreateTemplate
     */
    public void startcreateTemplate(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateTemplateParam createTemplateParam187,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader188,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[164].getName());
        _operationClient.getOptions().setAction("createTemplate");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                createTemplateParam187,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createTemplate")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createTemplate"));

        // add the soap_headers only if they are not null
        if (authHeader188 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader188 = toOM(authHeader188,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createTemplate")));
            addHeader(omElementauthHeader188, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateTemplateReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultcreateTemplate(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateTemplateReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorcreateTemplate(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createTemplate"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createTemplate"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createTemplate"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorcreateTemplate((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorcreateTemplate((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorcreateTemplate((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorcreateTemplate(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateTemplate(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateTemplate(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateTemplate(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateTemplate(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateTemplate(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateTemplate(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreateTemplate(f);
                            }
                        } else {
                            callback.receiveErrorcreateTemplate(f);
                        }
                    } else {
                        callback.receiveErrorcreateTemplate(f);
                    }
                } else {
                    callback.receiveErrorcreateTemplate(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorcreateTemplate(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[164].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[164].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getTagFieldValuesParam190
     * @param authHeader191
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getTagFieldValues
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetTagFieldValuesReturn getTagFieldValues(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetTagFieldValuesParam getTagFieldValuesParam190,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader191)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[165].getName());
            _operationClient.getOptions().setAction("getTagFieldValues");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getTagFieldValuesParam190,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getTagFieldValues")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getTagFieldValues"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader191 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader191 = toOM(authHeader191,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getTagFieldValues")));
                addHeader(omElementauthHeader191, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetTagFieldValuesReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetTagFieldValuesReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getTagFieldValues"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getTagFieldValues"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getTagFieldValues"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getTagFieldValuesParam190
     * @param authHeader191
     * @see com.scene7.www.ipsapi.IpsApiService#startgetTagFieldValues
     */
    public void startgetTagFieldValues(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetTagFieldValuesParam getTagFieldValuesParam190,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader191,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[165].getName());
        _operationClient.getOptions().setAction("getTagFieldValues");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getTagFieldValuesParam190,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getTagFieldValues")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getTagFieldValues"));

        // add the soap_headers only if they are not null
        if (authHeader191 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader191 = toOM(authHeader191,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getTagFieldValues")));
            addHeader(omElementauthHeader191, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetTagFieldValuesReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetTagFieldValues(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetTagFieldValuesReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetTagFieldValues(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getTagFieldValues"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getTagFieldValues"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getTagFieldValues"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetTagFieldValues((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetTagFieldValues((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetTagFieldValues((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetTagFieldValues(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetTagFieldValues(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetTagFieldValues(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetTagFieldValues(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetTagFieldValues(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetTagFieldValues(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetTagFieldValues(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetTagFieldValues(f);
                            }
                        } else {
                            callback.receiveErrorgetTagFieldValues(f);
                        }
                    } else {
                        callback.receiveErrorgetTagFieldValues(f);
                    }
                } else {
                    callback.receiveErrorgetTagFieldValues(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetTagFieldValues(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[165].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[165].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param deletePropertySetTypeParam193
     * @param authHeader194
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#deletePropertySetType
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetTypeReturn deletePropertySetType(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetTypeParam deletePropertySetTypeParam193,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader194)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[166].getName());
            _operationClient.getOptions().setAction("deletePropertySetType");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    deletePropertySetTypeParam193,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deletePropertySetType")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deletePropertySetType"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader194 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader194 = toOM(authHeader194,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deletePropertySetType")));
                addHeader(omElementauthHeader194, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetTypeReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetTypeReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deletePropertySetType"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deletePropertySetType"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deletePropertySetType"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param deletePropertySetTypeParam193
     * @param authHeader194
     * @see com.scene7.www.ipsapi.IpsApiService#startdeletePropertySetType
     */
    public void startdeletePropertySetType(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetTypeParam deletePropertySetTypeParam193,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader194,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[166].getName());
        _operationClient.getOptions().setAction("deletePropertySetType");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                deletePropertySetTypeParam193,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deletePropertySetType")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deletePropertySetType"));

        // add the soap_headers only if they are not null
        if (authHeader194 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader194 = toOM(authHeader194,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deletePropertySetType")));
            addHeader(omElementauthHeader194, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetTypeReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultdeletePropertySetType(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetTypeReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrordeletePropertySetType(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deletePropertySetType"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deletePropertySetType"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deletePropertySetType"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrordeletePropertySetType((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrordeletePropertySetType((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrordeletePropertySetType((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrordeletePropertySetType(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeletePropertySetType(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeletePropertySetType(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeletePropertySetType(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeletePropertySetType(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeletePropertySetType(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeletePropertySetType(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeletePropertySetType(f);
                            }
                        } else {
                            callback.receiveErrordeletePropertySetType(f);
                        }
                    } else {
                        callback.receiveErrordeletePropertySetType(f);
                    }
                } else {
                    callback.receiveErrordeletePropertySetType(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrordeletePropertySetType(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[166].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[166].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param renameProjectParam196
     * @param authHeader197
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#renameProject
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameProjectReturn renameProject(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameProjectParam renameProjectParam196,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader197)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[167].getName());
            _operationClient.getOptions().setAction("renameProject");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    renameProjectParam196,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "renameProject")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "renameProject"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader197 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader197 = toOM(authHeader197,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "renameProject")));
                addHeader(omElementauthHeader197, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameProjectReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameProjectReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "renameProject"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "renameProject"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "renameProject"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param renameProjectParam196
     * @param authHeader197
     * @see com.scene7.www.ipsapi.IpsApiService#startrenameProject
     */
    public void startrenameProject(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameProjectParam renameProjectParam196,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader197,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[167].getName());
        _operationClient.getOptions().setAction("renameProject");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                renameProjectParam196,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "renameProject")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "renameProject"));

        // add the soap_headers only if they are not null
        if (authHeader197 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader197 = toOM(authHeader197,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "renameProject")));
            addHeader(omElementauthHeader197, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameProjectReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultrenameProject(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameProjectReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorrenameProject(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "renameProject"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "renameProject"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "renameProject"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorrenameProject((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorrenameProject((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorrenameProject((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorrenameProject(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameProject(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameProject(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameProject(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameProject(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameProject(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameProject(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorrenameProject(f);
                            }
                        } else {
                            callback.receiveErrorrenameProject(f);
                        }
                    } else {
                        callback.receiveErrorrenameProject(f);
                    }
                } else {
                    callback.receiveErrorrenameProject(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorrenameProject(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[167].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[167].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param moveAssetsParam199
     * @param authHeader200
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#moveAssets
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetsReturn moveAssets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetsParam moveAssetsParam199,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader200)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[168].getName());
            _operationClient.getOptions().setAction("moveAssets");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    moveAssetsParam199,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "moveAssets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "moveAssets"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader200 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader200 = toOM(authHeader200,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "moveAssets")));
                addHeader(omElementauthHeader200, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetsReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetsReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "moveAssets"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "moveAssets"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "moveAssets"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param moveAssetsParam199
     * @param authHeader200
     * @see com.scene7.www.ipsapi.IpsApiService#startmoveAssets
     */
    public void startmoveAssets(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetsParam moveAssetsParam199,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader200,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[168].getName());
        _operationClient.getOptions().setAction("moveAssets");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                moveAssetsParam199,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "moveAssets")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "moveAssets"));

        // add the soap_headers only if they are not null
        if (authHeader200 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader200 = toOM(authHeader200,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "moveAssets")));
            addHeader(omElementauthHeader200, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetsReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultmoveAssets(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetsReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrormoveAssets(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "moveAssets"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "moveAssets"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "moveAssets"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrormoveAssets((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrormoveAssets((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrormoveAssets((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrormoveAssets(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveAssets(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveAssets(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveAssets(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveAssets(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveAssets(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveAssets(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrormoveAssets(f);
                            }
                        } else {
                            callback.receiveErrormoveAssets(f);
                        }
                    } else {
                        callback.receiveErrormoveAssets(f);
                    }
                } else {
                    callback.receiveErrormoveAssets(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrormoveAssets(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[168].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[168].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setGroupMembershipParam202
     * @param authHeader203
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setGroupMembership
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembershipReturn setGroupMembership(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembershipParam setGroupMembershipParam202,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader203)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[169].getName());
            _operationClient.getOptions().setAction("setGroupMembership");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setGroupMembershipParam202,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setGroupMembership")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setGroupMembership"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader203 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader203 = toOM(authHeader203,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setGroupMembership")));
                addHeader(omElementauthHeader203, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembershipReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembershipReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setGroupMembership"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setGroupMembership"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setGroupMembership"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setGroupMembershipParam202
     * @param authHeader203
     * @see com.scene7.www.ipsapi.IpsApiService#startsetGroupMembership
     */
    public void startsetGroupMembership(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembershipParam setGroupMembershipParam202,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader203,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[169].getName());
        _operationClient.getOptions().setAction("setGroupMembership");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setGroupMembershipParam202,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setGroupMembership")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setGroupMembership"));

        // add the soap_headers only if they are not null
        if (authHeader203 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader203 = toOM(authHeader203,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setGroupMembership")));
            addHeader(omElementauthHeader203, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembershipReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetGroupMembership(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembershipReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetGroupMembership(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setGroupMembership"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setGroupMembership"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setGroupMembership"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetGroupMembership((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetGroupMembership((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetGroupMembership((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetGroupMembership(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetGroupMembership(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetGroupMembership(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetGroupMembership(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetGroupMembership(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetGroupMembership(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetGroupMembership(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetGroupMembership(f);
                            }
                        } else {
                            callback.receiveErrorsetGroupMembership(f);
                        }
                    } else {
                        callback.receiveErrorsetGroupMembership(f);
                    }
                } else {
                    callback.receiveErrorsetGroupMembership(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetGroupMembership(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[169].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[169].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param deleteProjectParam205
     * @param authHeader206
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#deleteProject
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteProjectReturn deleteProject(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteProjectParam deleteProjectParam205,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader206)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[170].getName());
            _operationClient.getOptions().setAction("deleteProject");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    deleteProjectParam205,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteProject")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "deleteProject"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader206 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader206 = toOM(authHeader206,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteProject")));
                addHeader(omElementauthHeader206, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteProjectReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteProjectReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteProject"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteProject"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteProject"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param deleteProjectParam205
     * @param authHeader206
     * @see com.scene7.www.ipsapi.IpsApiService#startdeleteProject
     */
    public void startdeleteProject(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteProjectParam deleteProjectParam205,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader206,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[170].getName());
        _operationClient.getOptions().setAction("deleteProject");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                deleteProjectParam205,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteProject")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "deleteProject"));

        // add the soap_headers only if they are not null
        if (authHeader206 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader206 = toOM(authHeader206,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "deleteProject")));
            addHeader(omElementauthHeader206, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteProjectReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultdeleteProject(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteProjectReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrordeleteProject(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteProject"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteProject"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "deleteProject"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrordeleteProject((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrordeleteProject((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrordeleteProject((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrordeleteProject(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteProject(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteProject(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteProject(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteProject(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteProject(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteProject(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrordeleteProject(f);
                            }
                        } else {
                            callback.receiveErrordeleteProject(f);
                        }
                    } else {
                        callback.receiveErrordeleteProject(f);
                    }
                } else {
                    callback.receiveErrordeleteProject(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrordeleteProject(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[170].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[170].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param createPropertySetParam208
     * @param authHeader209
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#createPropertySet
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetReturn createPropertySet(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetParam createPropertySetParam208,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader209)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[171].getName());
            _operationClient.getOptions().setAction("createPropertySet");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    createPropertySetParam208,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createPropertySet")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "createPropertySet"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader209 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader209 = toOM(authHeader209,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createPropertySet")));
                addHeader(omElementauthHeader209, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createPropertySet"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createPropertySet"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createPropertySet"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param createPropertySetParam208
     * @param authHeader209
     * @see com.scene7.www.ipsapi.IpsApiService#startcreatePropertySet
     */
    public void startcreatePropertySet(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetParam createPropertySetParam208,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader209,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[171].getName());
        _operationClient.getOptions().setAction("createPropertySet");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                createPropertySetParam208,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createPropertySet")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "createPropertySet"));

        // add the soap_headers only if they are not null
        if (authHeader209 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader209 = toOM(authHeader209,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "createPropertySet")));
            addHeader(omElementauthHeader209, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultcreatePropertySet(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorcreatePropertySet(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createPropertySet"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createPropertySet"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "createPropertySet"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorcreatePropertySet((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorcreatePropertySet((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorcreatePropertySet((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorcreatePropertySet(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreatePropertySet(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreatePropertySet(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreatePropertySet(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreatePropertySet(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreatePropertySet(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreatePropertySet(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorcreatePropertySet(f);
                            }
                        } else {
                            callback.receiveErrorcreatePropertySet(f);
                        }
                    } else {
                        callback.receiveErrorcreatePropertySet(f);
                    }
                } else {
                    callback.receiveErrorcreatePropertySet(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorcreatePropertySet(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[171].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[171].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param setAssetPublishStateParam211
     * @param authHeader212
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#setAssetPublishState
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPublishStateReturn setAssetPublishState(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPublishStateParam setAssetPublishStateParam211,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader212)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[172].getName());
            _operationClient.getOptions().setAction("setAssetPublishState");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    setAssetPublishStateParam211,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setAssetPublishState")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "setAssetPublishState"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader212 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader212 = toOM(authHeader212,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setAssetPublishState")));
                addHeader(omElementauthHeader212, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPublishStateReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPublishStateReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap
                        .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetPublishState"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetPublishState"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetPublishState"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param setAssetPublishStateParam211
     * @param authHeader212
     * @see com.scene7.www.ipsapi.IpsApiService#startsetAssetPublishState
     */
    public void startsetAssetPublishState(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPublishStateParam setAssetPublishStateParam211,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader212,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[172].getName());
        _operationClient.getOptions().setAction("setAssetPublishState");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                setAssetPublishStateParam211,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setAssetPublishState")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "setAssetPublishState"));

        // add the soap_headers only if they are not null
        if (authHeader212 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader212 = toOM(authHeader212,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "setAssetPublishState")));
            addHeader(omElementauthHeader212, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPublishStateReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultsetAssetPublishState(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPublishStateReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorsetAssetPublishState(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetPublishState"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetPublishState"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "setAssetPublishState"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorsetAssetPublishState((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorsetAssetPublishState((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorsetAssetPublishState((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorsetAssetPublishState(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetPublishState(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetPublishState(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetPublishState(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetPublishState(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetPublishState(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetPublishState(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorsetAssetPublishState(f);
                            }
                        } else {
                            callback.receiveErrorsetAssetPublishState(f);
                        }
                    } else {
                        callback.receiveErrorsetAssetPublishState(f);
                    }
                } else {
                    callback.receiveErrorsetAssetPublishState(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorsetAssetPublishState(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[172].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[172].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * Auto generated method signature
     *
     * @param getGroupMembersParam214
     * @param authHeader215
     * @throws com.scene7.www.ipsapi.AuthenticationFaultException :
     * @throws com.scene7.www.ipsapi.IpsApiFaultException         :
     * @throws com.scene7.www.ipsapi.AuthorizationFaultException  :
     * @see com.scene7.www.ipsapi.IpsApiService#getGroupMembers
     */

    public com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembersReturn getGroupMembers(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembersParam getGroupMembersParam214,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader215)

            throws java.rmi.RemoteException

            , com.scene7.www.ipsapi.AuthenticationFaultException
            , com.scene7.www.ipsapi.IpsApiFaultException
            , com.scene7.www.ipsapi.AuthorizationFaultException {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try {
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[173].getName());
            _operationClient.getOptions().setAction("getGroupMembers");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

            addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                    "&");

            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();

            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;

            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getGroupMembersParam214,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getGroupMembers")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                            "getGroupMembers"));

            env.build();

            // add the children only if the parameter is not null
            if (authHeader215 != null) {

                org.apache.axiom.om.OMElement omElementauthHeader215 = toOM(authHeader215,
                        optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getGroupMembers")));
                addHeader(omElementauthHeader215, env);

            }

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);

            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();

            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement(),
                    com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembersReturn.class,
                    getEnvelopeNamespaces(_returnEnv));

            return (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembersReturn) object;

        } catch (org.apache.axis2.AxisFault f) {

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt != null) {
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGroupMembers"))) {
                    //make the fault by reflection
                    try {
                        java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGroupMembers"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGroupMembers"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[] { messageClass });
                        m.invoke(ex, new java.lang.Object[] { messageObject });

                        if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthenticationFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                            throw (com.scene7.www.ipsapi.IpsApiFaultException) ex;
                        }

                        if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                            throw (com.scene7.www.ipsapi.AuthorizationFaultException) ex;
                        }

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    } catch (java.lang.ClassCastException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                } else {
                    throw f;
                }
            } else {
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @param getGroupMembersParam214
     * @param authHeader215
     * @see com.scene7.www.ipsapi.IpsApiService#startgetGroupMembers
     */
    public void startgetGroupMembers(

            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembersParam getGroupMembersParam214,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader authHeader215,

            final com.scene7.www.ipsapi.IpsApiServiceCallbackHandler callback)

            throws java.rmi.RemoteException {

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[173].getName());
        _operationClient.getOptions().setAction("getGroupMembers");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

        addPropertyToOperationClient(_operationClient, org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
                "&");

        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env = null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

        //Style is Doc.

        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getGroupMembersParam214,
                optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getGroupMembers")), new javax.xml.namespace.QName("http://www.scene7.com/IpsApi",
                        "getGroupMembers"));

        // add the soap_headers only if they are not null
        if (authHeader215 != null) {

            org.apache.axiom.om.OMElement omElementauthHeader215 = toOM(authHeader215,
                    optimizeContent(new javax.xml.namespace.QName("http://www.scene7.com/IpsApi", "getGroupMembers")));
            addHeader(omElementauthHeader215, env);

        }

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);

        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembersReturn.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetGroupMembers(
                            (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembersReturn) object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetGroupMembers(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt != null) {
                        if (faultExceptionNameMap
                                .containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGroupMembers"))) {
                            //make the fault by reflection
                            try {
                                java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGroupMembers"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                                //message class
                                java.lang.String messageClassName = (java.lang.String) faultMessageMap
                                        .get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(), "getGroupMembers"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt, messageClass, null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[] { messageClass });
                                m.invoke(ex, new java.lang.Object[] { messageObject });

                                if (ex instanceof com.scene7.www.ipsapi.AuthenticationFaultException) {
                                    callback.receiveErrorgetGroupMembers((com.scene7.www.ipsapi.AuthenticationFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.IpsApiFaultException) {
                                    callback.receiveErrorgetGroupMembers((com.scene7.www.ipsapi.IpsApiFaultException) ex);
                                    return;
                                }

                                if (ex instanceof com.scene7.www.ipsapi.AuthorizationFaultException) {
                                    callback.receiveErrorgetGroupMembers((com.scene7.www.ipsapi.AuthorizationFaultException) ex);
                                    return;
                                }

                                callback.receiveErrorgetGroupMembers(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch (java.lang.ClassCastException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroupMembers(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroupMembers(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroupMembers(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroupMembers(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroupMembers(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroupMembers(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetGroupMembers(f);
                            }
                        } else {
                            callback.receiveErrorgetGroupMembers(f);
                        }
                    } else {
                        callback.receiveErrorgetGroupMembers(f);
                    }
                } else {
                    callback.receiveErrorgetGroupMembers(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetGroupMembers(axisFault);
                }
            }
        });

        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if (_operations[173].getMessageReceiver() == null && _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[173].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }

    /**
     * A utility method that copies the namepaces from the SOAPEnvelope
     */
    private java.util.Map getEnvelopeNamespaces(org.apache.axiom.soap.SOAPEnvelope env) {
        java.util.Map returnMap = new java.util.HashMap();
        java.util.Iterator namespaceIterator = env.getAllDeclaredNamespaces();
        while (namespaceIterator.hasNext()) {
            org.apache.axiom.om.OMNamespace ns = (org.apache.axiom.om.OMNamespace) namespaceIterator.next();
            returnMap.put(ns.getPrefix(), ns.getNamespaceURI());
        }
        return returnMap;
    }

    private boolean optimizeContent(javax.xml.namespace.QName opName) {

        if (opNameArray == null) {
            return false;
        }
        for (int i = 0; i < opNameArray.length; i++) {
            if (opName.equals(opNameArray[i])) {
                return true;
            }
        }
        return false;
    }

    //http://s7geminiapi.macromedia.com:80/scene7/services/IpsApiService
    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetFolderPermissionsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetFolderPermissionsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetFolderPermissionsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetFolderPermissionsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd.AuthenticationFault param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd.AuthenticationFault.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd.IpsApiFault param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd.IpsApiFault.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd.AuthorizationFault param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd.AuthorizationFault.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveAssetPermissionsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveAssetPermissionsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveAssetPermissionsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveAssetPermissionsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SubmitJobParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SubmitJobParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SubmitJobReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SubmitJobReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ReplaceImageParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ReplaceImageParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ReplaceImageReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ReplaceImageReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllCompaniesParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllCompaniesParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllCompaniesReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllCompaniesReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetMetadataParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetMetadataParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetMetadataReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetMetadataReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckLoginParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckLoginParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckLoginReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckLoginReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDistinctMetadataValuesParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDistinctMetadataValuesParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDistinctMetadataValuesReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDistinctMetadataValuesReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateImageSetParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateImageSetParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateImageSetReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateImageSetReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetPublishHistoryParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetPublishHistoryParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetPublishHistoryReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetPublishHistoryReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanySettingsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanySettingsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanySettingsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanySettingsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaNamespacesParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaNamespacesParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaNamespacesReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaNamespacesReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ApplyMetadataTemplateParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ApplyMetadataTemplateParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ApplyMetadataTemplateReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ApplyMetadataTemplateReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteGroupParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteGroupParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteGroupReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteGroupReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanySettingsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanySettingsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanySettingsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanySettingsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActiveJobsParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActiveJobsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActiveJobsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActiveJobsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CopyImageParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CopyImageParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CopyImageReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CopyImageReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetFontFieldsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetFontFieldsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetFontFieldsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetFontFieldsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypeParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypeParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypeReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypeReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveCompanyMembershipParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveCompanyMembershipParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveCompanyMembershipReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveCompanyMembershipReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetImageFieldsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetImageFieldsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetImageFieldsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetImageFieldsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageMapParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageMapParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageMapReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageMapReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetScheduledJobsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetScheduledJobsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetScheduledJobsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetScheduledJobsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsPublishStateParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsPublishStateParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsPublishStateReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsPublishStateReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserInfoParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserInfoParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserInfoReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserInfoReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageServingPublishSettingsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageServingPublishSettingsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageServingPublishSettingsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageServingPublishSettingsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPasswordParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPasswordParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPasswordReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPasswordReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsContextStateParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsContextStateParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsContextStateReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsContextStateReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateCompanyMetadataParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateCompanyMetadataParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateCompanyMetadataReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateCompanyMetadataReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteMetadataFieldParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteMetadataFieldParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteMetadataFieldReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteMetadataFieldReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetPermissionsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetPermissionsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetPermissionsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetPermissionsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetSetDefinitionParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetSetDefinitionParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetSetDefinitionReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetSetDefinitionReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserCharsParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserCharsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserCharsReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserCharsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameFolderParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameFolderParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameFolderReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameFolderReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetIccProfileFieldsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetIccProfileFieldsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetIccProfileFieldsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetIccProfileFieldsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateProjectParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateProjectParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateProjectReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateProjectReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetPermissionsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetPermissionsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetPermissionsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetPermissionsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateVignettePublishFormatParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateVignettePublishFormatParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateVignettePublishFormatReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateVignettePublishFormatReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetViewerConfigSettingsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetViewerConfigSettingsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetViewerConfigSettingsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetViewerConfigSettingsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.PauseJobParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.PauseJobParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.PauseJobReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.PauseJobReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddTagFieldValuesParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddTagFieldValuesParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddTagFieldValuesReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddTagFieldValuesReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMediaPortalEventParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMediaPortalEventParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMediaPortalEventReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMediaPortalEventReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogDetailsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogDetailsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogDetailsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogDetailsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSystemPropertiesParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSystemPropertiesParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSystemPropertiesReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSystemPropertiesReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemovePropertySetPermissionsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemovePropertySetPermissionsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemovePropertySetPermissionsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemovePropertySetPermissionsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetCountsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetCountsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetCountsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetCountsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembershipParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembershipParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembershipReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembershipReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGenerationInfoParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGenerationInfoParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGenerationInfoReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGenerationInfoReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetZipEntriesParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetZipEntriesParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetZipEntriesReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetZipEntriesReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageRenderingPublishSettingsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageRenderingPublishSettingsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageRenderingPublishSettingsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageRenderingPublishSettingsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUsersParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUsersParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUsersReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUsersReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyInfoParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyInfoParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyInfoReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyInfoReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUniqueMetadataValuesParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUniqueMetadataValuesParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUniqueMetadataValuesReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUniqueMetadataValuesReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageSetMembersParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageSetMembersParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageSetMembersReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageSetMembersReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateXMPPacketParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateXMPPacketParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateXMPPacketReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateXMPPacketReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageRenderingPublishSettingsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageRenderingPublishSettingsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageRenderingPublishSettingsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageRenderingPublishSettingsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllUsersParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllUsersParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllUsersReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllUsersReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteTagFieldValuesParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteTagFieldValuesParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteTagFieldValuesReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteTagFieldValuesReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDiskUsageParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDiskUsageParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDiskUsageReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDiskUsageReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateViewerPresetParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateViewerPresetParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateViewerPresetReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateViewerPresetReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ExecuteJobParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ExecuteJobParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ExecuteJobReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ExecuteJobReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ForceRepublishAssetsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ForceRepublishAssetsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ForceRepublishAssetsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ForceRepublishAssetsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssociatedAssetsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssociatedAssetsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssociatedAssetsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssociatedAssetsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RestoreAssetsFromTrashParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RestoreAssetsFromTrashParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RestoreAssetsFromTrashReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RestoreAssetsFromTrashReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUserInfoParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUserInfoParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUserInfoReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUserInfoReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAutoCropRectParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAutoCropRectParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAutoCropRectReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAutoCropRectReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageMapsParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageMapsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageMapsReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageMapsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteVignettePublishFormatParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteVignettePublishFormatParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteVignettePublishFormatReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteVignettePublishFormatReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateDerivedAssetParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateDerivedAssetParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateDerivedAssetReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateDerivedAssetReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanyMembershipParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanyMembershipParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanyMembershipReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanyMembershipReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UploadPostParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UploadPostParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UploadPostReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UploadPostReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddProjectAssetsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddProjectAssetsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddProjectAssetsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddProjectAssetsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogsParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogsReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ResumeJobParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ResumeJobParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ResumeJobReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ResumeJobReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteFolderParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteFolderParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteFolderReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteFolderReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMetadataSchemaParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMetadataSchemaParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMetadataSchemaReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMetadataSchemaReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageFormatParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageFormatParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageFormatReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageFormatReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFolderTreeParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFolderTreeParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFolderTreeReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFolderTreeReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetZoomTargetsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetZoomTargetsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetZoomTargetsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetZoomTargetsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetMetadataFieldsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetMetadataFieldsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetMetadataFieldsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetMetadataFieldsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetTagFieldValuesParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetTagFieldValuesParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetTagFieldValuesReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetTagFieldValuesReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveFolderParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveFolderParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveFolderReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveFolderReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetViewerConfigSettingsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetViewerConfigSettingsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetViewerConfigSettingsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetViewerConfigSettingsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageFormatsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageFormatsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageFormatsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageFormatsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageSetMembersParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageSetMembersParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageSetMembersReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageSetMembersReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveZoomTargetParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveZoomTargetParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveZoomTargetReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveZoomTargetReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateAssetSetParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateAssetSetParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateAssetSetReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateAssetSetReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsByMetadataParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsByMetadataParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsByMetadataReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsByMetadataReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CdnCacheInvalidationParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CdnCacheInvalidationParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CdnCacheInvalidationReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CdnCacheInvalidationReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchGetAssetPublishContextsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchGetAssetPublishContextsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchGetAssetPublishContextsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchGetAssetPublishContextsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckAssetNamesParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckAssetNamesParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckAssetNamesReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckAssetNamesReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUrlModifierParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUrlModifierParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUrlModifierReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUrlModifierReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateCompanyMetadataParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateCompanyMetadataParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateCompanyMetadataReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateCompanyMetadataReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageServingPublishSettingsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageServingPublishSettingsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageServingPublishSettingsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageServingPublishSettingsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteZoomTargetParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteZoomTargetParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteZoomTargetReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteZoomTargetReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateFolderPermissionsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateFolderPermissionsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateFolderPermissionsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateFolderPermissionsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateImageSetParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateImageSetParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateImageSetReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateImageSetReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetsParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetsReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertyParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertyParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertyReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertyReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataSchemaParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataSchemaParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataSchemaReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataSchemaReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPublishContextsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPublishContextsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPublishContextsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPublishContextsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembershipParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembershipParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembershipReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembershipReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateMetadataFieldParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateMetadataFieldParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateMetadataFieldReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateMetadataFieldReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameAssetParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameAssetParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameAssetReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameAssetReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMaskParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMaskParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMaskReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMaskReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMetadataParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMetadataParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMetadataReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMetadataReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembersParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembersParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembersReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembersReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembershipParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembershipParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembershipReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembershipReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.EmptyAssetsFromTrashParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.EmptyAssetsFromTrashParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.EmptyAssetsFromTrashReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.EmptyAssetsFromTrashReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCdnCacheInvalidationStatusParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCdnCacheInvalidationStatusParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCdnCacheInvalidationStatusReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCdnCacheInvalidationStatusReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetThumbAssetParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetThumbAssetParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetThumbAssetReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetThumbAssetReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActivePublishContextsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActivePublishContextsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActivePublishContextsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActivePublishContextsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.StopJobParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.StopJobParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.StopJobReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.StopJobReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetJobLogsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetJobLogsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetJobLogsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetJobLogsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveProjectAssetsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveProjectAssetsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveProjectAssetsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveProjectAssetsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetAssetMetadataParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetAssetMetadataParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetAssetMetadataReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetAssetMetadataReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveFolderPermissionsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveFolderPermissionsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveFolderPermissionsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveFolderPermissionsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetXMPPacketParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetXMPPacketParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetXMPPacketReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetXMPPacketReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ListCompanyMetadataParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ListCompanyMetadataParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ListCompanyMetadataReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ListCompanyMetadataReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathNamesParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathNamesParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathNamesReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathNamesReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsByNameParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsByNameParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsByNameReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsByNameReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddUserParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddUserParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddUserReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddUserReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPropertySetPermissionsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPropertySetPermissionsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPropertySetPermissionsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPropertySetPermissionsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateViewerConfigSettingsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateViewerConfigSettingsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateViewerConfigSettingsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateViewerConfigSettingsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetTypeParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetTypeParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetTypeReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetTypeReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageFormatParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageFormatParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageFormatReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageFormatReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteJobParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteJobParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteJobReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteJobReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPermissionsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPermissionsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPermissionsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPermissionsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateVignettePublishFormatParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateVignettePublishFormatParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateVignettePublishFormatReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateVignettePublishFormatReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembersParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembersParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembersReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembersReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataFieldsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataFieldsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataFieldsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataFieldsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetVignettePublishFormatsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetVignettePublishFormatsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetVignettePublishFormatsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetVignettePublishFormatsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataFieldParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataFieldParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataFieldReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataFieldReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyMembershipParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyMembershipParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyMembershipReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyMembershipReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetMetadataParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetMetadataParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetMetadataReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetMetadataReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateMetadataFieldParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateMetadataFieldParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateMetadataFieldReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateMetadataFieldReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateFolderParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateFolderParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateFolderReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateFolderReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFoldersParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFoldersParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFoldersReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFoldersReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembersParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembersParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembersReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembersReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GeneratePasswordParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GeneratePasswordParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GeneratePasswordReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GeneratePasswordReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupsParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupsReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteCompanyMetadataParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteCompanyMetadataParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteCompanyMetadataReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteCompanyMetadataReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembersParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembersParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembersReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembersReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateTagFieldValuesParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateTagFieldValuesParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateTagFieldValuesReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateTagFieldValuesReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetProjectsParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetProjectsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetProjectsReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetProjectsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveGroupParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveGroupParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveGroupReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveGroupReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetSetParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetSetParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetSetReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetSetReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddMediaPortalEventParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddMediaPortalEventParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddMediaPortalEventReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddMediaPortalEventReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetOriginalFilePathsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetOriginalFilePathsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetOriginalFilePathsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetOriginalFilePathsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageMapParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageMapParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageMapReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageMapReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembershipParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembershipParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembershipReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembershipReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetProjectAssetsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetProjectAssetsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetProjectAssetsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetProjectAssetsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypesParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypesParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypesReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypesReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSearchStringsParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSearchStringsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSearchStringsReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSearchStringsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateTemplateParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateTemplateParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateTemplateReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateTemplateReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetTagFieldValuesParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetTagFieldValuesParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetTagFieldValuesReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetTagFieldValuesReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetTypeParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetTypeParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetTypeReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetTypeReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameProjectParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameProjectParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameProjectReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameProjectReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetsParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetsParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetsReturn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetsReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembershipParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembershipParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembershipReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembershipReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteProjectParam param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteProjectParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteProjectReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteProjectReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPublishStateParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPublishStateParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPublishStateReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPublishStateReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembersParam param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembersParam.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.om.OMElement toOM(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembersReturn param,
            boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

        try {
            return param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembersReturn.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetFolderPermissionsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetFolderPermissionsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveAssetPermissionsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveAssetPermissionsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SubmitJobParam param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SubmitJobParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ReplaceImageParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ReplaceImageParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllCompaniesParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllCompaniesParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetMetadataParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetMetadataParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckLoginParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckLoginParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDistinctMetadataValuesParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDistinctMetadataValuesParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateImageSetParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateImageSetParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetPublishHistoryParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetPublishHistoryParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanySettingsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanySettingsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaNamespacesParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaNamespacesParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ApplyMetadataTemplateParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ApplyMetadataTemplateParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteGroupParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteGroupParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsParam param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanySettingsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanySettingsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActiveJobsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActiveJobsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CopyImageParam param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CopyImageParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetFontFieldsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetFontFieldsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypeParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypeParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveCompanyMembershipParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveCompanyMembershipParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetImageFieldsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetImageFieldsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageMapParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageMapParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetScheduledJobsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetScheduledJobsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsPublishStateParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsPublishStateParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserInfoParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserInfoParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageServingPublishSettingsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageServingPublishSettingsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPasswordParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPasswordParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsContextStateParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsContextStateParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateCompanyMetadataParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateCompanyMetadataParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteMetadataFieldParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteMetadataFieldParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetPermissionsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetPermissionsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetSetDefinitionParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetSetDefinitionParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserCharsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserCharsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameFolderParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameFolderParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetIccProfileFieldsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetIccProfileFieldsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateProjectParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateProjectParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetPermissionsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetPermissionsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateVignettePublishFormatParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateVignettePublishFormatParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetViewerConfigSettingsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetViewerConfigSettingsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.PauseJobParam param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.PauseJobParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddTagFieldValuesParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddTagFieldValuesParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMediaPortalEventParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMediaPortalEventParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogDetailsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogDetailsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSystemPropertiesParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSystemPropertiesParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemovePropertySetPermissionsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemovePropertySetPermissionsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetCountsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetCountsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembershipParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembershipParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGenerationInfoParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGenerationInfoParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetZipEntriesParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetZipEntriesParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageRenderingPublishSettingsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageRenderingPublishSettingsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUsersParam param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUsersParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyInfoParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyInfoParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUniqueMetadataValuesParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUniqueMetadataValuesParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageSetMembersParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageSetMembersParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateXMPPacketParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateXMPPacketParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageRenderingPublishSettingsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageRenderingPublishSettingsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllUsersParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllUsersParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteTagFieldValuesParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteTagFieldValuesParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDiskUsageParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDiskUsageParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateViewerPresetParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateViewerPresetParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ExecuteJobParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ExecuteJobParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ForceRepublishAssetsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ForceRepublishAssetsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssociatedAssetsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssociatedAssetsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RestoreAssetsFromTrashParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RestoreAssetsFromTrashParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUserInfoParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUserInfoParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAutoCropRectParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAutoCropRectParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageMapsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageMapsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteVignettePublishFormatParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteVignettePublishFormatParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateDerivedAssetParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateDerivedAssetParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanyMembershipParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanyMembershipParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UploadPostParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UploadPostParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddProjectAssetsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddProjectAssetsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ResumeJobParam param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ResumeJobParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteFolderParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteFolderParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMetadataSchemaParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMetadataSchemaParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageFormatParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageFormatParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFolderTreeParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFolderTreeParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetZoomTargetsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetZoomTargetsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetMetadataFieldsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetMetadataFieldsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetTagFieldValuesParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetTagFieldValuesParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveFolderParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveFolderParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetViewerConfigSettingsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetViewerConfigSettingsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageFormatsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageFormatsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageSetMembersParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageSetMembersParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveZoomTargetParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveZoomTargetParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateAssetSetParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateAssetSetParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsByMetadataParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsByMetadataParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CdnCacheInvalidationParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CdnCacheInvalidationParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchGetAssetPublishContextsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchGetAssetPublishContextsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckAssetNamesParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckAssetNamesParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUrlModifierParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUrlModifierParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateCompanyMetadataParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateCompanyMetadataParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageServingPublishSettingsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageServingPublishSettingsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteZoomTargetParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteZoomTargetParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateFolderPermissionsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateFolderPermissionsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateImageSetParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateImageSetParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertyParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertyParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataSchemaParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataSchemaParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPublishContextsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPublishContextsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembershipParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembershipParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateMetadataFieldParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateMetadataFieldParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameAssetParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameAssetParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMaskParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMaskParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMetadataParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMetadataParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembersParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembersParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembershipParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembershipParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.EmptyAssetsFromTrashParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.EmptyAssetsFromTrashParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCdnCacheInvalidationStatusParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCdnCacheInvalidationStatusParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetThumbAssetParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetThumbAssetParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActivePublishContextsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActivePublishContextsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.StopJobParam param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.StopJobParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetJobLogsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetJobLogsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveProjectAssetsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveProjectAssetsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetAssetMetadataParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetAssetMetadataParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveFolderPermissionsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveFolderPermissionsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetXMPPacketParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetXMPPacketParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.ListCompanyMetadataParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.ListCompanyMetadataParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathNamesParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathNamesParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsByNameParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsByNameParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddUserParam param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddUserParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPropertySetPermissionsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPropertySetPermissionsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateViewerConfigSettingsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateViewerConfigSettingsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetTypeParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetTypeParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageFormatParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageFormatParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteJobParam param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteJobParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPermissionsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPermissionsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateVignettePublishFormatParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateVignettePublishFormatParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembersParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembersParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataFieldsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataFieldsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetVignettePublishFormatsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(
                    param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetVignettePublishFormatsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataFieldParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataFieldParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyMembershipParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyMembershipParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetMetadataParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetMetadataParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetParam param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateMetadataFieldParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateMetadataFieldParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateFolderParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateFolderParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFoldersParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFoldersParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembersParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembersParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GeneratePasswordParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GeneratePasswordParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupsParam param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteCompanyMetadataParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteCompanyMetadataParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembersParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembersParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateTagFieldValuesParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateTagFieldValuesParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetProjectsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetProjectsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveGroupParam param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveGroupParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetSetParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetSetParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddMediaPortalEventParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddMediaPortalEventParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetOriginalFilePathsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetOriginalFilePathsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageMapParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageMapParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembershipParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembershipParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetProjectAssetsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetProjectAssetsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypesParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypesParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSearchStringsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSearchStringsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateTemplateParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateTemplateParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetTagFieldValuesParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetTagFieldValuesParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetTypeParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetTypeParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameProjectParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameProjectParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetsParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetsParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembershipParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembershipParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteProjectParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteProjectParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPublishStateParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPublishStateParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory,
            com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembersParam param, boolean optimizeContent,
            javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault {

        try {

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody()
                    .addChild(param.getOMElement(com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembersParam.MY_QNAME, factory));
            return emptyEnvelope;
        } catch (org.apache.axis2.databinding.ADBException e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }

    }


                             /* methods to provide back word compatibility */

    /**
     * get the default envelope
     */
    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory) {
        return factory.getDefaultEnvelope();
    }

    private java.lang.Object fromOM(
            org.apache.axiom.om.OMElement param,
            java.lang.Class type,
            java.util.Map extraNamespaces) throws org.apache.axis2.AxisFault {

        try {

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetFolderPermissionsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetFolderPermissionsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetFolderPermissionsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetFolderPermissionsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveAssetPermissionsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveAssetPermissionsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveAssetPermissionsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveAssetPermissionsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SubmitJobParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SubmitJobParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SubmitJobReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SubmitJobReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ReplaceImageParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.ReplaceImageParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ReplaceImageReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.ReplaceImageReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllCompaniesParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllCompaniesParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllCompaniesReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllCompaniesReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetMetadataParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetMetadataParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetMetadataReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetMetadataReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckLoginParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckLoginParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckLoginReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckLoginReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDistinctMetadataValuesParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDistinctMetadataValuesParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDistinctMetadataValuesReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDistinctMetadataValuesReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateImageSetParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateImageSetParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateImageSetReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateImageSetReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetPublishHistoryParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetPublishHistoryParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetPublishHistoryReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetPublishHistoryReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanySettingsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanySettingsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanySettingsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanySettingsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaNamespacesParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaNamespacesParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaNamespacesReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaNamespacesReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ApplyMetadataTemplateParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.ApplyMetadataTemplateParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ApplyMetadataTemplateReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.ApplyMetadataTemplateReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteGroupParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteGroupParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteGroupReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteGroupReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanySettingsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanySettingsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanySettingsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanySettingsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActiveJobsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActiveJobsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActiveJobsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActiveJobsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CopyImageParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CopyImageParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CopyImageReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CopyImageReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetFontFieldsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetFontFieldsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetFontFieldsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetFontFieldsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypeParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypeParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypeReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypeReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveCompanyMembershipParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveCompanyMembershipParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveCompanyMembershipReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveCompanyMembershipReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetImageFieldsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetImageFieldsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetImageFieldsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetImageFieldsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageMapParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageMapParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageMapReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageMapReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetScheduledJobsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetScheduledJobsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetScheduledJobsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetScheduledJobsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsPublishStateParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsPublishStateParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsPublishStateReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsPublishStateReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserInfoParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserInfoParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserInfoReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserInfoReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageServingPublishSettingsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageServingPublishSettingsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageServingPublishSettingsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageServingPublishSettingsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPasswordParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPasswordParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPasswordReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPasswordReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsContextStateParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsContextStateParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsContextStateReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetsContextStateReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateCompanyMetadataParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateCompanyMetadataParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateCompanyMetadataReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateCompanyMetadataReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteMetadataFieldParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteMetadataFieldParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteMetadataFieldReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteMetadataFieldReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetPermissionsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetPermissionsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetPermissionsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetPermissionsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetSetDefinitionParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetSetDefinitionParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetSetDefinitionReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetSetDefinitionReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserCharsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserCharsParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserCharsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUserCharsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameFolderParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameFolderParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameFolderReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameFolderReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetIccProfileFieldsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetIccProfileFieldsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetIccProfileFieldsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetIccProfileFieldsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateProjectParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateProjectParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateProjectReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateProjectReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetPermissionsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetPermissionsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetPermissionsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetPermissionsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateVignettePublishFormatParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateVignettePublishFormatParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateVignettePublishFormatReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateVignettePublishFormatReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetViewerConfigSettingsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetViewerConfigSettingsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetViewerConfigSettingsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetViewerConfigSettingsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.PauseJobParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.PauseJobParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.PauseJobReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.PauseJobReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddTagFieldValuesParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddTagFieldValuesParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddTagFieldValuesReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddTagFieldValuesReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMediaPortalEventParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMediaPortalEventParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMediaPortalEventReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMediaPortalEventReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogDetailsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogDetailsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogDetailsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogDetailsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSystemPropertiesParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSystemPropertiesParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSystemPropertiesReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSystemPropertiesReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemovePropertySetPermissionsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemovePropertySetPermissionsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemovePropertySetPermissionsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemovePropertySetPermissionsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetCountsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetCountsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetCountsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetCountsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembershipParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembershipParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembershipReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembershipReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGenerationInfoParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGenerationInfoParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGenerationInfoReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGenerationInfoReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetZipEntriesParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetZipEntriesParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetZipEntriesReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetZipEntriesReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageRenderingPublishSettingsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageRenderingPublishSettingsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageRenderingPublishSettingsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageRenderingPublishSettingsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUsersParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUsersParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUsersReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUsersReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyInfoParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyInfoParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyInfoReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyInfoReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUniqueMetadataValuesParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUniqueMetadataValuesParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUniqueMetadataValuesReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetUniqueMetadataValuesReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageSetMembersParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageSetMembersParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageSetMembersReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageSetMembersReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateXMPPacketParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateXMPPacketParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateXMPPacketReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateXMPPacketReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageRenderingPublishSettingsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageRenderingPublishSettingsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageRenderingPublishSettingsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageRenderingPublishSettingsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllUsersParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllUsersParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllUsersReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAllUsersReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteTagFieldValuesParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteTagFieldValuesParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteTagFieldValuesReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteTagFieldValuesReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDiskUsageParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDiskUsageParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDiskUsageReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetDiskUsageReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateViewerPresetParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateViewerPresetParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateViewerPresetReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateViewerPresetReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ExecuteJobParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.ExecuteJobParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ExecuteJobReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.ExecuteJobReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ForceRepublishAssetsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.ForceRepublishAssetsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ForceRepublishAssetsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.ForceRepublishAssetsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssociatedAssetsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssociatedAssetsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssociatedAssetsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssociatedAssetsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RestoreAssetsFromTrashParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RestoreAssetsFromTrashParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RestoreAssetsFromTrashReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RestoreAssetsFromTrashReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUserInfoParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUserInfoParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUserInfoReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUserInfoReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAutoCropRectParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAutoCropRectParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAutoCropRectReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAutoCropRectReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageMapsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageMapsParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageMapsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageMapsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdatePropertySetReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteVignettePublishFormatParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteVignettePublishFormatParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteVignettePublishFormatReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteVignettePublishFormatReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateDerivedAssetParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateDerivedAssetParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateDerivedAssetReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateDerivedAssetReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanyMembershipParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanyMembershipParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanyMembershipReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetCompanyMembershipReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UploadPostParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UploadPostParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UploadPostReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UploadPostReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddProjectAssetsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddProjectAssetsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddProjectAssetsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddProjectAssetsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogsParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetJobLogsReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ResumeJobParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.ResumeJobParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ResumeJobReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.ResumeJobReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteFolderParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteFolderParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteFolderReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteFolderReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMetadataSchemaParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMetadataSchemaParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMetadataSchemaReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMetadataSchemaReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageFormatParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageFormatParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageFormatReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveImageFormatReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFolderTreeParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFolderTreeParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFolderTreeReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFolderTreeReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetZoomTargetsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetZoomTargetsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetZoomTargetsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetZoomTargetsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetMetadataFieldsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetMetadataFieldsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetMetadataFieldsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetMetadataFieldsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetTagFieldValuesParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetTagFieldValuesParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetTagFieldValuesReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetTagFieldValuesReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveFolderParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveFolderParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveFolderReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveFolderReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetViewerConfigSettingsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetViewerConfigSettingsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetViewerConfigSettingsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetViewerConfigSettingsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageFormatsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageFormatsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageFormatsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetImageFormatsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageSetMembersParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageSetMembersParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageSetMembersReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageSetMembersReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveZoomTargetParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveZoomTargetParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveZoomTargetReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveZoomTargetReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateAssetSetParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateAssetSetParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateAssetSetReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateAssetSetReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsByMetadataParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsByMetadataParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsByMetadataReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SearchAssetsByMetadataReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CdnCacheInvalidationParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CdnCacheInvalidationParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CdnCacheInvalidationReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CdnCacheInvalidationReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchGetAssetPublishContextsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchGetAssetPublishContextsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchGetAssetPublishContextsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchGetAssetPublishContextsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckAssetNamesParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckAssetNamesParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckAssetNamesReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CheckAssetNamesReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUrlModifierParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUrlModifierParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUrlModifierReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetUrlModifierReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateCompanyMetadataParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateCompanyMetadataParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateCompanyMetadataReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateCompanyMetadataReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageServingPublishSettingsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageServingPublishSettingsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageServingPublishSettingsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetImageServingPublishSettingsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteZoomTargetParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteZoomTargetParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteZoomTargetReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteZoomTargetReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateFolderPermissionsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateFolderPermissionsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateFolderPermissionsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateFolderPermissionsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateImageSetParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateImageSetParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateImageSetReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateImageSetReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetsParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteAssetsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertyParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertyParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertyReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertyReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataSchemaParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataSchemaParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataSchemaReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataSchemaReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPublishContextsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPublishContextsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPublishContextsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPublishContextsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembershipParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembershipParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembershipReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembershipReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateMetadataFieldParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateMetadataFieldParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateMetadataFieldReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateMetadataFieldReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameAssetParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameAssetParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameAssetReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameAssetReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMaskParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMaskParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMaskReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveMaskReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMetadataParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMetadataParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMetadataReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMetadataReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembersParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembersParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembersReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembersReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembershipParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembershipParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembershipReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembershipReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.EmptyAssetsFromTrashParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.EmptyAssetsFromTrashParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.EmptyAssetsFromTrashReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.EmptyAssetsFromTrashReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCdnCacheInvalidationStatusParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCdnCacheInvalidationStatusParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCdnCacheInvalidationStatusReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCdnCacheInvalidationStatusReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetThumbAssetParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetThumbAssetParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetThumbAssetReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetThumbAssetReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActivePublishContextsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActivePublishContextsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActivePublishContextsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetActivePublishContextsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.StopJobParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.StopJobParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.StopJobReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.StopJobReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetJobLogsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetJobLogsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetJobLogsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetJobLogsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveProjectAssetsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveProjectAssetsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveProjectAssetsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveProjectAssetsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetAssetMetadataParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetAssetMetadataParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetAssetMetadataReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.BatchSetAssetMetadataReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveFolderPermissionsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveFolderPermissionsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveFolderPermissionsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveFolderPermissionsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetXMPPacketParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetXMPPacketParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetXMPPacketReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetXMPPacketReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ListCompanyMetadataParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.ListCompanyMetadataParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.ListCompanyMetadataReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.ListCompanyMetadataReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathNamesParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathNamesParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathNamesReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPhotoshopPathNamesReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsByNameParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsByNameParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsByNameReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetAssetsByNameReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddUserParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddUserParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddUserReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddUserReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPropertySetPermissionsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPropertySetPermissionsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPropertySetPermissionsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetPropertySetPermissionsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateViewerConfigSettingsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateViewerConfigSettingsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateViewerConfigSettingsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateViewerConfigSettingsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetTypeParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetTypeParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetTypeReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetTypeReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageFormatParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageFormatParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageFormatReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageFormatReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteJobParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteJobParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteJobReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteJobReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPermissionsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPermissionsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPermissionsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPermissionsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateVignettePublishFormatParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateVignettePublishFormatParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateVignettePublishFormatReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateVignettePublishFormatReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembersParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembersParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembersReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembersReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataFieldsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataFieldsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataFieldsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataFieldsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetVignettePublishFormatsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetVignettePublishFormatsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetVignettePublishFormatsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetVignettePublishFormatsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataFieldParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataFieldParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataFieldReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveMetadataFieldReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyMembershipParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyMembershipParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyMembershipReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddCompanyMembershipReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetMetadataParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetMetadataParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetMetadataReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetMetadataReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateMetadataFieldParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateMetadataFieldParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateMetadataFieldReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateMetadataFieldReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateFolderParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateFolderParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateFolderReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateFolderReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFoldersParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFoldersParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFoldersReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetFoldersReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembersParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembersParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembersReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetCompanyMembersReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GeneratePasswordParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GeneratePasswordParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GeneratePasswordReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GeneratePasswordReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupsParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupsReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteCompanyMetadataParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteCompanyMetadataParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteCompanyMetadataReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteCompanyMetadataReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembersParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembersParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembersReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddGroupMembersReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateTagFieldValuesParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateTagFieldValuesParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateTagFieldValuesReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateTagFieldValuesReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetProjectsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetProjectsParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetProjectsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetProjectsReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveGroupParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveGroupParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveGroupReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SaveGroupReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetSetParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetSetParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetSetReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.UpdateAssetSetReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddMediaPortalEventParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddMediaPortalEventParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddMediaPortalEventReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AddMediaPortalEventReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetOriginalFilePathsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetOriginalFilePathsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetOriginalFilePathsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetOriginalFilePathsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageMapParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageMapParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageMapReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteImageMapReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembershipParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembershipParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembershipReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RemoveGroupMembershipReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetProjectAssetsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetProjectAssetsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetProjectAssetsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetProjectAssetsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypesParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypesParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypesReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetPropertySetTypesReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSearchStringsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSearchStringsParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSearchStringsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetSearchStringsReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetMetadataSchemaReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateTemplateParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateTemplateParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateTemplateReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreateTemplateReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetTagFieldValuesParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetTagFieldValuesParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetTagFieldValuesReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetTagFieldValuesReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetTypeParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetTypeParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetTypeReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeletePropertySetTypeReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameProjectParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameProjectParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameProjectReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.RenameProjectReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetsParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetsParam.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetsReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.MoveAssetsReturn.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembershipParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembershipParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembershipReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetGroupMembershipReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteProjectParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteProjectParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteProjectReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.DeleteProjectReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.CreatePropertySetReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPublishStateParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPublishStateParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPublishStateReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.SetAssetPublishStateReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembersParam.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembersParam.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembersReturn.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.GetGroupMembersReturn.Factory
                        .parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthenticationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthenticationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.IpsApiFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.IpsApiFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd.AuthorizationFault.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd.AuthorizationFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

            if (com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.class.equals(type)) {

                return com.scene7.www.ipsapi.xsd._2016_01_14_beta.AuthHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());

            }

        } catch (java.lang.Exception e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }
        return null;
    }

}
   